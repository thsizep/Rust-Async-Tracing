{
  "0x4195": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": ""
  },
  "0x4234": {
    "name": "Mutex<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0x48f7": {
    "name": "{async_block_env#0}",
    "poll_symbol": ""
  },
  "0x5062": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x5446": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x5485": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x561a": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x5659": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x5698": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>",
    "poll_symbol": ""
  },
  "0x56ce": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x5704": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x5743": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0x5af0": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x5b2f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x5b65": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x5ba4": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x64e2": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x66e4": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>>",
    "poll_symbol": ""
  },
  "0x675c": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": ""
  },
  "0x677a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>>",
    "poll_symbol": ""
  },
  "0x6798": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": ""
  },
  "0x68c4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x68e2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x6c9d": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>>",
    "poll_symbol": ""
  },
  "0x6d09": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": ""
  },
  "0x6d1b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>>",
    "poll_symbol": ""
  },
  "0x6d2d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": ""
  },
  "0x6ed3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x6ee5": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x6ef7": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x6f09": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x7498": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x74cb": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x75ce": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x760a": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0x7628": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x8168": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x822b": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x8971": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x9795": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x97ef": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x9d7f": {
    "name": "{async_fn_env#0}<&str>",
    "poll_symbol": ""
  },
  "0xa02d": {
    "name": "ResponseFuture",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xa153": {
    "name": "{async_fn_env#0}",
    "poll_symbol": ""
  },
  "0xa20f": {
    "name": "{async_fn_env#0}<0xa20f>",
    "poll_symbol": ""
  },
  "0xa327": {
    "name": "{async_fn_env#0}<0xa327>",
    "poll_symbol": ""
  },
  "0xaac6": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xafdd": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xb004": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0xb0f6": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0xb0fd": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0xb393": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xb5a5": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xb80d": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0xb837": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0xc110": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)",
    "poll_symbol": ""
  },
  "0xc2c1": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0xc346": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xc36d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xf05e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xf05e>",
    "poll_symbol": ""
  },
  "0xf0cd": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xf0cd>",
    "poll_symbol": ""
  },
  "0xf99b": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xf99b>",
    "poll_symbol": ""
  },
  "0xf9da": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xf9da>",
    "poll_symbol": ""
  },
  "0xfb6f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xfb6f>",
    "poll_symbol": ""
  },
  "0xfbae": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xfbae>",
    "poll_symbol": ""
  },
  "0xfbed": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xfbed>",
    "poll_symbol": ""
  },
  "0xfc23": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xfc23>",
    "poll_symbol": ""
  },
  "0xfc59": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xfc59>",
    "poll_symbol": ""
  },
  "0xfc98": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xfc98>",
    "poll_symbol": ""
  },
  "0x10045": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10045>",
    "poll_symbol": ""
  },
  "0x10084": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x10084>",
    "poll_symbol": ""
  },
  "0x100ba": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x100ba>",
    "poll_symbol": ""
  },
  "0x100f9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x100f9>",
    "poll_symbol": ""
  },
  "0x10690": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10690>",
    "poll_symbol": ""
  },
  "0x1071c": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1071c>",
    "poll_symbol": ""
  },
  "0x108bf": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x108bf>",
    "poll_symbol": ""
  },
  "0x108f2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x108f2>",
    "poll_symbol": ""
  },
  "0x109c2": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x109c2>",
    "poll_symbol": ""
  },
  "0x109fe": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x109fe>",
    "poll_symbol": ""
  },
  "0x10a1c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x10a1c>",
    "poll_symbol": ""
  },
  "0x10cd0": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x10cd0>",
    "poll_symbol": ""
  },
  "0x10d48": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x10d48>",
    "poll_symbol": ""
  },
  "0x10d66": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x10d66>",
    "poll_symbol": ""
  },
  "0x10d84": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x10d84>",
    "poll_symbol": ""
  },
  "0x10eb0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x10eb0>",
    "poll_symbol": ""
  },
  "0x10ece": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x10ece>",
    "poll_symbol": ""
  },
  "0x11001": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x11001>",
    "poll_symbol": ""
  },
  "0x1106d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1106d>",
    "poll_symbol": ""
  },
  "0x1107f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1107f>",
    "poll_symbol": ""
  },
  "0x11091": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x11091>",
    "poll_symbol": ""
  },
  "0x11237": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x11237>",
    "poll_symbol": ""
  },
  "0x11249": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x11249>",
    "poll_symbol": ""
  },
  "0x1125b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1125b>",
    "poll_symbol": ""
  },
  "0x1126d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1126d>",
    "poll_symbol": ""
  },
  "0x11969": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x11969>",
    "poll_symbol": ""
  },
  "0x11a2c": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x11a2c>",
    "poll_symbol": ""
  },
  "0x12172": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x12172>",
    "poll_symbol": ""
  },
  "0x12bb9": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x12bb9>",
    "poll_symbol": ""
  },
  "0x12be0": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x12be0>",
    "poll_symbol": ""
  },
  "0x12c4e": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x12c4e>",
    "poll_symbol": ""
  },
  "0x12c55": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x12c55>",
    "poll_symbol": ""
  },
  "0x12ef4": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x12ef4>",
    "poll_symbol": ""
  },
  "0x130c1": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x130c1>",
    "poll_symbol": ""
  },
  "0x132ea": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x132ea>",
    "poll_symbol": ""
  },
  "0x13314": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x13314>",
    "poll_symbol": ""
  },
  "0x13f79": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x13f79>",
    "poll_symbol": ""
  },
  "0x17e7f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x17e7f>",
    "poll_symbol": ""
  },
  "0x17f1e": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x17f1e>",
    "poll_symbol": ""
  },
  "0x18ba1": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x18bbf": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1a47a": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1a47a>",
    "poll_symbol": ""
  },
  "0x1a4e6": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1a4e6>",
    "poll_symbol": ""
  },
  "0x1a4f8": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1a4f8>",
    "poll_symbol": ""
  },
  "0x1a50a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1a50a>",
    "poll_symbol": ""
  },
  "0x1a6b0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1a6b0>",
    "poll_symbol": ""
  },
  "0x1a6c2": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1a6c2>",
    "poll_symbol": ""
  },
  "0x1a6d4": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1a6d4>",
    "poll_symbol": ""
  },
  "0x1a6e6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1a6e6>",
    "poll_symbol": ""
  },
  "0x1aa82": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x1aa82>",
    "poll_symbol": ""
  },
  "0x1aabe": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x1aabe>",
    "poll_symbol": ""
  },
  "0x1ab36": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x1ab54": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1ac61": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1ac61>",
    "poll_symbol": ""
  },
  "0x1acd9": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1acd9>",
    "poll_symbol": ""
  },
  "0x1acf7": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1acf7>",
    "poll_symbol": ""
  },
  "0x1ad15": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1ad15>",
    "poll_symbol": ""
  },
  "0x1ae41": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1ae41>",
    "poll_symbol": ""
  },
  "0x1ae5f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1ae5f>",
    "poll_symbol": ""
  },
  "0x1b377": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1b377>",
    "poll_symbol": ""
  },
  "0x1b3aa": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1b3aa>",
    "poll_symbol": ""
  },
  "0x1b4ad": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1b4ad>",
    "poll_symbol": ""
  },
  "0x1b4e9": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1b4e9>",
    "poll_symbol": ""
  },
  "0x1b507": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1b507>",
    "poll_symbol": ""
  },
  "0x1c065": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1c065>",
    "poll_symbol": ""
  },
  "0x1c128": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1c128>",
    "poll_symbol": ""
  },
  "0x1c86e": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1c86e>",
    "poll_symbol": ""
  },
  "0x1dd26": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x1dd44": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x1dd90": {
    "name": "{async_block_env#0}<0x1dd90>",
    "poll_symbol": ""
  },
  "0x1e4fb": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1e4fb>",
    "poll_symbol": ""
  },
  "0x1e8df": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1e8df>",
    "poll_symbol": ""
  },
  "0x1e91e": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1e91e>",
    "poll_symbol": ""
  },
  "0x1eab3": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1eab3>",
    "poll_symbol": ""
  },
  "0x1eaf2": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1eaf2>",
    "poll_symbol": ""
  },
  "0x1eb31": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1eb31>",
    "poll_symbol": ""
  },
  "0x1eb67": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1eb67>",
    "poll_symbol": ""
  },
  "0x1eb9d": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1eb9d>",
    "poll_symbol": ""
  },
  "0x1ebdc": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1ebdc>",
    "poll_symbol": ""
  },
  "0x1ef89": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1ef89>",
    "poll_symbol": ""
  },
  "0x1efc8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1efc8>",
    "poll_symbol": ""
  },
  "0x1effe": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1effe>",
    "poll_symbol": ""
  },
  "0x1f03d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1f03d>",
    "poll_symbol": ""
  },
  "0x1f97b": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1f97b>",
    "poll_symbol": ""
  },
  "0x1fb29": {
    "name": "{async_fn_env#0}<&str><0x1fb29>",
    "poll_symbol": ""
  },
  "0x1fdd7": {
    "name": "ResponseFuture<0x1fdd7>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1fefd": {
    "name": "{async_fn_env#0}<0x1fefd>",
    "poll_symbol": ""
  },
  "0x1ffb9": {
    "name": "{async_fn_env#0}<0x1ffb9>",
    "poll_symbol": ""
  },
  "0x200d1": {
    "name": "{async_fn_env#0}<0x200d1>",
    "poll_symbol": ""
  },
  "0x2085c": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x2085c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x20d73": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x20d73>",
    "poll_symbol": ""
  },
  "0x20d9a": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x20d9a>",
    "poll_symbol": ""
  },
  "0x20e8c": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x20e8c>",
    "poll_symbol": ""
  },
  "0x20e93": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x20e93>",
    "poll_symbol": ""
  },
  "0x21129": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x21129>",
    "poll_symbol": ""
  },
  "0x2133b": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2133b>",
    "poll_symbol": ""
  },
  "0x215a3": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x215a3>",
    "poll_symbol": ""
  },
  "0x215cd": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x215cd>",
    "poll_symbol": ""
  },
  "0x21ea6": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x21ea6>",
    "poll_symbol": ""
  },
  "0x22057": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x22057>",
    "poll_symbol": ""
  },
  "0x220dc": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x220dc>",
    "poll_symbol": ""
  },
  "0x22103": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x22103>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2d061": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2d061>",
    "poll_symbol": ""
  },
  "0x2d4fa": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2d4fa>",
    "poll_symbol": ""
  },
  "0x2f51c": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2f51c>",
    "poll_symbol": ""
  },
  "0x30029": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x30029>",
    "poll_symbol": ""
  },
  "0x30068": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x30068>",
    "poll_symbol": ""
  },
  "0x30188": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x30188>",
    "poll_symbol": ""
  },
  "0x301c7": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x301c7>",
    "poll_symbol": ""
  },
  "0x30206": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x30206>",
    "poll_symbol": ""
  },
  "0x3023c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3023c>",
    "poll_symbol": ""
  },
  "0x30272": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x30272>",
    "poll_symbol": ""
  },
  "0x302b1": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x302b1>",
    "poll_symbol": ""
  },
  "0x3065e": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3065e>",
    "poll_symbol": ""
  },
  "0x3069d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3069d>",
    "poll_symbol": ""
  },
  "0x306d3": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x306d3>",
    "poll_symbol": ""
  },
  "0x30712": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x30712>",
    "poll_symbol": ""
  },
  "0x30fa9": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x30fa9>",
    "poll_symbol": ""
  },
  "0x3154f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3154f>",
    "poll_symbol": ""
  },
  "0x3156d": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x3156d>",
    "poll_symbol": ""
  },
  "0x3158b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3158b>",
    "poll_symbol": ""
  },
  "0x317e2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x317e2>",
    "poll_symbol": ""
  },
  "0x31800": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x31800>",
    "poll_symbol": ""
  },
  "0x31c5f": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x31c5f>",
    "poll_symbol": ""
  },
  "0x31cb9": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x31cb9>",
    "poll_symbol": ""
  },
  "0x31ccb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x31ccb>",
    "poll_symbol": ""
  },
  "0x31cdd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x31cdd>",
    "poll_symbol": ""
  },
  "0x31e45": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x31e45>",
    "poll_symbol": ""
  },
  "0x31e57": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x31e57>",
    "poll_symbol": ""
  },
  "0x31e69": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x31e69>",
    "poll_symbol": ""
  },
  "0x31e7b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x31e7b>",
    "poll_symbol": ""
  },
  "0x32ee4": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x32ee4>",
    "poll_symbol": ""
  },
  "0x32fa7": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x32fa7>",
    "poll_symbol": ""
  },
  "0x33628": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x33628>",
    "poll_symbol": ""
  },
  "0x33ee5": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x33ee5>",
    "poll_symbol": ""
  },
  "0x33f3f": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x33f3f>",
    "poll_symbol": ""
  },
  "0x33f5d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x33f5d>",
    "poll_symbol": ""
  },
  "0x33f7b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x33f7b>",
    "poll_symbol": ""
  },
  "0x34089": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x34089>",
    "poll_symbol": ""
  },
  "0x340a7": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x340a7>",
    "poll_symbol": ""
  },
  "0x347d6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x347d6>",
    "poll_symbol": ""
  },
  "0x34812": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x34812>",
    "poll_symbol": ""
  },
  "0x351d5": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x351d5>",
    "poll_symbol": ""
  },
  "0x353e1": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x353e1>",
    "poll_symbol": ""
  },
  "0x35627": {
    "name": "{async_block_env#0}<0x35627>",
    "poll_symbol": ""
  },
  "0x35776": {
    "name": "{async_fn_env#0}<&str><0x35776>",
    "poll_symbol": ""
  },
  "0x35a24": {
    "name": "ResponseFuture<0x35a24>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x35b4a": {
    "name": "{async_fn_env#0}<0x35b4a>",
    "poll_symbol": ""
  },
  "0x35c06": {
    "name": "{async_fn_env#0}<0x35c06>",
    "poll_symbol": ""
  },
  "0x35d1e": {
    "name": "{async_fn_env#0}<0x35d1e>",
    "poll_symbol": ""
  },
  "0x3649b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x3649b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x36970": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x36970>",
    "poll_symbol": ""
  },
  "0x36997": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x36997>",
    "poll_symbol": ""
  },
  "0x36a89": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x36a89>",
    "poll_symbol": ""
  },
  "0x36a90": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x36a90>",
    "poll_symbol": ""
  },
  "0x36d61": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x36d61>",
    "poll_symbol": ""
  },
  "0x36d8b": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x36d8b>",
    "poll_symbol": ""
  },
  "0x373d0": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x373d0>",
    "poll_symbol": ""
  },
  "0x37581": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x37581>",
    "poll_symbol": ""
  },
  "0x37606": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x37606>",
    "poll_symbol": ""
  },
  "0x3762d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x3762d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x3a01f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x3a01f>",
    "poll_symbol": ""
  },
  "0x3a0be": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x3a0be>",
    "poll_symbol": ""
  },
  "0x3ac94": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x3ac94>",
    "poll_symbol": ""
  },
  "0x3acb2": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x3acb2>",
    "poll_symbol": ""
  },
  "0x3b76a": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x3b76a>",
    "poll_symbol": ""
  },
  "0x3b788": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x3b7a6": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x3b7a6>",
    "poll_symbol": ""
  },
  "0x3b7c4": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x3c946": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x3c946>",
    "poll_symbol": ""
  },
  "0x3c9c0": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x3c9c0>",
    "poll_symbol": ""
  },
  "0x3ca1a": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x3ca94": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x3ca94>",
    "poll_symbol": ""
  },
  "0x3caf0": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x3caf0>",
    "poll_symbol": ""
  },
  "0x3cb0e": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x3cc59": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x3cc59>",
    "poll_symbol": ""
  },
  "0x3ccd1": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3ccd1>",
    "poll_symbol": ""
  },
  "0x3ccef": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x3ccef>",
    "poll_symbol": ""
  },
  "0x3cd0d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x3cd0d>",
    "poll_symbol": ""
  },
  "0x3ce39": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3ce39>",
    "poll_symbol": ""
  },
  "0x3ce57": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3ce57>",
    "poll_symbol": ""
  },
  "0x3d230": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x3d230>",
    "poll_symbol": ""
  },
  "0x3d29c": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3d29c>",
    "poll_symbol": ""
  },
  "0x3d2ae": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x3d2ae>",
    "poll_symbol": ""
  },
  "0x3d2c0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x3d2c0>",
    "poll_symbol": ""
  },
  "0x3d466": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3d466>",
    "poll_symbol": ""
  },
  "0x3d478": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3d478>",
    "poll_symbol": ""
  },
  "0x3d48a": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x3d48a>",
    "poll_symbol": ""
  },
  "0x3d49c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3d49c>",
    "poll_symbol": ""
  },
  "0x3da61": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3da61>",
    "poll_symbol": ""
  },
  "0x3da94": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3da94>",
    "poll_symbol": ""
  },
  "0x3db97": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3db97>",
    "poll_symbol": ""
  },
  "0x3dbd3": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x3dbd3>",
    "poll_symbol": ""
  },
  "0x3dbf1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3dbf1>",
    "poll_symbol": ""
  },
  "0x3e74f": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x3e74f>",
    "poll_symbol": ""
  },
  "0x3e812": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3e812>",
    "poll_symbol": ""
  },
  "0x3ef58": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x3ef58>",
    "poll_symbol": ""
  },
  "0x4070c": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x4070c>",
    "poll_symbol": ""
  },
  "0x4072a": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x4072a>",
    "poll_symbol": ""
  },
  "0x40762": {
    "name": "{async_block_env#0}<0x40762>",
    "poll_symbol": ""
  },
  "0x40ecd": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x40ecd>",
    "poll_symbol": ""
  },
  "0x412b1": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x412b1>",
    "poll_symbol": ""
  },
  "0x412f0": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x412f0>",
    "poll_symbol": ""
  },
  "0x41485": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x41485>",
    "poll_symbol": ""
  },
  "0x414c4": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x414c4>",
    "poll_symbol": ""
  },
  "0x41503": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x41503>",
    "poll_symbol": ""
  },
  "0x41539": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x41539>",
    "poll_symbol": ""
  },
  "0x4156f": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x4156f>",
    "poll_symbol": ""
  },
  "0x415ae": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x415ae>",
    "poll_symbol": ""
  },
  "0x4195b": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4195b>",
    "poll_symbol": ""
  },
  "0x4199a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x4199a>",
    "poll_symbol": ""
  },
  "0x419d0": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x419d0>",
    "poll_symbol": ""
  },
  "0x41a0f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x41a0f>",
    "poll_symbol": ""
  },
  "0x4234d": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4234d>",
    "poll_symbol": ""
  },
  "0x424fb": {
    "name": "{async_fn_env#0}<&str><0x424fb>",
    "poll_symbol": ""
  },
  "0x427a9": {
    "name": "ResponseFuture<0x427a9>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x428cf": {
    "name": "{async_fn_env#0}<0x428cf>",
    "poll_symbol": ""
  },
  "0x4298b": {
    "name": "{async_fn_env#0}<0x4298b>",
    "poll_symbol": ""
  },
  "0x42aa3": {
    "name": "{async_fn_env#0}<0x42aa3>",
    "poll_symbol": ""
  },
  "0x43242": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x43242>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x43759": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x43759>",
    "poll_symbol": ""
  },
  "0x43780": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x43780>",
    "poll_symbol": ""
  },
  "0x43872": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x43872>",
    "poll_symbol": ""
  },
  "0x43879": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x43879>",
    "poll_symbol": ""
  },
  "0x43b0f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x43b0f>",
    "poll_symbol": ""
  },
  "0x43d21": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x43d21>",
    "poll_symbol": ""
  },
  "0x43f89": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x43f89>",
    "poll_symbol": ""
  },
  "0x43fb3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x43fb3>",
    "poll_symbol": ""
  },
  "0x4488c": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x4488c>",
    "poll_symbol": ""
  },
  "0x44a3d": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x44a3d>",
    "poll_symbol": ""
  },
  "0x44ac2": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x44ac2>",
    "poll_symbol": ""
  },
  "0x44ae9": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x44ae9>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x47ec8": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x47ec8>",
    "poll_symbol": ""
  },
  "0x47f67": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x47f67>",
    "poll_symbol": ""
  },
  "0x4a2f0": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x4a2f0>",
    "poll_symbol": ""
  },
  "0x4a323": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x4a323>",
    "poll_symbol": ""
  },
  "0x4a426": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x4a426>",
    "poll_symbol": ""
  },
  "0x4a462": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x4a462>",
    "poll_symbol": ""
  },
  "0x4a480": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x4a480>",
    "poll_symbol": ""
  },
  "0x4aa5e": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x4aa5e>",
    "poll_symbol": ""
  },
  "0x4aad6": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x4aad6>",
    "poll_symbol": ""
  },
  "0x4aaf4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x4aaf4>",
    "poll_symbol": ""
  },
  "0x4ab12": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x4ab12>",
    "poll_symbol": ""
  },
  "0x4ac3e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x4ac3e>",
    "poll_symbol": ""
  },
  "0x4ac5c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x4ac5c>",
    "poll_symbol": ""
  },
  "0x4b005": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x4b005>",
    "poll_symbol": ""
  },
  "0x4b071": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x4b071>",
    "poll_symbol": ""
  },
  "0x4b083": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x4b083>",
    "poll_symbol": ""
  },
  "0x4b095": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x4b095>",
    "poll_symbol": ""
  },
  "0x4b23b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x4b23b>",
    "poll_symbol": ""
  },
  "0x4b24d": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x4b24d>",
    "poll_symbol": ""
  },
  "0x4b25f": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x4b25f>",
    "poll_symbol": ""
  },
  "0x4b271": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x4b271>",
    "poll_symbol": ""
  },
  "0x4bca9": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x4bca9>",
    "poll_symbol": ""
  },
  "0x4bd6c": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x4bd6c>",
    "poll_symbol": ""
  },
  "0x4c4b2": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x4c4b2>",
    "poll_symbol": ""
  },
  "0x4d276": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x4d276>",
    "poll_symbol": ""
  },
  "0x4da77": {
    "name": "ResponseFuture<0x4da77>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x4e245": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x4e245>",
    "poll_symbol": ""
  },
  "0x4e284": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x4e284>",
    "poll_symbol": ""
  },
  "0x4e419": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x4e419>",
    "poll_symbol": ""
  },
  "0x4e458": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x4e458>",
    "poll_symbol": ""
  },
  "0x4e497": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x4e497>",
    "poll_symbol": ""
  },
  "0x4e4cd": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x4e4cd>",
    "poll_symbol": ""
  },
  "0x4e503": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x4e503>",
    "poll_symbol": ""
  },
  "0x4e542": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x4e542>",
    "poll_symbol": ""
  },
  "0x4e8ef": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4e8ef>",
    "poll_symbol": ""
  },
  "0x4e92e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x4e92e>",
    "poll_symbol": ""
  },
  "0x4e964": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x4e964>",
    "poll_symbol": ""
  },
  "0x4e9a3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x4e9a3>",
    "poll_symbol": ""
  },
  "0x4f806": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4f806>",
    "poll_symbol": ""
  },
  "0x4f991": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4f991>",
    "poll_symbol": ""
  },
  "0x4fc9c": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x4fc9c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x501b3": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x501b3>",
    "poll_symbol": ""
  },
  "0x501da": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x501da>",
    "poll_symbol": ""
  },
  "0x50248": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x50248>",
    "poll_symbol": ""
  },
  "0x5024f": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5024f>",
    "poll_symbol": ""
  },
  "0x504ee": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x504ee>",
    "poll_symbol": ""
  },
  "0x50700": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x50700>",
    "poll_symbol": ""
  },
  "0x50968": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x50968>",
    "poll_symbol": ""
  },
  "0x50992": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x50992>",
    "poll_symbol": ""
  },
  "0x5126b": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x5126b>",
    "poll_symbol": ""
  },
  "0x514e6": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x514e6>",
    "poll_symbol": ""
  },
  "0x5156b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5156b>",
    "poll_symbol": ""
  },
  "0x51592": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x51592>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x51f38": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x51f61": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x51f90": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x51fa3": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x55fbf": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x55fbf>",
    "poll_symbol": ""
  },
  "0x5648e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x5648e>",
    "poll_symbol": ""
  },
  "0x5702a": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5702a>",
    "poll_symbol": ""
  },
  "0x57069": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x57069>",
    "poll_symbol": ""
  },
  "0x57189": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x57189>",
    "poll_symbol": ""
  },
  "0x571c8": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x571c8>",
    "poll_symbol": ""
  },
  "0x57207": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x57207>",
    "poll_symbol": ""
  },
  "0x5723d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5723d>",
    "poll_symbol": ""
  },
  "0x57273": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x57273>",
    "poll_symbol": ""
  },
  "0x572b2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x572b2>",
    "poll_symbol": ""
  },
  "0x5765f": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x5765f>",
    "poll_symbol": ""
  },
  "0x5769e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x5769e>",
    "poll_symbol": ""
  },
  "0x576d4": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x576d4>",
    "poll_symbol": ""
  },
  "0x57713": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x57713>",
    "poll_symbol": ""
  },
  "0x58010": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x58010>",
    "poll_symbol": ""
  },
  "0x58165": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x58165>",
    "poll_symbol": ""
  },
  "0x58778": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x58778>",
    "poll_symbol": ""
  },
  "0x58796": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x58796>",
    "poll_symbol": ""
  },
  "0x587b4": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x587b4>",
    "poll_symbol": ""
  },
  "0x58a47": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x58a47>",
    "poll_symbol": ""
  },
  "0x58a65": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x58a65>",
    "poll_symbol": ""
  },
  "0x58ec4": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x58ec4>",
    "poll_symbol": ""
  },
  "0x58f1e": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x58f1e>",
    "poll_symbol": ""
  },
  "0x58f30": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x58f30>",
    "poll_symbol": ""
  },
  "0x58f42": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x58f42>",
    "poll_symbol": ""
  },
  "0x590ce": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x590ce>",
    "poll_symbol": ""
  },
  "0x590e0": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x590e0>",
    "poll_symbol": ""
  },
  "0x590f2": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x590f2>",
    "poll_symbol": ""
  },
  "0x59104": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x59104>",
    "poll_symbol": ""
  },
  "0x5a198": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5a198>",
    "poll_symbol": ""
  },
  "0x5a25b": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5a25b>",
    "poll_symbol": ""
  },
  "0x5a93d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x5a93d>",
    "poll_symbol": ""
  },
  "0x5b1fb": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5b1fb>",
    "poll_symbol": ""
  },
  "0x5b255": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5b255>",
    "poll_symbol": ""
  },
  "0x5b273": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5b273>",
    "poll_symbol": ""
  },
  "0x5b291": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5b291>",
    "poll_symbol": ""
  },
  "0x5b3bd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x5b3bd>",
    "poll_symbol": ""
  },
  "0x5b3db": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x5b3db>",
    "poll_symbol": ""
  },
  "0x5bad1": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x5bad1>",
    "poll_symbol": ""
  },
  "0x5baef": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x5baef>",
    "poll_symbol": ""
  },
  "0x5bb2b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x5bb2b>",
    "poll_symbol": ""
  },
  "0x5bb67": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x5bb67>",
    "poll_symbol": ""
  },
  "0x5c4f1": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x5c4f1>",
    "poll_symbol": ""
  },
  "0x5c6fd": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x5c6fd>",
    "poll_symbol": ""
  },
  "0x5c97e": {
    "name": "{async_block_env#0}<0x5c97e>",
    "poll_symbol": ""
  },
  "0x5cacd": {
    "name": "{async_fn_env#0}<&str><0x5cacd>",
    "poll_symbol": ""
  },
  "0x5cd7b": {
    "name": "ResponseFuture<0x5cd7b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x5cea1": {
    "name": "{async_fn_env#0}<0x5cea1>",
    "poll_symbol": ""
  },
  "0x5cf5d": {
    "name": "{async_fn_env#0}<0x5cf5d>",
    "poll_symbol": ""
  },
  "0x5d075": {
    "name": "{async_fn_env#0}<0x5d075>",
    "poll_symbol": ""
  },
  "0x5d7f2": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x5d7f2>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x5dcc7": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5dcc7>",
    "poll_symbol": ""
  },
  "0x5dcee": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x5dcee>",
    "poll_symbol": ""
  },
  "0x5dde0": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5dde0>",
    "poll_symbol": ""
  },
  "0x5dde7": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5dde7>",
    "poll_symbol": ""
  },
  "0x5e0b8": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e0b8>",
    "poll_symbol": ""
  },
  "0x5e0e2": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e0e2>",
    "poll_symbol": ""
  },
  "0x5e734": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x5e734>",
    "poll_symbol": ""
  },
  "0x5e8e5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x5e8e5>",
    "poll_symbol": ""
  },
  "0x5e96a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5e96a>",
    "poll_symbol": ""
  },
  "0x5e991": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x5e991>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5f394": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x5f394>",
    "poll_symbol": ""
  },
  "0x5f6c1": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5f6c1>",
    "poll_symbol": ""
  },
  "0x5fe5c": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5fe5c>",
    "poll_symbol": ""
  },
  "0x5feb6": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5feb6>",
    "poll_symbol": ""
  },
  "0x5fed4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5fed4>",
    "poll_symbol": ""
  },
  "0x5fef2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5fef2>",
    "poll_symbol": ""
  },
  "0x60000": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x60000>",
    "poll_symbol": ""
  },
  "0x6001e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x6001e>",
    "poll_symbol": ""
  },
  "0x60543": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x60543>",
    "poll_symbol": ""
  },
  "0x60579": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x60579>",
    "poll_symbol": ""
  },
  "0x6058b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6058b>",
    "poll_symbol": ""
  },
  "0x6059d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6059d>",
    "poll_symbol": ""
  },
  "0x60705": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x60705>",
    "poll_symbol": ""
  },
  "0x60717": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x60717>",
    "poll_symbol": ""
  },
  "0x60729": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x60729>",
    "poll_symbol": ""
  },
  "0x6073b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x6073b>",
    "poll_symbol": ""
  },
  "0x62e50": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x62e50>",
    "poll_symbol": ""
  },
  "0x62f13": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x62f13>",
    "poll_symbol": ""
  },
  "0x63594": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x63594>",
    "poll_symbol": ""
  },
  "0x6380b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6380b>",
    "poll_symbol": ""
  },
  "0x63829": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x63829>",
    "poll_symbol": ""
  },
  "0x63ca4": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x63ca4>",
    "poll_symbol": ""
  },
  "0x63cc2": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x63cc2>",
    "poll_symbol": ""
  },
  "0x63ce0": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x63ce0>",
    "poll_symbol": ""
  },
  "0x68cc4": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x68cc4>",
    "poll_symbol": ""
  },
  "0x68df2": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x68df2>",
    "poll_symbol": ""
  },
  "0x698c0": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x698c0>",
    "poll_symbol": ""
  },
  "0x698ff": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x698ff>",
    "poll_symbol": ""
  },
  "0x69a1f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x69a1f>",
    "poll_symbol": ""
  },
  "0x69a5e": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x69a5e>",
    "poll_symbol": ""
  },
  "0x69a9d": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x69a9d>",
    "poll_symbol": ""
  },
  "0x69ad3": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x69ad3>",
    "poll_symbol": ""
  },
  "0x69b09": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x69b09>",
    "poll_symbol": ""
  },
  "0x69b48": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x69b48>",
    "poll_symbol": ""
  },
  "0x69ef5": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x69ef5>",
    "poll_symbol": ""
  },
  "0x69f34": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x69f34>",
    "poll_symbol": ""
  },
  "0x69f6a": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x69f6a>",
    "poll_symbol": ""
  },
  "0x69fa9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x69fa9>",
    "poll_symbol": ""
  },
  "0x6ae23": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x6ae23>",
    "poll_symbol": ""
  },
  "0x6b02f": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x6b02f>",
    "poll_symbol": ""
  },
  "0x6c033": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x6c033>",
    "poll_symbol": ""
  },
  "0x6c05a": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x6c05a>",
    "poll_symbol": ""
  },
  "0x6c061": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x6c061>",
    "poll_symbol": ""
  },
  "0x6c068": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x6c068>",
    "poll_symbol": ""
  },
  "0x6c289": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6c289>",
    "poll_symbol": ""
  },
  "0x6c2b3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6c2b3>",
    "poll_symbol": ""
  },
  "0x6c8f8": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x6c8f8>",
    "poll_symbol": ""
  },
  "0x6cbed": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x6cc00": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x6cc18": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x6cc18>",
    "poll_symbol": ""
  },
  "0x6cc36": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x6cc36>",
    "poll_symbol": ""
  },
  "0x6cd17": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x6cd17>",
    "poll_symbol": ""
  },
  "0x6cd35": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x6cd35>",
    "poll_symbol": ""
  },
  "0x6d873": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x6d873>",
    "poll_symbol": ""
  },
  "0x6d891": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x6d891>",
    "poll_symbol": ""
  },
  "0x6d8af": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x6d8af>",
    "poll_symbol": ""
  },
  "0x6d8cd": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x6d8cd>",
    "poll_symbol": ""
  },
  "0x7109d": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x7109d>",
    "poll_symbol": ""
  },
  "0x7160e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x7160e>",
    "poll_symbol": ""
  },
  "0x71f21": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x71f21>",
    "poll_symbol": ""
  },
  "0x71f60": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x71f60>",
    "poll_symbol": ""
  },
  "0x72080": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x72080>",
    "poll_symbol": ""
  },
  "0x720bf": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x720bf>",
    "poll_symbol": ""
  },
  "0x720fe": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x720fe>",
    "poll_symbol": ""
  },
  "0x72134": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x72134>",
    "poll_symbol": ""
  },
  "0x7216a": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x7216a>",
    "poll_symbol": ""
  },
  "0x721a9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x721a9>",
    "poll_symbol": ""
  },
  "0x72556": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x72556>",
    "poll_symbol": ""
  },
  "0x72595": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x72595>",
    "poll_symbol": ""
  },
  "0x725cb": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x725cb>",
    "poll_symbol": ""
  },
  "0x7260a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x7260a>",
    "poll_symbol": ""
  },
  "0x72fe9": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x72fe9>",
    "poll_symbol": ""
  },
  "0x73198": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x73198>",
    "poll_symbol": ""
  },
  "0x73589": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x73589>",
    "poll_symbol": ""
  },
  "0x735a7": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x735a7>",
    "poll_symbol": ""
  },
  "0x735c5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x735c5>",
    "poll_symbol": ""
  },
  "0x7392a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x7392a>",
    "poll_symbol": ""
  },
  "0x73948": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x73948>",
    "poll_symbol": ""
  },
  "0x73c99": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x73c99>",
    "poll_symbol": ""
  },
  "0x73cf3": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x73cf3>",
    "poll_symbol": ""
  },
  "0x73d05": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x73d05>",
    "poll_symbol": ""
  },
  "0x73d17": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x73d17>",
    "poll_symbol": ""
  },
  "0x73eb5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x73eb5>",
    "poll_symbol": ""
  },
  "0x73ec7": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x73ec7>",
    "poll_symbol": ""
  },
  "0x73ed9": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x73ed9>",
    "poll_symbol": ""
  },
  "0x73eeb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x73eeb>",
    "poll_symbol": ""
  },
  "0x74e94": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x74e94>",
    "poll_symbol": ""
  },
  "0x74f57": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x74f57>",
    "poll_symbol": ""
  },
  "0x7569d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x7569d>",
    "poll_symbol": ""
  },
  "0x75f87": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x75f87>",
    "poll_symbol": ""
  },
  "0x75fe1": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x75fe1>",
    "poll_symbol": ""
  },
  "0x75fff": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x75fff>",
    "poll_symbol": ""
  },
  "0x7601d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x7601d>",
    "poll_symbol": ""
  },
  "0x76149": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x76149>",
    "poll_symbol": ""
  },
  "0x76167": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x76167>",
    "poll_symbol": ""
  },
  "0x76a53": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x76a71": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x76a71>",
    "poll_symbol": ""
  },
  "0x76a8f": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x76a8f>",
    "poll_symbol": ""
  },
  "0x76acb": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x76acb>",
    "poll_symbol": ""
  },
  "0x76b07": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x76b25": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x76b25>",
    "poll_symbol": ""
  },
  "0x76b43": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x76b43>",
    "poll_symbol": ""
  },
  "0x76b7f": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x76b7f>",
    "poll_symbol": ""
  },
  "0x76d66": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x76d66>",
    "poll_symbol": ""
  },
  "0x76d84": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x76d84>",
    "poll_symbol": ""
  },
  "0x7757b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x7757b>",
    "poll_symbol": ""
  },
  "0x77787": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x77787>",
    "poll_symbol": ""
  },
  "0x77917": {
    "name": "{async_block_env#0}<0x77917>",
    "poll_symbol": ""
  },
  "0x77a66": {
    "name": "{async_fn_env#0}<&str><0x77a66>",
    "poll_symbol": ""
  },
  "0x77d14": {
    "name": "ResponseFuture<0x77d14>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x77e3a": {
    "name": "{async_fn_env#0}<0x77e3a>",
    "poll_symbol": ""
  },
  "0x77ef6": {
    "name": "{async_fn_env#0}<0x77ef6>",
    "poll_symbol": ""
  },
  "0x7800e": {
    "name": "{async_fn_env#0}<0x7800e>",
    "poll_symbol": ""
  },
  "0x7878b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x7878b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x78c46": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x78c46>",
    "poll_symbol": ""
  },
  "0x78c6d": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x78c6d>",
    "poll_symbol": ""
  },
  "0x78d5f": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x78d5f>",
    "poll_symbol": ""
  },
  "0x78d66": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x78d66>",
    "poll_symbol": ""
  },
  "0x79037": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x79037>",
    "poll_symbol": ""
  },
  "0x79061": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x79061>",
    "poll_symbol": ""
  },
  "0x796b3": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x796b3>",
    "poll_symbol": ""
  },
  "0x79864": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x79864>",
    "poll_symbol": ""
  },
  "0x798e9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x798e9>",
    "poll_symbol": ""
  },
  "0x79910": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x79910>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7beb5": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x7beb5>",
    "poll_symbol": ""
  },
  "0x7bede": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x7bede>",
    "poll_symbol": ""
  },
  "0x7c51f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x7c51f>",
    "poll_symbol": ""
  },
  "0x7c532": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x7c532>",
    "poll_symbol": ""
  },
  "0x801ea": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x801ea>",
    "poll_symbol": ""
  },
  "0x80683": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x80683>",
    "poll_symbol": ""
  },
  "0x811b7": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x811b7>",
    "poll_symbol": ""
  },
  "0x811f6": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x811f6>",
    "poll_symbol": ""
  },
  "0x81316": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x81316>",
    "poll_symbol": ""
  },
  "0x81355": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x81355>",
    "poll_symbol": ""
  },
  "0x81394": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x81394>",
    "poll_symbol": ""
  },
  "0x813ca": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x813ca>",
    "poll_symbol": ""
  },
  "0x81400": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x81400>",
    "poll_symbol": ""
  },
  "0x8143f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x8143f>",
    "poll_symbol": ""
  },
  "0x817ec": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x817ec>",
    "poll_symbol": ""
  },
  "0x8182b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x8182b>",
    "poll_symbol": ""
  },
  "0x81861": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x81861>",
    "poll_symbol": ""
  },
  "0x818a0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x818a0>",
    "poll_symbol": ""
  },
  "0x821df": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x821df>",
    "poll_symbol": ""
  },
  "0x82367": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x82367>",
    "poll_symbol": ""
  },
  "0x82866": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x82866>",
    "poll_symbol": ""
  },
  "0x82884": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x82884>",
    "poll_symbol": ""
  },
  "0x828a2": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x828a2>",
    "poll_symbol": ""
  },
  "0x82df9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x82df9>",
    "poll_symbol": ""
  },
  "0x82e17": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x82e17>",
    "poll_symbol": ""
  },
  "0x83294": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x83294>",
    "poll_symbol": ""
  },
  "0x832ee": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x832ee>",
    "poll_symbol": ""
  },
  "0x83300": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x83300>",
    "poll_symbol": ""
  },
  "0x83312": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x83312>",
    "poll_symbol": ""
  },
  "0x8347a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x8347a>",
    "poll_symbol": ""
  },
  "0x8348c": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x8348c>",
    "poll_symbol": ""
  },
  "0x8349e": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x8349e>",
    "poll_symbol": ""
  },
  "0x834b0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x834b0>",
    "poll_symbol": ""
  },
  "0x8452b": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x8452b>",
    "poll_symbol": ""
  },
  "0x845ee": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x845ee>",
    "poll_symbol": ""
  },
  "0x84c6f": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x84c6f>",
    "poll_symbol": ""
  },
  "0x857d5": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x857d5>",
    "poll_symbol": ""
  },
  "0x8582f": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x8582f>",
    "poll_symbol": ""
  },
  "0x8584d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x8584d>",
    "poll_symbol": ""
  },
  "0x8586b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x8586b>",
    "poll_symbol": ""
  },
  "0x85979": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x85979>",
    "poll_symbol": ""
  },
  "0x85997": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x85997>",
    "poll_symbol": ""
  },
  "0x860ab": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x860ab>",
    "poll_symbol": ""
  },
  "0x860e7": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x860e7>",
    "poll_symbol": ""
  },
  "0x86123": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x86123>",
    "poll_symbol": ""
  },
  "0x86141": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x86141>",
    "poll_symbol": ""
  },
  "0x86acb": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x86acb>",
    "poll_symbol": ""
  },
  "0x86cd7": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x86cd7>",
    "poll_symbol": ""
  },
  "0x86f37": {
    "name": "{async_block_env#0}<0x86f37>",
    "poll_symbol": ""
  },
  "0x87086": {
    "name": "{async_fn_env#0}<&str><0x87086>",
    "poll_symbol": ""
  },
  "0x87334": {
    "name": "ResponseFuture<0x87334>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x8745a": {
    "name": "{async_fn_env#0}<0x8745a>",
    "poll_symbol": ""
  },
  "0x87516": {
    "name": "{async_fn_env#0}<0x87516>",
    "poll_symbol": ""
  },
  "0x8762e": {
    "name": "{async_fn_env#0}<0x8762e>",
    "poll_symbol": ""
  },
  "0x87dab": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x87dab>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x88280": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x88280>",
    "poll_symbol": ""
  },
  "0x882a7": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x882a7>",
    "poll_symbol": ""
  },
  "0x88399": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x88399>",
    "poll_symbol": ""
  },
  "0x883a0": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x883a0>",
    "poll_symbol": ""
  },
  "0x88671": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x88671>",
    "poll_symbol": ""
  },
  "0x8869b": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x8869b>",
    "poll_symbol": ""
  },
  "0x88ce0": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x88ce0>",
    "poll_symbol": ""
  },
  "0x88e91": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x88e91>",
    "poll_symbol": ""
  },
  "0x88f16": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x88f16>",
    "poll_symbol": ""
  },
  "0x88f3d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x88f3d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x8df67": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x8df67>",
    "poll_symbol": ""
  },
  "0x8df90": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x8df90>",
    "poll_symbol": ""
  },
  "0x8dfbf": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x8dfbf>",
    "poll_symbol": ""
  },
  "0x8dfd2": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x8dfd2>",
    "poll_symbol": ""
  },
  "0x8fac6": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x8fad9": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": ""
  },
  "0x8faec": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x8faff": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x8fb12": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x8fb25": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x8fb38": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x8fb4b": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": ""
  },
  "0x920df": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x920df>",
    "poll_symbol": ""
  },
  "0x9265e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x9265e>",
    "poll_symbol": ""
  },
  "0x927a4": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x927a4>",
    "poll_symbol": ""
  },
  "0x930dc": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x930dc>",
    "poll_symbol": ""
  },
  "0x9311b": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x9311b>",
    "poll_symbol": ""
  },
  "0x9323b": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x9323b>",
    "poll_symbol": ""
  },
  "0x9327a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x9327a>",
    "poll_symbol": ""
  },
  "0x932b9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x932b9>",
    "poll_symbol": ""
  },
  "0x932ef": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x932ef>",
    "poll_symbol": ""
  },
  "0x93325": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x93325>",
    "poll_symbol": ""
  },
  "0x93364": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x93364>",
    "poll_symbol": ""
  },
  "0x93711": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x93711>",
    "poll_symbol": ""
  },
  "0x93750": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x93750>",
    "poll_symbol": ""
  },
  "0x93786": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x93786>",
    "poll_symbol": ""
  },
  "0x937c5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x937c5>",
    "poll_symbol": ""
  },
  "0x94273": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x94273>",
    "poll_symbol": ""
  },
  "0x9474a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x9474a>",
    "poll_symbol": ""
  },
  "0x94768": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x94768>",
    "poll_symbol": ""
  },
  "0x94786": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x94786>",
    "poll_symbol": ""
  },
  "0x94daf": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x94daf>",
    "poll_symbol": ""
  },
  "0x94dcd": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x94dcd>",
    "poll_symbol": ""
  },
  "0x95160": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x95160>",
    "poll_symbol": ""
  },
  "0x951ba": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x951ba>",
    "poll_symbol": ""
  },
  "0x951cc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x951cc>",
    "poll_symbol": ""
  },
  "0x951de": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x951de>",
    "poll_symbol": ""
  },
  "0x9537c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x9537c>",
    "poll_symbol": ""
  },
  "0x9538e": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x9538e>",
    "poll_symbol": ""
  },
  "0x953a0": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x953a0>",
    "poll_symbol": ""
  },
  "0x953b2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x953b2>",
    "poll_symbol": ""
  },
  "0x963fc": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x963fc>",
    "poll_symbol": ""
  },
  "0x964bf": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x964bf>",
    "poll_symbol": ""
  },
  "0x96ba1": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x96ba1>",
    "poll_symbol": ""
  },
  "0x976d2": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x976d2>",
    "poll_symbol": ""
  },
  "0x9772c": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x9772c>",
    "poll_symbol": ""
  },
  "0x9774a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x9774a>",
    "poll_symbol": ""
  },
  "0x97768": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x97768>",
    "poll_symbol": ""
  },
  "0x97894": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x97894>",
    "poll_symbol": ""
  },
  "0x978b2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x978b2>",
    "poll_symbol": ""
  },
  "0x980bd": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x980bd>",
    "poll_symbol": ""
  },
  "0x980db": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x980db>",
    "poll_symbol": ""
  },
  "0x98117": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x98117>",
    "poll_symbol": ""
  },
  "0x98153": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x98153>",
    "poll_symbol": ""
  },
  "0x98ae4": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x98ae4>",
    "poll_symbol": ""
  },
  "0x98cf0": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x98cf0>",
    "poll_symbol": ""
  },
  "0x98e99": {
    "name": "{async_block_env#0}<0x98e99>",
    "poll_symbol": ""
  },
  "0x98fe8": {
    "name": "{async_fn_env#0}<&str><0x98fe8>",
    "poll_symbol": ""
  },
  "0x99296": {
    "name": "ResponseFuture<0x99296>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x993bc": {
    "name": "{async_fn_env#0}<0x993bc>",
    "poll_symbol": ""
  },
  "0x99478": {
    "name": "{async_fn_env#0}<0x99478>",
    "poll_symbol": ""
  },
  "0x99590": {
    "name": "{async_fn_env#0}<0x99590>",
    "poll_symbol": ""
  },
  "0x99d0d": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x99d0d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x9a1c8": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x9a1c8>",
    "poll_symbol": ""
  },
  "0x9a1ef": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x9a1ef>",
    "poll_symbol": ""
  },
  "0x9a2e1": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x9a2e1>",
    "poll_symbol": ""
  },
  "0x9a2e8": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x9a2e8>",
    "poll_symbol": ""
  },
  "0x9a5b9": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x9a5b9>",
    "poll_symbol": ""
  },
  "0x9a5e3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x9a5e3>",
    "poll_symbol": ""
  },
  "0x9ac35": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x9ac35>",
    "poll_symbol": ""
  },
  "0x9ade6": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x9ade6>",
    "poll_symbol": ""
  },
  "0x9ae6b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x9ae6b>",
    "poll_symbol": ""
  },
  "0x9ae92": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x9ae92>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa434d": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xa434d>",
    "poll_symbol": ""
  },
  "0xa4360": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xa4360>",
    "poll_symbol": ""
  },
  "0xa4374": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xa4374>",
    "poll_symbol": ""
  },
  "0xa4387": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xa4387>",
    "poll_symbol": ""
  },
  "0xa43a0": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xa43a0>",
    "poll_symbol": ""
  },
  "0xa43c9": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xa43c9>",
    "poll_symbol": ""
  },
  "0xa43fe": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0xa43fe>",
    "poll_symbol": ""
  },
  "0xa4411": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0xa4411>",
    "poll_symbol": ""
  },
  "0xa4891": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0xa4891>",
    "poll_symbol": ""
  },
  "0xa48a5": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xa48a5>",
    "poll_symbol": ""
  },
  "0xa51ca": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0xa51e8": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0xa82a2": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xa82a2>",
    "poll_symbol": ""
  },
  "0xa8341": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xa8341>",
    "poll_symbol": ""
  },
  "0xa97c2": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xa97c2>",
    "poll_symbol": ""
  },
  "0xa983a": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xa983a>",
    "poll_symbol": ""
  },
  "0xa9858": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xa9858>",
    "poll_symbol": ""
  },
  "0xa9876": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xa9876>",
    "poll_symbol": ""
  },
  "0xa99a2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xa99a2>",
    "poll_symbol": ""
  },
  "0xa99c0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xa99c0>",
    "poll_symbol": ""
  },
  "0xa9cae": {
    "name": "NonNull<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0xa9db1": {
    "name": "Unique<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0xaa344": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xaa344>",
    "poll_symbol": ""
  },
  "0xaa3b0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xaa3b0>",
    "poll_symbol": ""
  },
  "0xaa3c2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xaa3c2>",
    "poll_symbol": ""
  },
  "0xaa3d4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xaa3d4>",
    "poll_symbol": ""
  },
  "0xaa57a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xaa57a>",
    "poll_symbol": ""
  },
  "0xaa58c": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xaa58c>",
    "poll_symbol": ""
  },
  "0xaa59e": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xaa59e>",
    "poll_symbol": ""
  },
  "0xaa5b0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xaa5b0>",
    "poll_symbol": ""
  },
  "0xaa922": {
    "name": "PhantomData<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0xaaaaa": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xaaaaa>",
    "poll_symbol": ""
  },
  "0xaaadd": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xaaadd>",
    "poll_symbol": ""
  },
  "0xaac1c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xaac1c>",
    "poll_symbol": ""
  },
  "0xaac58": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xaac58>",
    "poll_symbol": ""
  },
  "0xaac76": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xaac76>",
    "poll_symbol": ""
  },
  "0xabad4": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xabad4>",
    "poll_symbol": ""
  },
  "0xabb97": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xabb97>",
    "poll_symbol": ""
  },
  "0xac2dd": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xac2dd>",
    "poll_symbol": ""
  },
  "0xad591": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xad591>",
    "poll_symbol": ""
  },
  "0xad5eb": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xad5eb>",
    "poll_symbol": ""
  },
  "0xad609": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xad609>",
    "poll_symbol": ""
  },
  "0xad627": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xad627>",
    "poll_symbol": ""
  },
  "0xae03e": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xae03e>",
    "poll_symbol": ""
  },
  "0xaeb0a": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xaeb0a>",
    "poll_symbol": ""
  },
  "0xaefbe": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xaefbe>",
    "poll_symbol": ""
  },
  "0xaeffd": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xaeffd>",
    "poll_symbol": ""
  },
  "0xaf192": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xaf192>",
    "poll_symbol": ""
  },
  "0xaf1d1": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xaf1d1>",
    "poll_symbol": ""
  },
  "0xaf210": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xaf210>",
    "poll_symbol": ""
  },
  "0xaf246": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xaf246>",
    "poll_symbol": ""
  },
  "0xaf27c": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xaf27c>",
    "poll_symbol": ""
  },
  "0xaf2bb": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xaf2bb>",
    "poll_symbol": ""
  },
  "0xaf668": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xaf668>",
    "poll_symbol": ""
  },
  "0xaf6a7": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xaf6a7>",
    "poll_symbol": ""
  },
  "0xaf6dd": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xaf6dd>",
    "poll_symbol": ""
  },
  "0xaf71c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xaf71c>",
    "poll_symbol": ""
  },
  "0xb01e4": {
    "name": "{async_block_env#0}<0xb01e4>",
    "poll_symbol": ""
  },
  "0xb033c": {
    "name": "{async_fn_env#0}<&str><0xb033c>",
    "poll_symbol": ""
  },
  "0xb05ea": {
    "name": "ResponseFuture<0xb05ea>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xb072f": {
    "name": "{async_fn_env#0}<0xb072f>",
    "poll_symbol": ""
  },
  "0xb07eb": {
    "name": "{async_fn_env#0}<0xb07eb>",
    "poll_symbol": ""
  },
  "0xb0903": {
    "name": "{async_fn_env#0}<0xb0903>",
    "poll_symbol": ""
  },
  "0xb109b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xb109b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xb1591": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xb1591>",
    "poll_symbol": ""
  },
  "0xb15b8": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xb15b8>",
    "poll_symbol": ""
  },
  "0xb16aa": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xb16aa>",
    "poll_symbol": ""
  },
  "0xb16b1": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xb16b1>",
    "poll_symbol": ""
  },
  "0xb1947": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xb1947>",
    "poll_symbol": ""
  },
  "0xb1b59": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xb1b59>",
    "poll_symbol": ""
  },
  "0xb1dc1": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xb1dc1>",
    "poll_symbol": ""
  },
  "0xb1deb": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xb1deb>",
    "poll_symbol": ""
  },
  "0xb26c4": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xb26c4>",
    "poll_symbol": ""
  },
  "0xb2875": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xb2875>",
    "poll_symbol": ""
  },
  "0xb28fa": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xb28fa>",
    "poll_symbol": ""
  },
  "0xb2921": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xb2921>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xb5cf2": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xb5cf2>",
    "poll_symbol": ""
  },
  "0xb5d91": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xb5d91>",
    "poll_symbol": ""
  },
  "0xb80b8": {
    "name": "{async_block_env#0}<0xb80b8>",
    "poll_symbol": ""
  },
  "0xb86bb": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xb86bb>",
    "poll_symbol": ""
  },
  "0xb8733": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xb8733>",
    "poll_symbol": ""
  },
  "0xb8751": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xb8751>",
    "poll_symbol": ""
  },
  "0xb876f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xb876f>",
    "poll_symbol": ""
  },
  "0xb889b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xb889b>",
    "poll_symbol": ""
  },
  "0xb88b9": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xb88b9>",
    "poll_symbol": ""
  },
  "0xb8c74": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xb8c74>",
    "poll_symbol": ""
  },
  "0xb8ce0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xb8ce0>",
    "poll_symbol": ""
  },
  "0xb8cf2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xb8cf2>",
    "poll_symbol": ""
  },
  "0xb8d04": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xb8d04>",
    "poll_symbol": ""
  },
  "0xb8eaa": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xb8eaa>",
    "poll_symbol": ""
  },
  "0xb8ebc": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xb8ebc>",
    "poll_symbol": ""
  },
  "0xb8ece": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xb8ece>",
    "poll_symbol": ""
  },
  "0xb8ee0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xb8ee0>",
    "poll_symbol": ""
  },
  "0xb945d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb945d>",
    "poll_symbol": ""
  },
  "0xb9490": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xb9490>",
    "poll_symbol": ""
  },
  "0xb9593": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb9593>",
    "poll_symbol": ""
  },
  "0xb95cf": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xb95cf>",
    "poll_symbol": ""
  },
  "0xb95ed": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xb95ed>",
    "poll_symbol": ""
  },
  "0xba12d": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xba12d>",
    "poll_symbol": ""
  },
  "0xba1f0": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xba1f0>",
    "poll_symbol": ""
  },
  "0xba936": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xba936>",
    "poll_symbol": ""
  },
  "0xbb75a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xbb75a>",
    "poll_symbol": ""
  },
  "0xbbfc1": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xbbfc1>",
    "poll_symbol": ""
  },
  "0xbc3a5": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xbc3a5>",
    "poll_symbol": ""
  },
  "0xbc3e4": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xbc3e4>",
    "poll_symbol": ""
  },
  "0xbc579": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xbc579>",
    "poll_symbol": ""
  },
  "0xbc5b8": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xbc5b8>",
    "poll_symbol": ""
  },
  "0xbc5f7": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xbc5f7>",
    "poll_symbol": ""
  },
  "0xbc62d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xbc62d>",
    "poll_symbol": ""
  },
  "0xbc663": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xbc663>",
    "poll_symbol": ""
  },
  "0xbc6a2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xbc6a2>",
    "poll_symbol": ""
  },
  "0xbca4f": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xbca4f>",
    "poll_symbol": ""
  },
  "0xbca8e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xbca8e>",
    "poll_symbol": ""
  },
  "0xbcac4": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xbcac4>",
    "poll_symbol": ""
  },
  "0xbcb03": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xbcb03>",
    "poll_symbol": ""
  },
  "0xbd441": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xbd441>",
    "poll_symbol": ""
  },
  "0xbd56d": {
    "name": "{async_fn_env#0}<&str><0xbd56d>",
    "poll_symbol": ""
  },
  "0xbd81b": {
    "name": "ResponseFuture<0xbd81b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xbd941": {
    "name": "{async_fn_env#0}<0xbd941>",
    "poll_symbol": ""
  },
  "0xbd9fd": {
    "name": "{async_fn_env#0}<0xbd9fd>",
    "poll_symbol": ""
  },
  "0xbdb15": {
    "name": "{async_fn_env#0}<0xbdb15>",
    "poll_symbol": ""
  },
  "0xbe2a6": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xbe2a6>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xbe79c": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xbe79c>",
    "poll_symbol": ""
  },
  "0xbe7c3": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xbe7c3>",
    "poll_symbol": ""
  },
  "0xbe8b5": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xbe8b5>",
    "poll_symbol": ""
  },
  "0xbe8bc": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xbe8bc>",
    "poll_symbol": ""
  },
  "0xbeb52": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xbeb52>",
    "poll_symbol": ""
  },
  "0xbed64": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xbed64>",
    "poll_symbol": ""
  },
  "0xbefcc": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xbefcc>",
    "poll_symbol": ""
  },
  "0xbeff6": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xbeff6>",
    "poll_symbol": ""
  },
  "0xbf8cf": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xbf8cf>",
    "poll_symbol": ""
  },
  "0xbfa80": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xbfa80>",
    "poll_symbol": ""
  },
  "0xbfb05": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xbfb05>",
    "poll_symbol": ""
  },
  "0xbfb2c": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xbfb2c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xc0534": {
    "name": "{async_fn_env#0}<&str><0xc0534>",
    "poll_symbol": ""
  },
  "0xc07e2": {
    "name": "ResponseFuture<0xc07e2>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xc0908": {
    "name": "{async_fn_env#0}<0xc0908>",
    "poll_symbol": ""
  },
  "0xc09c4": {
    "name": "{async_fn_env#0}<0xc09c4>",
    "poll_symbol": ""
  },
  "0xc0adc": {
    "name": "{async_fn_env#0}<0xc0adc>",
    "poll_symbol": ""
  },
  "0xc20bd": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xc20bd>",
    "poll_symbol": ""
  },
  "0xc2180": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xc2180>",
    "poll_symbol": ""
  },
  "0xc28c6": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xc28c6>",
    "poll_symbol": ""
  },
  "0xc3596": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc3596>",
    "poll_symbol": ""
  },
  "0xc35c9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xc35c9>",
    "poll_symbol": ""
  },
  "0xc36cc": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc36cc>",
    "poll_symbol": ""
  },
  "0xc3708": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xc3708>",
    "poll_symbol": ""
  },
  "0xc3726": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xc3726>",
    "poll_symbol": ""
  },
  "0xc3d22": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xc3d22>",
    "poll_symbol": ""
  },
  "0xc3d9a": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xc3d9a>",
    "poll_symbol": ""
  },
  "0xc3db8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xc3db8>",
    "poll_symbol": ""
  },
  "0xc3dd6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xc3dd6>",
    "poll_symbol": ""
  },
  "0xc3f02": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xc3f02>",
    "poll_symbol": ""
  },
  "0xc3f20": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xc3f20>",
    "poll_symbol": ""
  },
  "0xc42db": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xc42db>",
    "poll_symbol": ""
  },
  "0xc4347": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xc4347>",
    "poll_symbol": ""
  },
  "0xc4359": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xc4359>",
    "poll_symbol": ""
  },
  "0xc436b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xc436b>",
    "poll_symbol": ""
  },
  "0xc4511": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xc4511>",
    "poll_symbol": ""
  },
  "0xc4523": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xc4523>",
    "poll_symbol": ""
  },
  "0xc4535": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xc4535>",
    "poll_symbol": ""
  },
  "0xc4547": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xc4547>",
    "poll_symbol": ""
  },
  "0xc4f20": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xc4f20>",
    "poll_symbol": ""
  },
  "0xc603e": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc603e>",
    "poll_symbol": ""
  },
  "0xc656c": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xc656c>",
    "poll_symbol": ""
  },
  "0xc65ab": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xc65ab>",
    "poll_symbol": ""
  },
  "0xc6740": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xc6740>",
    "poll_symbol": ""
  },
  "0xc677f": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xc677f>",
    "poll_symbol": ""
  },
  "0xc67be": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xc67be>",
    "poll_symbol": ""
  },
  "0xc67f4": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc67f4>",
    "poll_symbol": ""
  },
  "0xc682a": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xc682a>",
    "poll_symbol": ""
  },
  "0xc6869": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xc6869>",
    "poll_symbol": ""
  },
  "0xc6c16": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc6c16>",
    "poll_symbol": ""
  },
  "0xc6c55": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xc6c55>",
    "poll_symbol": ""
  },
  "0xc6c8b": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xc6c8b>",
    "poll_symbol": ""
  },
  "0xc6cca": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xc6cca>",
    "poll_symbol": ""
  },
  "0xc75ed": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc75ed>",
    "poll_symbol": ""
  },
  "0xc8bba": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xc8bba>",
    "poll_symbol": ""
  },
  "0xc8c59": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xc8c59>",
    "poll_symbol": ""
  },
  "0xcaf88": {
    "name": "{async_block_env#0}<0xcaf88>",
    "poll_symbol": ""
  },
  "0xcb13c": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xcb13c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xcb5e3": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xcb5e3>",
    "poll_symbol": ""
  },
  "0xcb60a": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xcb60a>",
    "poll_symbol": ""
  },
  "0xcb6fc": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xcb6fc>",
    "poll_symbol": ""
  },
  "0xcb703": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xcb703>",
    "poll_symbol": ""
  },
  "0xcb999": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xcb999>",
    "poll_symbol": ""
  },
  "0xcbbab": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xcbbab>",
    "poll_symbol": ""
  },
  "0xcbe06": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xcbe06>",
    "poll_symbol": ""
  },
  "0xcbe30": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xcbe30>",
    "poll_symbol": ""
  },
  "0xcc709": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xcc709>",
    "poll_symbol": ""
  },
  "0xcc798": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xcc798>",
    "poll_symbol": ""
  },
  "0xcc81d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xcc81d>",
    "poll_symbol": ""
  },
  "0xcc844": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xcc844>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xcfcc5": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xcfcc5>",
    "poll_symbol": ""
  },
  "0xcfd64": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xcfd64>",
    "poll_symbol": ""
  },
  "0xd0f0d": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xd0f0d>",
    "poll_symbol": ""
  },
  "0xd0f2b": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xd0f2b>",
    "poll_symbol": ""
  },
  "0xd0f49": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xd0f49>",
    "poll_symbol": ""
  },
  "0xd0f5c": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xd0f5c>",
    "poll_symbol": ""
  },
  "0xd0f74": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xd0f74>",
    "poll_symbol": ""
  },
  "0xd0f92": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xd0f92>",
    "poll_symbol": ""
  },
  "0xd1244": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xd1244>",
    "poll_symbol": ""
  },
  "0xd1257": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xd1257>",
    "poll_symbol": ""
  },
  "0xd16f6": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0xd16f6>",
    "poll_symbol": ""
  },
  "0xd1709": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0xd1709>",
    "poll_symbol": ""
  },
  "0xd346d": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xd346d>",
    "poll_symbol": ""
  },
  "0xd34e7": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xd34e7>",
    "poll_symbol": ""
  },
  "0xd3541": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xd3541>",
    "poll_symbol": ""
  },
  "0xd359d": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xd359d>",
    "poll_symbol": ""
  },
  "0xd3617": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xd3617>",
    "poll_symbol": ""
  },
  "0xd3673": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xd3673>",
    "poll_symbol": ""
  },
  "0xd37be": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xd37be>",
    "poll_symbol": ""
  },
  "0xd3836": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xd3836>",
    "poll_symbol": ""
  },
  "0xd3854": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xd3854>",
    "poll_symbol": ""
  },
  "0xd3872": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xd3872>",
    "poll_symbol": ""
  },
  "0xd399e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xd399e>",
    "poll_symbol": ""
  },
  "0xd39bc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xd39bc>",
    "poll_symbol": ""
  },
  "0xd3d95": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xd3d95>",
    "poll_symbol": ""
  },
  "0xd3e01": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xd3e01>",
    "poll_symbol": ""
  },
  "0xd3e13": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xd3e13>",
    "poll_symbol": ""
  },
  "0xd3e25": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xd3e25>",
    "poll_symbol": ""
  },
  "0xd3fcb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xd3fcb>",
    "poll_symbol": ""
  },
  "0xd3fdd": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xd3fdd>",
    "poll_symbol": ""
  },
  "0xd3fef": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xd3fef>",
    "poll_symbol": ""
  },
  "0xd4001": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xd4001>",
    "poll_symbol": ""
  },
  "0xd460e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd460e>",
    "poll_symbol": ""
  },
  "0xd4641": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xd4641>",
    "poll_symbol": ""
  },
  "0xd4780": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd4780>",
    "poll_symbol": ""
  },
  "0xd47bc": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xd47bc>",
    "poll_symbol": ""
  },
  "0xd47da": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xd47da>",
    "poll_symbol": ""
  },
  "0xd546a": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xd546a>",
    "poll_symbol": ""
  },
  "0xd552d": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xd552d>",
    "poll_symbol": ""
  },
  "0xd5c73": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xd5c73>",
    "poll_symbol": ""
  },
  "0xd74aa": {
    "name": "{async_block_env#0}<0xd74aa>",
    "poll_symbol": ""
  },
  "0xd7c48": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd7c48>",
    "poll_symbol": ""
  },
  "0xd8092": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xd8092>",
    "poll_symbol": ""
  },
  "0xd80d1": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xd80d1>",
    "poll_symbol": ""
  },
  "0xd8266": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xd8266>",
    "poll_symbol": ""
  },
  "0xd82a5": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xd82a5>",
    "poll_symbol": ""
  },
  "0xd82e4": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xd82e4>",
    "poll_symbol": ""
  },
  "0xd831a": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd831a>",
    "poll_symbol": ""
  },
  "0xd8350": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xd8350>",
    "poll_symbol": ""
  },
  "0xd838f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xd838f>",
    "poll_symbol": ""
  },
  "0xd873c": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd873c>",
    "poll_symbol": ""
  },
  "0xd877b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xd877b>",
    "poll_symbol": ""
  },
  "0xd87b1": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xd87b1>",
    "poll_symbol": ""
  },
  "0xd87f0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xd87f0>",
    "poll_symbol": ""
  },
  "0xd91a3": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd91a3>",
    "poll_symbol": ""
  },
  "0xd9315": {
    "name": "{async_fn_env#0}<&str><0xd9315>",
    "poll_symbol": ""
  },
  "0xd95c3": {
    "name": "ResponseFuture<0xd95c3>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xd96e9": {
    "name": "{async_fn_env#0}<0xd96e9>",
    "poll_symbol": ""
  },
  "0xd97a5": {
    "name": "{async_fn_env#0}<0xd97a5>",
    "poll_symbol": ""
  },
  "0xd98bd": {
    "name": "{async_fn_env#0}<0xd98bd>",
    "poll_symbol": ""
  },
  "0xda05c": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xda05c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xda573": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xda573>",
    "poll_symbol": ""
  },
  "0xda59a": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xda59a>",
    "poll_symbol": ""
  },
  "0xda68c": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xda68c>",
    "poll_symbol": ""
  },
  "0xda693": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xda693>",
    "poll_symbol": ""
  },
  "0xda929": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xda929>",
    "poll_symbol": ""
  },
  "0xdab3b": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xdab3b>",
    "poll_symbol": ""
  },
  "0xdada3": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xdada3>",
    "poll_symbol": ""
  },
  "0xdadcd": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xdadcd>",
    "poll_symbol": ""
  },
  "0xdb6a6": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xdb6a6>",
    "poll_symbol": ""
  },
  "0xdb857": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xdb857>",
    "poll_symbol": ""
  },
  "0xdb8dc": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xdb8dc>",
    "poll_symbol": ""
  },
  "0xdb903": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xdb903>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xdee81": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xdee81>",
    "poll_symbol": ""
  },
  "0xdef20": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xdef20>",
    "poll_symbol": ""
  },
  "0xe12e3": {
    "name": "Pin<&mut reqwest::get::{async_fn_env#0}<&str>>",
    "poll_symbol": ""
  },
  "0xe133e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xe133e>",
    "poll_symbol": ""
  },
  "0xe1398": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::text::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0xe1428": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe1428>",
    "poll_symbol": ""
  },
  "0xe145b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xe145b>",
    "poll_symbol": ""
  },
  "0xe155e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe155e>",
    "poll_symbol": ""
  },
  "0xe159a": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xe159a>",
    "poll_symbol": ""
  },
  "0xe15b8": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xe15b8>",
    "poll_symbol": ""
  },
  "0xe1b96": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xe1b96>",
    "poll_symbol": ""
  },
  "0xe1c0e": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xe1c0e>",
    "poll_symbol": ""
  },
  "0xe1c2c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xe1c2c>",
    "poll_symbol": ""
  },
  "0xe1c4a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xe1c4a>",
    "poll_symbol": ""
  },
  "0xe1d76": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xe1d76>",
    "poll_symbol": ""
  },
  "0xe1d94": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xe1d94>",
    "poll_symbol": ""
  },
  "0xe215b": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xe215b>",
    "poll_symbol": ""
  },
  "0xe21c7": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xe21c7>",
    "poll_symbol": ""
  },
  "0xe21d9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xe21d9>",
    "poll_symbol": ""
  },
  "0xe21eb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xe21eb>",
    "poll_symbol": ""
  },
  "0xe2391": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xe2391>",
    "poll_symbol": ""
  },
  "0xe23a3": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xe23a3>",
    "poll_symbol": ""
  },
  "0xe23b5": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xe23b5>",
    "poll_symbol": ""
  },
  "0xe23c7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xe23c7>",
    "poll_symbol": ""
  },
  "0xe2e59": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xe2e59>",
    "poll_symbol": ""
  },
  "0xe2f1c": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe2f1c>",
    "poll_symbol": ""
  },
  "0xe3662": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xe3662>",
    "poll_symbol": ""
  },
  "0xe4b83": {
    "name": "{async_fn_env#0}<&str><0xe4b83>",
    "poll_symbol": ""
  },
  "0xe4e31": {
    "name": "ResponseFuture<0xe4e31>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xe4f36": {
    "name": "{async_fn_env#0}<0xe4f36>",
    "poll_symbol": ""
  },
  "0xe4ff2": {
    "name": "{async_fn_env#0}<0xe4ff2>",
    "poll_symbol": ""
  },
  "0xe510a": {
    "name": "{async_fn_env#0}<0xe510a>",
    "poll_symbol": ""
  },
  "0xe58c0": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe58c0>",
    "poll_symbol": ""
  },
  "0xe58ff": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xe58ff>",
    "poll_symbol": ""
  },
  "0xe5a94": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xe5a94>",
    "poll_symbol": ""
  },
  "0xe5ad3": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xe5ad3>",
    "poll_symbol": ""
  },
  "0xe5b12": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xe5b12>",
    "poll_symbol": ""
  },
  "0xe5b48": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe5b48>",
    "poll_symbol": ""
  },
  "0xe5b7e": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xe5b7e>",
    "poll_symbol": ""
  },
  "0xe5bbd": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xe5bbd>",
    "poll_symbol": ""
  },
  "0xe5f6a": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe5f6a>",
    "poll_symbol": ""
  },
  "0xe5fa9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xe5fa9>",
    "poll_symbol": ""
  },
  "0xe5fdf": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xe5fdf>",
    "poll_symbol": ""
  },
  "0xe601e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xe601e>",
    "poll_symbol": ""
  },
  "0xe6f50": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe6f50>",
    "poll_symbol": ""
  },
  "0xe7174": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe7174>",
    "poll_symbol": ""
  },
  "0xe74b7": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xe74b7>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xe79ce": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe79ce>",
    "poll_symbol": ""
  },
  "0xe79f5": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xe79f5>",
    "poll_symbol": ""
  },
  "0xe7ae7": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xe7ae7>",
    "poll_symbol": ""
  },
  "0xe7aee": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xe7aee>",
    "poll_symbol": ""
  },
  "0xe7d84": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xe7d84>",
    "poll_symbol": ""
  },
  "0xe7f96": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xe7f96>",
    "poll_symbol": ""
  },
  "0xe81fe": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe81fe>",
    "poll_symbol": ""
  },
  "0xe8228": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe8228>",
    "poll_symbol": ""
  },
  "0xe8b01": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xe8b01>",
    "poll_symbol": ""
  },
  "0xe8cb2": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xe8cb2>",
    "poll_symbol": ""
  },
  "0xe8d37": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe8d37>",
    "poll_symbol": ""
  },
  "0xe8d5e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xe8d5e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xe9748": {
    "name": "{async_block_env#0}<0xe9748>",
    "poll_symbol": ""
  },
  "0xeeff7": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0xeeff7>",
    "poll_symbol": ""
  },
  "0xef015": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xef015>",
    "poll_symbol": ""
  },
  "0xf29f9": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xf29f9>",
    "poll_symbol": ""
  },
  "0xf2f5e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xf2f5e>",
    "poll_symbol": ""
  },
  "0xf32d1": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0xf32d1>",
    "poll_symbol": ""
  },
  "0xf32ef": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xf32ef>",
    "poll_symbol": ""
  },
  "0xf3b0a": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xf3b0a>",
    "poll_symbol": ""
  },
  "0xf3bcd": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xf3bcd>",
    "poll_symbol": ""
  },
  "0xf42b2": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xf42b2>",
    "poll_symbol": ""
  },
  "0xf5413": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xf5413>",
    "poll_symbol": ""
  },
  "0xf544f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xf544f>",
    "poll_symbol": ""
  },
  "0xf54a9": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xf54a9>",
    "poll_symbol": ""
  },
  "0xf54c7": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xf54c7>",
    "poll_symbol": ""
  },
  "0xf54e5": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0xf54e5>",
    "poll_symbol": ""
  },
  "0xf5503": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0xf5503>",
    "poll_symbol": ""
  },
  "0xf5617": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xf5617>",
    "poll_symbol": ""
  },
  "0xf5635": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xf5635>",
    "poll_symbol": ""
  },
  "0xf5653": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xf5653>",
    "poll_symbol": ""
  },
  "0xf5b83": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xf5b83>",
    "poll_symbol": ""
  },
  "0xf5ba1": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xf5ba1>",
    "poll_symbol": ""
  },
  "0xf5cee": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xf5cee>",
    "poll_symbol": ""
  },
  "0xf5d66": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xf5d66>",
    "poll_symbol": ""
  },
  "0xf5d84": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xf5d84>",
    "poll_symbol": ""
  },
  "0xf5da2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xf5da2>",
    "poll_symbol": ""
  },
  "0xf5eb0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xf5eb0>",
    "poll_symbol": ""
  },
  "0xf5ece": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xf5ece>",
    "poll_symbol": ""
  },
  "0xf62e5": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xf62e5>",
    "poll_symbol": ""
  },
  "0xf6351": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xf6351>",
    "poll_symbol": ""
  },
  "0xf6363": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xf6363>",
    "poll_symbol": ""
  },
  "0xf6375": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xf6375>",
    "poll_symbol": ""
  },
  "0xf64ef": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xf64ef>",
    "poll_symbol": ""
  },
  "0xf6501": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xf6501>",
    "poll_symbol": ""
  },
  "0xf6513": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xf6513>",
    "poll_symbol": ""
  },
  "0xf6525": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xf6525>",
    "poll_symbol": ""
  },
  "0xf70c0": {
    "name": "{async_block_env#0}<0xf70c0>",
    "poll_symbol": ""
  },
  "0xf782b": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xf782b>",
    "poll_symbol": ""
  },
  "0xf7c0f": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xf7c0f>",
    "poll_symbol": ""
  },
  "0xf7c4e": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xf7c4e>",
    "poll_symbol": ""
  },
  "0xf7de3": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xf7de3>",
    "poll_symbol": ""
  },
  "0xf7e22": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xf7e22>",
    "poll_symbol": ""
  },
  "0xf7e61": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xf7e61>",
    "poll_symbol": ""
  },
  "0xf7e97": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xf7e97>",
    "poll_symbol": ""
  },
  "0xf7ecd": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xf7ecd>",
    "poll_symbol": ""
  },
  "0xf7f0c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xf7f0c>",
    "poll_symbol": ""
  },
  "0xf82b9": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xf82b9>",
    "poll_symbol": ""
  },
  "0xf82f8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xf82f8>",
    "poll_symbol": ""
  },
  "0xf832e": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xf832e>",
    "poll_symbol": ""
  },
  "0xf836d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xf836d>",
    "poll_symbol": ""
  },
  "0xf8cab": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xf8cab>",
    "poll_symbol": ""
  },
  "0xf8dd7": {
    "name": "{async_fn_env#0}<&str><0xf8dd7>",
    "poll_symbol": ""
  },
  "0xf9085": {
    "name": "ResponseFuture<0xf9085>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xf91ab": {
    "name": "{async_fn_env#0}<0xf91ab>",
    "poll_symbol": ""
  },
  "0xf9267": {
    "name": "{async_fn_env#0}<0xf9267>",
    "poll_symbol": ""
  },
  "0xf937f": {
    "name": "{async_fn_env#0}<0xf937f>",
    "poll_symbol": ""
  },
  "0xf9b10": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xf9b10>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0xf9fff": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xf9fff>",
    "poll_symbol": ""
  },
  "0xfa026": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xfa026>",
    "poll_symbol": ""
  },
  "0xfa118": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xfa118>",
    "poll_symbol": ""
  },
  "0xfa11f": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xfa11f>",
    "poll_symbol": ""
  },
  "0xfa3b5": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xfa3b5>",
    "poll_symbol": ""
  },
  "0xfa5c7": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xfa5c7>",
    "poll_symbol": ""
  },
  "0xfa7e9": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xfa7e9>",
    "poll_symbol": ""
  },
  "0xfa813": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xfa813>",
    "poll_symbol": ""
  },
  "0xfae66": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xfae66>",
    "poll_symbol": ""
  },
  "0xfb017": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xfb017>",
    "poll_symbol": ""
  },
  "0xfb09c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xfb09c>",
    "poll_symbol": ""
  },
  "0xfb0c3": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xfb0c3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xfbd28": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::multi_thread::{impl#0}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0xfbd46": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0xfbd64": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::multi_thread::{impl#0}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0xfbd82": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0xfbdef": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>><0xfbdef>",
    "poll_symbol": ""
  },
  "0xfbe0d": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>><0xfbe0d>",
    "poll_symbol": ""
  },
  "0xfbe31": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>>",
    "poll_symbol": ""
  },
  "0xfbe44": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": ""
  },
  "0xfbe57": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>>>",
    "poll_symbol": ""
  },
  "0xfbe6a": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0xfbe7d": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": ""
  },
  "0xfbe90": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0xfbea3": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": ""
  },
  "0xfbeb6": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": ""
  },
  "0xfc084": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xfc084>",
    "poll_symbol": ""
  },
  "0xfc0ad": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xfc0ad>",
    "poll_symbol": ""
  },
  "0xfc0dc": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xfc0dc>",
    "poll_symbol": ""
  },
  "0xfc0ef": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xfc0ef>",
    "poll_symbol": ""
  },
  "0xfdba5": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>><0xfdba5>",
    "poll_symbol": ""
  },
  "0xfdbb8": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0xfdbb8>",
    "poll_symbol": ""
  },
  "0xfdbcb": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>><0xfdbcb>",
    "poll_symbol": ""
  },
  "0xfdbde": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xfdbde>",
    "poll_symbol": ""
  },
  "0xfdbf1": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0xfdbf1>",
    "poll_symbol": ""
  },
  "0xfdc04": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0xfdc04>",
    "poll_symbol": ""
  },
  "0xfdc17": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0xfdc17>",
    "poll_symbol": ""
  },
  "0xfdc2a": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0xfdc2a>",
    "poll_symbol": ""
  },
  "0x1007e4": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1007e4>",
    "poll_symbol": ""
  },
  "0x100b7e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x100b7e>",
    "poll_symbol": ""
  },
  "0x1012f4": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1012f4>",
    "poll_symbol": ""
  },
  "0x101312": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x101312>",
    "poll_symbol": ""
  },
  "0x101330": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x101330>",
    "poll_symbol": ""
  },
  "0x102816": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x102816>",
    "poll_symbol": ""
  },
  "0x1028d9": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1028d9>",
    "poll_symbol": ""
  },
  "0x102fbb": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x102fbb>",
    "poll_symbol": ""
  },
  "0x10371b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x10371b>",
    "poll_symbol": ""
  },
  "0x103739": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x103739>",
    "poll_symbol": ""
  },
  "0x103bbc": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x103bbc>",
    "poll_symbol": ""
  },
  "0x103c16": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x103c16>",
    "poll_symbol": ""
  },
  "0x103c28": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x103c28>",
    "poll_symbol": ""
  },
  "0x103c3a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x103c3a>",
    "poll_symbol": ""
  },
  "0x103dc6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x103dc6>",
    "poll_symbol": ""
  },
  "0x103dd8": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x103dd8>",
    "poll_symbol": ""
  },
  "0x103dea": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x103dea>",
    "poll_symbol": ""
  },
  "0x103dfc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x103dfc>",
    "poll_symbol": ""
  },
  "0x1041eb": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1041eb>",
    "poll_symbol": ""
  },
  "0x104245": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x104245>",
    "poll_symbol": ""
  },
  "0x104263": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x104263>",
    "poll_symbol": ""
  },
  "0x104281": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x104281>",
    "poll_symbol": ""
  },
  "0x1043ad": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1043ad>",
    "poll_symbol": ""
  },
  "0x1043cb": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1043cb>",
    "poll_symbol": ""
  },
  "0x1056f5": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x1056f5>",
    "poll_symbol": ""
  },
  "0x105731": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x105731>",
    "poll_symbol": ""
  },
  "0x10576d": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x10576d>",
    "poll_symbol": ""
  },
  "0x10578b": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x10578b>",
    "poll_symbol": ""
  },
  "0x1064cc": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1064cc>",
    "poll_symbol": ""
  },
  "0x10650b": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x10650b>",
    "poll_symbol": ""
  },
  "0x10662b": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x10662b>",
    "poll_symbol": ""
  },
  "0x10666a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x10666a>",
    "poll_symbol": ""
  },
  "0x1066a9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1066a9>",
    "poll_symbol": ""
  },
  "0x1066df": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1066df>",
    "poll_symbol": ""
  },
  "0x106715": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x106715>",
    "poll_symbol": ""
  },
  "0x106754": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x106754>",
    "poll_symbol": ""
  },
  "0x106b01": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x106b01>",
    "poll_symbol": ""
  },
  "0x106b40": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x106b40>",
    "poll_symbol": ""
  },
  "0x106b76": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x106b76>",
    "poll_symbol": ""
  },
  "0x106bb5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x106bb5>",
    "poll_symbol": ""
  },
  "0x1074b2": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1074b2>",
    "poll_symbol": ""
  },
  "0x107607": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x107607>",
    "poll_symbol": ""
  },
  "0x107e9a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x107e9a>",
    "poll_symbol": ""
  },
  "0x1080a6": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1080a6>",
    "poll_symbol": ""
  },
  "0x1083ed": {
    "name": "{async_block_env#0}<0x1083ed>",
    "poll_symbol": ""
  },
  "0x10853c": {
    "name": "{async_fn_env#0}<&str><0x10853c>",
    "poll_symbol": ""
  },
  "0x1087ea": {
    "name": "ResponseFuture<0x1087ea>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x108910": {
    "name": "{async_fn_env#0}<0x108910>",
    "poll_symbol": ""
  },
  "0x1089cc": {
    "name": "{async_fn_env#0}<0x1089cc>",
    "poll_symbol": ""
  },
  "0x108ae4": {
    "name": "{async_fn_env#0}<0x108ae4>",
    "poll_symbol": ""
  },
  "0x109261": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x109261>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x109736": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x109736>",
    "poll_symbol": ""
  },
  "0x10975d": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x10975d>",
    "poll_symbol": ""
  },
  "0x10984f": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x10984f>",
    "poll_symbol": ""
  },
  "0x109856": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x109856>",
    "poll_symbol": ""
  },
  "0x109b27": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x109b27>",
    "poll_symbol": ""
  },
  "0x109b51": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x109b51>",
    "poll_symbol": ""
  },
  "0x10a1a3": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x10a1a3>",
    "poll_symbol": ""
  },
  "0x10a354": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x10a354>",
    "poll_symbol": ""
  },
  "0x10a3d9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x10a3d9>",
    "poll_symbol": ""
  },
  "0x10a400": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x10a400>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x10e8da": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x10e8da>",
    "poll_symbol": ""
  },
  "0x10e979": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x10e979>",
    "poll_symbol": ""
  },
  "0x110d10": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x110d10>",
    "poll_symbol": ""
  },
  "0x110e3b": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x110e3b>",
    "poll_symbol": ""
  },
  "0x110eb3": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x110eb3>",
    "poll_symbol": ""
  },
  "0x110ed1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x110ed1>",
    "poll_symbol": ""
  },
  "0x110eef": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x110eef>",
    "poll_symbol": ""
  },
  "0x11101b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x11101b>",
    "poll_symbol": ""
  },
  "0x111039": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x111039>",
    "poll_symbol": ""
  },
  "0x1113e2": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1113e2>",
    "poll_symbol": ""
  },
  "0x11144e": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x11144e>",
    "poll_symbol": ""
  },
  "0x111460": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x111460>",
    "poll_symbol": ""
  },
  "0x111472": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x111472>",
    "poll_symbol": ""
  },
  "0x111618": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x111618>",
    "poll_symbol": ""
  },
  "0x11162a": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x11162a>",
    "poll_symbol": ""
  },
  "0x11163c": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x11163c>",
    "poll_symbol": ""
  },
  "0x11164e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x11164e>",
    "poll_symbol": ""
  },
  "0x112261": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x112261>",
    "poll_symbol": ""
  },
  "0x112324": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x112324>",
    "poll_symbol": ""
  },
  "0x112a6a": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x112a6a>",
    "poll_symbol": ""
  },
  "0x11361d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x11361d>",
    "poll_symbol": ""
  },
  "0x113650": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x113650>",
    "poll_symbol": ""
  },
  "0x113753": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x113753>",
    "poll_symbol": ""
  },
  "0x11378f": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x11378f>",
    "poll_symbol": ""
  },
  "0x1137ad": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1137ad>",
    "poll_symbol": ""
  },
  "0x11464a": {
    "name": "ResponseFuture<0x11464a>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x114d0a": {
    "name": "{async_fn_env#0}<&str><0x114d0a>",
    "poll_symbol": ""
  },
  "0x1154c3": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1154c3>",
    "poll_symbol": ""
  },
  "0x115841": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x115841>",
    "poll_symbol": ""
  },
  "0x115880": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x115880>",
    "poll_symbol": ""
  },
  "0x115a15": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x115a15>",
    "poll_symbol": ""
  },
  "0x115a54": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x115a54>",
    "poll_symbol": ""
  },
  "0x115a93": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x115a93>",
    "poll_symbol": ""
  },
  "0x115ac9": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x115ac9>",
    "poll_symbol": ""
  },
  "0x115aff": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x115aff>",
    "poll_symbol": ""
  },
  "0x115b3e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x115b3e>",
    "poll_symbol": ""
  },
  "0x115eeb": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x115eeb>",
    "poll_symbol": ""
  },
  "0x115f2a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x115f2a>",
    "poll_symbol": ""
  },
  "0x115f60": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x115f60>",
    "poll_symbol": ""
  },
  "0x115f9f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x115f9f>",
    "poll_symbol": ""
  },
  "0x1168c2": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1168c2>",
    "poll_symbol": ""
  },
  "0x116be0": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x116be0>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1170cf": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1170cf>",
    "poll_symbol": ""
  },
  "0x1170f6": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1170f6>",
    "poll_symbol": ""
  },
  "0x117164": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x117164>",
    "poll_symbol": ""
  },
  "0x11716b": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x11716b>",
    "poll_symbol": ""
  },
  "0x1173d6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1173d6>",
    "poll_symbol": ""
  },
  "0x1175e8": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1175e8>",
    "poll_symbol": ""
  },
  "0x117850": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x117850>",
    "poll_symbol": ""
  },
  "0x11787a": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x11787a>",
    "poll_symbol": ""
  },
  "0x118153": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x118153>",
    "poll_symbol": ""
  },
  "0x1181e2": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x1181e2>",
    "poll_symbol": ""
  },
  "0x118267": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x118267>",
    "poll_symbol": ""
  },
  "0x11828e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x11828e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x118fa0": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::bytes::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x118ffb": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::text_with_charset::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x119b44": {
    "name": "{async_fn_env#0}<0x119b44>",
    "poll_symbol": ""
  },
  "0x119f75": {
    "name": "{async_fn_env#0}<0x119f75>",
    "poll_symbol": ""
  },
  "0x11a123": {
    "name": "{async_fn_env#0}<0x11a123>",
    "poll_symbol": ""
  },
  "0x120098": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x120098>",
    "poll_symbol": ""
  },
  "0x120137": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x120137>",
    "poll_symbol": ""
  },
  "0x122568": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x122568>",
    "poll_symbol": ""
  },
  "0x1225e3": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x1225e3>",
    "poll_symbol": ""
  },
  "0x12265d": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x12265d>",
    "poll_symbol": ""
  },
  "0x1226b7": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x1226b7>",
    "poll_symbol": ""
  },
  "0x122713": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x122713>",
    "poll_symbol": ""
  },
  "0x122750": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x122750>",
    "poll_symbol": ""
  },
  "0x12287c": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x12287c>",
    "poll_symbol": ""
  },
  "0x1228f4": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1228f4>",
    "poll_symbol": ""
  },
  "0x122912": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x122912>",
    "poll_symbol": ""
  },
  "0x122930": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x122930>",
    "poll_symbol": ""
  },
  "0x122a5c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x122a5c>",
    "poll_symbol": ""
  },
  "0x122a7a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x122a7a>",
    "poll_symbol": ""
  },
  "0x122e35": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x122e35>",
    "poll_symbol": ""
  },
  "0x122ea1": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x122ea1>",
    "poll_symbol": ""
  },
  "0x122eb3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x122eb3>",
    "poll_symbol": ""
  },
  "0x122ec5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x122ec5>",
    "poll_symbol": ""
  },
  "0x12306b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x12306b>",
    "poll_symbol": ""
  },
  "0x12307d": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x12307d>",
    "poll_symbol": ""
  },
  "0x12308f": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x12308f>",
    "poll_symbol": ""
  },
  "0x1230a1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1230a1>",
    "poll_symbol": ""
  },
  "0x123642": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x123642>",
    "poll_symbol": ""
  },
  "0x123675": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x123675>",
    "poll_symbol": ""
  },
  "0x123778": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x123778>",
    "poll_symbol": ""
  },
  "0x1237b4": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1237b4>",
    "poll_symbol": ""
  },
  "0x1237d2": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1237d2>",
    "poll_symbol": ""
  },
  "0x124312": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x124312>",
    "poll_symbol": ""
  },
  "0x1243d5": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1243d5>",
    "poll_symbol": ""
  },
  "0x124b1b": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x124b1b>",
    "poll_symbol": ""
  },
  "0x12612e": {
    "name": "{async_block_env#0}<0x12612e>",
    "poll_symbol": ""
  },
  "0x126899": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x126899>",
    "poll_symbol": ""
  },
  "0x126c7d": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x126c7d>",
    "poll_symbol": ""
  },
  "0x126cbc": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x126cbc>",
    "poll_symbol": ""
  },
  "0x126e51": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x126e51>",
    "poll_symbol": ""
  },
  "0x126e90": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x126e90>",
    "poll_symbol": ""
  },
  "0x126ecf": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x126ecf>",
    "poll_symbol": ""
  },
  "0x126f05": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x126f05>",
    "poll_symbol": ""
  },
  "0x126f3b": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x126f3b>",
    "poll_symbol": ""
  },
  "0x126f7a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x126f7a>",
    "poll_symbol": ""
  },
  "0x127327": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x127327>",
    "poll_symbol": ""
  },
  "0x127366": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x127366>",
    "poll_symbol": ""
  },
  "0x12739c": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x12739c>",
    "poll_symbol": ""
  },
  "0x1273db": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1273db>",
    "poll_symbol": ""
  },
  "0x127d19": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x127d19>",
    "poll_symbol": ""
  },
  "0x127e4c": {
    "name": "{async_fn_env#0}<&str><0x127e4c>",
    "poll_symbol": ""
  },
  "0x1280fa": {
    "name": "ResponseFuture<0x1280fa>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x128220": {
    "name": "{async_fn_env#0}<0x128220>",
    "poll_symbol": ""
  },
  "0x1282dc": {
    "name": "{async_fn_env#0}<0x1282dc>",
    "poll_symbol": ""
  },
  "0x1283f4": {
    "name": "{async_fn_env#0}<0x1283f4>",
    "poll_symbol": ""
  },
  "0x128b93": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x128b93>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1290aa": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1290aa>",
    "poll_symbol": ""
  },
  "0x1290d1": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1290d1>",
    "poll_symbol": ""
  },
  "0x1291c3": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1291c3>",
    "poll_symbol": ""
  },
  "0x1291ca": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1291ca>",
    "poll_symbol": ""
  },
  "0x129460": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x129460>",
    "poll_symbol": ""
  },
  "0x129672": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x129672>",
    "poll_symbol": ""
  },
  "0x1298da": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1298da>",
    "poll_symbol": ""
  },
  "0x129904": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x129904>",
    "poll_symbol": ""
  },
  "0x12a1dd": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x12a1dd>",
    "poll_symbol": ""
  },
  "0x12a38e": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x12a38e>",
    "poll_symbol": ""
  },
  "0x12a413": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x12a413>",
    "poll_symbol": ""
  },
  "0x12a43a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x12a43a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x13029c": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x131568": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x131568>",
    "poll_symbol": ""
  },
  "0x1315a7": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1315a7>",
    "poll_symbol": ""
  },
  "0x1315e6": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1315e6>",
    "poll_symbol": ""
  },
  "0x13161c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x13161c>",
    "poll_symbol": ""
  },
  "0x131652": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x131652>",
    "poll_symbol": ""
  },
  "0x131691": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x131691>",
    "poll_symbol": ""
  },
  "0x131ae9": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x131ae9>",
    "poll_symbol": ""
  },
  "0x131b28": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x131b28>",
    "poll_symbol": ""
  },
  "0x131c12": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x131c12>",
    "poll_symbol": ""
  },
  "0x131c51": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x131c51>",
    "poll_symbol": ""
  },
  "0x131c87": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x131c87>",
    "poll_symbol": ""
  },
  "0x131cc6": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x131cc6>",
    "poll_symbol": ""
  },
  "0x1324ff": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1324ff>",
    "poll_symbol": ""
  },
  "0x137b0f": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x137b0f>",
    "poll_symbol": ""
  },
  "0x1380ce": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1380ce>",
    "poll_symbol": ""
  },
  "0x1380ec": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1380ec>",
    "poll_symbol": ""
  },
  "0x13810a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x13810a>",
    "poll_symbol": ""
  },
  "0x138591": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1385f5": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x1386bd": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x138721": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1387e9": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x138d10": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x138d56": {
    "name": "NonNull<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x138d9c": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x138de2": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x138e6e": {
    "name": "NonNull<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x138eb4": {
    "name": "NonNull<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x138efa": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x138f40": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x138f86": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x138f86>",
    "poll_symbol": ""
  },
  "0x138fc2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x138fc2>",
    "poll_symbol": ""
  },
  "0x138fe0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x138fe0>",
    "poll_symbol": ""
  },
  "0x13903a": {
    "name": "NonNull<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x139152": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x139198": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x1395eb": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x13965a": {
    "name": "Unique<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x139738": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x139816": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1398f4": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x139d74": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x139dc5": {
    "name": "Unique<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x139e16": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x139e67": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x139f09": {
    "name": "Unique<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x139f5a": {
    "name": "Unique<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x139fab": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x139ffc": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13a04d": {
    "name": "Unique<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x13a191": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13a1e2": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13a81e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x13a81e>",
    "poll_symbol": ""
  },
  "0x13a83c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x13a83c>",
    "poll_symbol": ""
  },
  "0x13a878": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x13ac7b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x13ac7b>",
    "poll_symbol": ""
  },
  "0x13ac99": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x13ac99>",
    "poll_symbol": ""
  },
  "0x13acb7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x13acb7>",
    "poll_symbol": ""
  },
  "0x13ae04": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x13ae40": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x13ae5e": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x13b3f4": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x13b3f4>",
    "poll_symbol": ""
  },
  "0x13b406": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x13b406>",
    "poll_symbol": ""
  },
  "0x13b418": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x13b418>",
    "poll_symbol": ""
  },
  "0x13b5b6": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x13b5c8": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x13b5ec": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x13b610": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x13b634": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x13b7ae": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13b7c0": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13b7d2": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13b7e4": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x13b808": {
    "name": "PhantomData<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x13b81a": {
    "name": "PhantomData<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x13b82c": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13b83e": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13b850": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x13b850>",
    "poll_symbol": ""
  },
  "0x13b8aa": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x13b8aa>",
    "poll_symbol": ""
  },
  "0x13b8bc": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x13b8bc>",
    "poll_symbol": ""
  },
  "0x13b8ce": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x13b8ce>",
    "poll_symbol": ""
  },
  "0x13b8e0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x13b8e0>",
    "poll_symbol": ""
  },
  "0x13b916": {
    "name": "PhantomData<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x13b95e": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13b970": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x13cf52": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x13cf52>",
    "poll_symbol": ""
  },
  "0x13d015": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x13d015>",
    "poll_symbol": ""
  },
  "0x13dbe5": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x13dbe5>",
    "poll_symbol": ""
  },
  "0x1415e3": {
    "name": "Pin<&mut tokio::sync::mpsc::unbounded::{impl#3}::recv::{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>>",
    "poll_symbol": ""
  },
  "0x14163e": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x14165c": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x14167a": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::sync::mpsc::unbounded::{impl#3}::recv::{async_fn#0}::{closure_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>>>",
    "poll_symbol": ""
  },
  "0x1416b7": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1416d5": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x1416f3": {
    "name": "Pin<&mut tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x141711": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x14172f": {
    "name": "Pin<&mut tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x1417c5": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn#0}::{closure_env#0}>>",
    "poll_symbol": ""
  },
  "0x144fc6": {
    "name": "{async_fn_env#0}<0x144fc6>",
    "poll_symbol": ""
  },
  "0x145082": {
    "name": "{async_fn_env#0}<0x145082>",
    "poll_symbol": ""
  },
  "0x14519a": {
    "name": "{async_fn_env#0}<0x14519a>",
    "poll_symbol": ""
  },
  "0x145266": {
    "name": "{async_fn_env#0}<0x145266>",
    "poll_symbol": ""
  },
  "0x1455c3": {
    "name": "{async_fn_env#0}<0x1455c3>",
    "poll_symbol": ""
  },
  "0x147093": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>",
    "poll_symbol": ""
  },
  "0x147720": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x1478b1": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x147a13": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x147bac": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x147bac>",
    "poll_symbol": ""
  },
  "0x149cb9": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x149cef": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x149d4e": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>>",
    "poll_symbol": ""
  },
  "0x149dad": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x14a1e4": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": ""
  },
  "0x14a25f": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": ""
  },
  "0x14a286": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": ""
  },
  "0x14a2ae": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": ""
  },
  "0x14b447": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x14b447>",
    "poll_symbol": ""
  },
  "0x14b832": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x14b832>",
    "poll_symbol": ""
  },
  "0x14cf7b": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x14cf99": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x14cfb7": {
    "name": "{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x14d93a": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x14d97a": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x14d9b9": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x14d9d7": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x14da92": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x14dad2": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x14db11": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x14db2f": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x14dbbd": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x14dbfd": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x14dc3c": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x14dc7c": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x14edeb": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x14edeb>",
    "poll_symbol": ""
  },
  "0x14ee09": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x14ee09>",
    "poll_symbol": ""
  },
  "0x14f6ad": {
    "name": "{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>",
    "poll_symbol": ""
  },
  "0x14ffd5": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x150078": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x150078>",
    "poll_symbol": ""
  },
  "0x15009f": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x15009f>",
    "poll_symbol": ""
  },
  "0x1500b9": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x1502ce": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x151219": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>",
    "poll_symbol": ""
  },
  "0x151329": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>>",
    "poll_symbol": ""
  },
  "0x151cbb": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x151cbb>",
    "poll_symbol": ""
  },
  "0x151ec7": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x151ec7>",
    "poll_symbol": ""
  },
  "0x152932": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x152932>",
    "poll_symbol": ""
  },
  "0x15295c": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x15295c>",
    "poll_symbol": ""
  },
  "0x153014": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x153040": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x153040>",
    "poll_symbol": ""
  },
  "0x1530bf": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x15313f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x15313f>",
    "poll_symbol": ""
  },
  "0x15316c": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": ""
  },
  "0x153198": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x1531b6": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1531d5": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": ""
  },
  "0x153de0": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x153e07": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x155997": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1559be": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x155dcf": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x155dd6": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x155e8d": {
    "name": "*const (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x155f3b": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x155f42": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x156089": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x156089>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x156090": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x156292": {
    "name": "*const (dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x1563d0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1563d7": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x15648e": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x15653c": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x15653c>",
    "poll_symbol": ""
  },
  "0x156543": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x156543>",
    "poll_symbol": ""
  },
  "0x156674": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x156674>",
    "poll_symbol": ""
  },
  "0x156e9c": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x156ea3": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x156f5a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x156f61": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1585ef": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x15861a": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x158638": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x158656": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x158674": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x158692": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1589d9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x158a11": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x158a49": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x158a49>",
    "poll_symbol": ""
  },
  "0x158a9b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x158b96": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x158bc1": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x159737": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x159737>",
    "poll_symbol": ""
  },
  "0x159a76": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x159a76>",
    "poll_symbol": ""
  },
  "0x15a004": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x15a004>",
    "poll_symbol": ""
  },
  "0x15a022": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x15a022>",
    "poll_symbol": ""
  },
  "0x15a570": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x15a570>",
    "poll_symbol": ""
  },
  "0x15a58e": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x15a58e>",
    "poll_symbol": ""
  },
  "0x15a5ac": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x15a5ac>",
    "poll_symbol": ""
  },
  "0x15ad03": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x15ad03>",
    "poll_symbol": ""
  },
  "0x15ad21": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x15ad21>",
    "poll_symbol": ""
  },
  "0x15ad3f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x15ad3f>",
    "poll_symbol": ""
  },
  "0x15adf3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x15adf3>",
    "poll_symbol": ""
  },
  "0x15ae11": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x15af42": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x15af42>",
    "poll_symbol": ""
  },
  "0x15af60": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x15af60>",
    "poll_symbol": ""
  },
  "0x15b997": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x15b997>",
    "poll_symbol": ""
  },
  "0x15b9a9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x15b9a9>",
    "poll_symbol": ""
  },
  "0x15b9bb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x15b9bb>",
    "poll_symbol": ""
  },
  "0x15ba15": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x15ba15>",
    "poll_symbol": ""
  },
  "0x15ba27": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x15ba27>",
    "poll_symbol": ""
  },
  "0x15ba39": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x15ba39>",
    "poll_symbol": ""
  },
  "0x15baff": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x15baff>",
    "poll_symbol": ""
  },
  "0x15bb11": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x15bb11>",
    "poll_symbol": ""
  },
  "0x15e150": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x15e150>",
    "poll_symbol": ""
  },
  "0x15e213": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x15e213>",
    "poll_symbol": ""
  },
  "0x15e70c": {
    "name": "Option<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x15e83d": {
    "name": "Option<&mut ((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x15ea30": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x15ef94": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x15ef94>",
    "poll_symbol": ""
  },
  "0x15fd95": {
    "name": "Result<(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>), h2::error::Error>",
    "poll_symbol": ""
  },
  "0x1606c9": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>",
    "poll_symbol": ""
  },
  "0x161a89": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>>",
    "poll_symbol": ""
  },
  "0x161ac6": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x161b03": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161bb9": {
    "name": "Pin<&mut h2::client::bind_connection::{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>>>",
    "poll_symbol": ""
  },
  "0x161c14": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn#0}::{closure_env#0}>><0x161c14>",
    "poll_symbol": ""
  },
  "0x161c8d": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x166eb1": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x166eb1>",
    "poll_symbol": ""
  },
  "0x166fdd": {
    "name": "ResponseFuture<0x166fdd>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x167189": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x167189>",
    "poll_symbol": ""
  },
  "0x167bc4": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x167bc4>",
    "poll_symbol": ""
  },
  "0x1685ea": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1685ea>",
    "poll_symbol": ""
  },
  "0x168783": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x168783>",
    "poll_symbol": ""
  },
  "0x1688b2": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1688b2>",
    "poll_symbol": ""
  },
  "0x168a43": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x168a43>",
    "poll_symbol": ""
  },
  "0x169a15": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x169a15>",
    "poll_symbol": ""
  },
  "0x16a9d0": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x16a9d0>",
    "poll_symbol": ""
  },
  "0x16aa0f": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x16aa0f>",
    "poll_symbol": ""
  },
  "0x16aa4e": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x16aa4e>",
    "poll_symbol": ""
  },
  "0x16aa84": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x16aa84>",
    "poll_symbol": ""
  },
  "0x16aaba": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x16aaba>",
    "poll_symbol": ""
  },
  "0x16aaf9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x16aaf9>",
    "poll_symbol": ""
  },
  "0x16ad07": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16ad07>",
    "poll_symbol": ""
  },
  "0x16ad46": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x16ad46>",
    "poll_symbol": ""
  },
  "0x16ad7c": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x16ad7c>",
    "poll_symbol": ""
  },
  "0x16adbb": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x16adbb>",
    "poll_symbol": ""
  },
  "0x16adf1": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x16adf1>",
    "poll_symbol": ""
  },
  "0x16ae30": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x16ae30>",
    "poll_symbol": ""
  },
  "0x16b0c0": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16b0c0>",
    "poll_symbol": ""
  },
  "0x170a4c": {
    "name": "{async_fn_env#0}<0x170a4c>",
    "poll_symbol": ""
  },
  "0x171717": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x171717>",
    "poll_symbol": ""
  },
  "0x172076": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x172acb": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x172acb>",
    "poll_symbol": ""
  },
  "0x172b45": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x173037": {
    "name": "RustcEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1730c8": {
    "name": "RustcOccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x173104": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x173f06": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver>",
    "poll_symbol": ""
  },
  "0x1740ec": {
    "name": "GaiFuture",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1742f1": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1742f1>",
    "poll_symbol": ""
  },
  "0x17517c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x17517c>",
    "poll_symbol": ""
  },
  "0x1751a3": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x1751a3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1759c4": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x17a521": {
    "name": "(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>)",
    "poll_symbol": ""
  },
  "0x17c044": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x17c044>",
    "poll_symbol": ""
  },
  "0x17c06e": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x17c06e>",
    "poll_symbol": ""
  },
  "0x17c376": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x17c376>",
    "poll_symbol": ""
  },
  "0x17e8e7": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x17e8e7>",
    "poll_symbol": ""
  },
  "0x17e8ee": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x17e8ee>",
    "poll_symbol": ""
  },
  "0x17f08a": {
    "name": "<hashbrown::raw::{impl#8}::reserve_rehash::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>> as core::ops::function::Fn<(&mut hashbrown::raw::RawTableInner, usize)>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x17f107": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>>",
    "poll_symbol": ""
  },
  "0x17f9cc": {
    "name": "{closure_env#1}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>>",
    "poll_symbol": ""
  },
  "0x17fe3f": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x17fe5d": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x181e86": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x181e86>",
    "poll_symbol": ""
  },
  "0x182419": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x182419>",
    "poll_symbol": ""
  },
  "0x18253b": {
    "name": "RawIter<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x182565": {
    "name": "RawIterRange<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x183466": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": ""
  },
  "0x1834f1": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x1834f1>",
    "poll_symbol": ""
  },
  "0x1835b9": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x183e4e": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x183e4e>",
    "poll_symbol": ""
  },
  "0x184d82": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x184d82>",
    "poll_symbol": ""
  },
  "0x184db5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x184db5>",
    "poll_symbol": ""
  },
  "0x184e85": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x184e85>",
    "poll_symbol": ""
  },
  "0x184ec1": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x184ec1>",
    "poll_symbol": ""
  },
  "0x184edf": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x184edf>",
    "poll_symbol": ""
  },
  "0x185248": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x185248>",
    "poll_symbol": ""
  },
  "0x185266": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x185266>",
    "poll_symbol": ""
  },
  "0x185284": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x185284>",
    "poll_symbol": ""
  },
  "0x1853b0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1853b0>",
    "poll_symbol": ""
  },
  "0x1853ce": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1853ce>",
    "poll_symbol": ""
  },
  "0x18742e": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x18742e>",
    "poll_symbol": ""
  },
  "0x187440": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x187440>",
    "poll_symbol": ""
  },
  "0x187452": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x187452>",
    "poll_symbol": ""
  },
  "0x1875e6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1875e6>",
    "poll_symbol": ""
  },
  "0x1875f8": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1875f8>",
    "poll_symbol": ""
  },
  "0x18760a": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x18760a>",
    "poll_symbol": ""
  },
  "0x187f02": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x187f02>",
    "poll_symbol": ""
  },
  "0x187fc5": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x187fc5>",
    "poll_symbol": ""
  },
  "0x188b06": {
    "name": "Option<hashbrown::raw::Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>>",
    "poll_symbol": ""
  },
  "0x188f99": {
    "name": "Option<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x188f99>",
    "poll_symbol": ""
  },
  "0x18ab5a": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x18ab5a>",
    "poll_symbol": ""
  },
  "0x18ac98": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x18ac98>",
    "poll_symbol": ""
  },
  "0x18acd7": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x18acd7>",
    "poll_symbol": ""
  },
  "0x18ad16": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x18ad16>",
    "poll_symbol": ""
  },
  "0x18ad4c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x18ad4c>",
    "poll_symbol": ""
  },
  "0x18ad82": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x18ad82>",
    "poll_symbol": ""
  },
  "0x18adc1": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x18adc1>",
    "poll_symbol": ""
  },
  "0x18b12f": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x18b12f>",
    "poll_symbol": ""
  },
  "0x18b16e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x18b16e>",
    "poll_symbol": ""
  },
  "0x18b1af": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x18b1af>",
    "poll_symbol": ""
  },
  "0x18bf96": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x18bf96>",
    "poll_symbol": ""
  },
  "0x18bfc0": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x18bfc0>",
    "poll_symbol": ""
  },
  "0x18d7d3": {
    "name": "<hashbrown::raw::{impl#8}::find::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>> as core::ops::function::FnMut<(usize)>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x18d830": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x18d830>",
    "poll_symbol": ""
  },
  "0x18d86e": {
    "name": "<hashbrown::raw::{impl#8}::find::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>> as core::ops::function::FnMut<(usize)>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x19deed": {
    "name": "(((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), hashbrown::raw::InsertSlot)",
    "poll_symbol": ""
  },
  "0x19e90b": {
    "name": "<hyper_util::client::legacy::client::{impl#1}::send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x19e97c": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x19ee9f": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x19ee9f>",
    "poll_symbol": ""
  },
  "0x19f73e": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x19f73e>",
    "poll_symbol": ""
  },
  "0x19fba6": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x19fba6>",
    "poll_symbol": ""
  },
  "0x1a04b5": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1a04b5>",
    "poll_symbol": ""
  },
  "0x1a3029": {
    "name": "ResponseFuture<0x1a3029>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1a3d84": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x1a3dac": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x1a3e5e": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1a602a": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1a602a>",
    "poll_symbol": ""
  },
  "0x1a6069": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1a6069>",
    "poll_symbol": ""
  },
  "0x1a61fe": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1a61fe>",
    "poll_symbol": ""
  },
  "0x1a623d": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1a623d>",
    "poll_symbol": ""
  },
  "0x1a627c": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1a627c>",
    "poll_symbol": ""
  },
  "0x1a62b2": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1a62b2>",
    "poll_symbol": ""
  },
  "0x1a62e8": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1a62e8>",
    "poll_symbol": ""
  },
  "0x1a6327": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1a6327>",
    "poll_symbol": ""
  },
  "0x1a66d4": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1a66d4>",
    "poll_symbol": ""
  },
  "0x1a6713": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1a6713>",
    "poll_symbol": ""
  },
  "0x1a6749": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1a6749>",
    "poll_symbol": ""
  },
  "0x1a6788": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1a6788>",
    "poll_symbol": ""
  },
  "0x1a71c9": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1a7208": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>",
    "poll_symbol": ""
  },
  "0x1a735e": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1a739d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x1a83a7": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1a83a7>",
    "poll_symbol": ""
  },
  "0x1a850c": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1a8748": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1a8748>",
    "poll_symbol": ""
  },
  "0x1a87c6": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1a8b36": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1a8b36>",
    "poll_symbol": ""
  },
  "0x1a8bae": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1a8bae>",
    "poll_symbol": ""
  },
  "0x1a8bcc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1a8bcc>",
    "poll_symbol": ""
  },
  "0x1a8bea": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1a8bea>",
    "poll_symbol": ""
  },
  "0x1a8d16": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1a8d16>",
    "poll_symbol": ""
  },
  "0x1a8d34": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1a8d34>",
    "poll_symbol": ""
  },
  "0x1a907c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>>",
    "poll_symbol": ""
  },
  "0x1a92f7": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x1a9796": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1a9796>",
    "poll_symbol": ""
  },
  "0x1a97c9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1a97c9>",
    "poll_symbol": ""
  },
  "0x1a9889": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1a9889>",
    "poll_symbol": ""
  },
  "0x1a9926": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1a9926>",
    "poll_symbol": ""
  },
  "0x1a9962": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1a9962>",
    "poll_symbol": ""
  },
  "0x1a9980": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1a9980>",
    "poll_symbol": ""
  },
  "0x1a9fba": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1a9fba>",
    "poll_symbol": ""
  },
  "0x1aa0ce": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1aa0ce>",
    "poll_symbol": ""
  },
  "0x1aa13a": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1aa13a>",
    "poll_symbol": ""
  },
  "0x1aa14c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1aa14c>",
    "poll_symbol": ""
  },
  "0x1aa15e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1aa15e>",
    "poll_symbol": ""
  },
  "0x1aa304": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1aa304>",
    "poll_symbol": ""
  },
  "0x1aa316": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1aa316>",
    "poll_symbol": ""
  },
  "0x1aa328": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1aa328>",
    "poll_symbol": ""
  },
  "0x1aa33a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1aa33a>",
    "poll_symbol": ""
  },
  "0x1aa718": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>>",
    "poll_symbol": ""
  },
  "0x1aa72a": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>>",
    "poll_symbol": ""
  },
  "0x1aa73c": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x1aa8ec": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x1aafd3": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1aafd3>",
    "poll_symbol": ""
  },
  "0x1ab096": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1ab096>",
    "poll_symbol": ""
  },
  "0x1ab7dc": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1ab7dc>",
    "poll_symbol": ""
  },
  "0x1abb39": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1abb9a": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)>",
    "poll_symbol": ""
  },
  "0x1acc31": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1acc92": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x1ad49e": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x1ad8d2": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x1ad933": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0x1adc14": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1adc14>",
    "poll_symbol": ""
  },
  "0x1adc32": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x1adc32>",
    "poll_symbol": ""
  },
  "0x1addb8": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1addd6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1addf4": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1ade12": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#7}::handshake::{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ade4f": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#7}::handshake::{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ade8c": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#1}::ready::{async_fn_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1adec9": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#1}::ready::{async_fn_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1adf43": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1adf80": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1adfbd": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::connection_for::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1adffa": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1ae037": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1ae074": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x1ae0ee": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x1ae0ee>",
    "poll_symbol": ""
  },
  "0x1ae10c": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1ae169": {
    "name": "Pin<&mut tower_http::follow_redirect::ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy>>",
    "poll_symbol": ""
  },
  "0x1ae1c3": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x1ae1c3>",
    "poll_symbol": ""
  },
  "0x1b3e6e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1b3e6e>",
    "poll_symbol": ""
  },
  "0x1b3efe": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": ""
  },
  "0x1b3f6d": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1b3f6d>",
    "poll_symbol": ""
  },
  "0x1b5e35": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x1b5e35>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1b5ef2": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1b5ef2>",
    "poll_symbol": ""
  },
  "0x1b5f19": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1b5f19>",
    "poll_symbol": ""
  },
  "0x1b5f87": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1b5f87>",
    "poll_symbol": ""
  },
  "0x1b5f8e": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1b5f8e>",
    "poll_symbol": ""
  },
  "0x1b605a": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1b605a>",
    "poll_symbol": ""
  },
  "0x1b61f3": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1b61f3>",
    "poll_symbol": ""
  },
  "0x1b62c8": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x1b642b": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1b642b>",
    "poll_symbol": ""
  },
  "0x1b65bc": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1b65bc>",
    "poll_symbol": ""
  },
  "0x1b6691": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x1b6691>",
    "poll_symbol": ""
  },
  "0x1b6c5e": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x1b6c5e>",
    "poll_symbol": ""
  },
  "0x1b7e96": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1b7e96>",
    "poll_symbol": ""
  },
  "0x1b7f65": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1b8132": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1b8132>",
    "poll_symbol": ""
  },
  "0x1b81ef": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1b8482": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1b8482>",
    "poll_symbol": ""
  },
  "0x1b84ac": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1b84ac>",
    "poll_symbol": ""
  },
  "0x1bada2": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x1bada2>",
    "poll_symbol": ""
  },
  "0x1baeb2": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x1baeb2>",
    "poll_symbol": ""
  },
  "0x1baf99": {
    "name": "ResponseFuture<0x1baf99>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1be19e": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1be19e>",
    "poll_symbol": ""
  },
  "0x1be1f2": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x1be274": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1be274>",
    "poll_symbol": ""
  },
  "0x1be2f3": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)>",
    "poll_symbol": ""
  },
  "0x1be375": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1be3f8": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x1be3f8>",
    "poll_symbol": ""
  },
  "0x1be480": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1be4dd": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>",
    "poll_symbol": ""
  },
  "0x1be4fb": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1be519": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1be539": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x1be561": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1be58e": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1be58e>",
    "poll_symbol": ""
  },
  "0x1be63b": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1be669": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1be695": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1be695>",
    "poll_symbol": ""
  },
  "0x1be717": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1be79a": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1be819": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1be898": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1be91b": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1be99f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1be99f>",
    "poll_symbol": ""
  },
  "0x1be9c7": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1be9c7>",
    "poll_symbol": ""
  },
  "0x1be9ee": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1be9ee>",
    "poll_symbol": ""
  },
  "0x1bea15": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1bea15>",
    "poll_symbol": ""
  },
  "0x1bea3d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1bea3d>",
    "poll_symbol": ""
  },
  "0x1beaef": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1beebd": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x1beebd>",
    "poll_symbol": ""
  },
  "0x1beee4": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x1beee4>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1bef57": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": ""
  },
  "0x1bef76": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": ""
  },
  "0x1befc6": {
    "name": "<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x1bf3c0": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x1bf3c0>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1c0dbe": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x1c0dbe>",
    "poll_symbol": ""
  },
  "0x1c0de5": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x1c0de5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1c18a9": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>)",
    "poll_symbol": ""
  },
  "0x1c1d21": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1c1d21>",
    "poll_symbol": ""
  },
  "0x1c1d48": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x1c1d48>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1c4945": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x1c4945>",
    "poll_symbol": ""
  },
  "0x1c496c": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x1c496c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1c5c08": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1c5c08>",
    "poll_symbol": ""
  },
  "0x1c68e8": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1c68e8>",
    "poll_symbol": ""
  },
  "0x1c6927": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1c6927>",
    "poll_symbol": ""
  },
  "0x1c6966": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1c6966>",
    "poll_symbol": ""
  },
  "0x1c699c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1c699c>",
    "poll_symbol": ""
  },
  "0x1c69d2": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1c69d2>",
    "poll_symbol": ""
  },
  "0x1c6a11": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1c6a11>",
    "poll_symbol": ""
  },
  "0x1c6d7f": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1c6d7f>",
    "poll_symbol": ""
  },
  "0x1c6dbe": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1c6dbe>",
    "poll_symbol": ""
  },
  "0x1c6df4": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1c6df4>",
    "poll_symbol": ""
  },
  "0x1c6e33": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1c6e33>",
    "poll_symbol": ""
  },
  "0x1c6e69": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1c6e69>",
    "poll_symbol": ""
  },
  "0x1c6ea8": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1c6ea8>",
    "poll_symbol": ""
  },
  "0x1c732e": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x1c732e>",
    "poll_symbol": ""
  },
  "0x1c736d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x1c736d>",
    "poll_symbol": ""
  },
  "0x1c76ef": {
    "name": "Weak<futures_channel::oneshot::Inner<core::convert::Infallible>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1c7722": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1c78a5": {
    "name": "Weak<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1c7971": {
    "name": "Weak<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1c7c76": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1c7c76>",
    "poll_symbol": ""
  },
  "0x1c7df7": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1c7e21": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1c7e21>",
    "poll_symbol": ""
  },
  "0x1c9480": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1c9480>",
    "poll_symbol": ""
  },
  "0x1c9543": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1c9543>",
    "poll_symbol": ""
  },
  "0x1c9e71": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x1c9ed2": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)>",
    "poll_symbol": ""
  },
  "0x1ca36a": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1ca36a>",
    "poll_symbol": ""
  },
  "0x1ca8ba": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1ca8ba>",
    "poll_symbol": ""
  },
  "0x1ca91b": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x1ca91b>",
    "poll_symbol": ""
  },
  "0x1cad55": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1cad55>",
    "poll_symbol": ""
  },
  "0x1cadb6": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1cadb6>",
    "poll_symbol": ""
  },
  "0x1cae79": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1caeda": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x1caf3c": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x1caf3c>",
    "poll_symbol": ""
  },
  "0x1cb8d0": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x1cbac3": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x1cc765": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x1cc82b": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x1cc82b>",
    "poll_symbol": ""
  },
  "0x1cd42e": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1cd42e>",
    "poll_symbol": ""
  },
  "0x1cd44c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1cd44c>",
    "poll_symbol": ""
  },
  "0x1cd46a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1cd46a>",
    "poll_symbol": ""
  },
  "0x1cd5b4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1cd5b4>",
    "poll_symbol": ""
  },
  "0x1cd5d2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1cd5d2>",
    "poll_symbol": ""
  },
  "0x1cd5f0": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1cd5f0>",
    "poll_symbol": ""
  },
  "0x1cd71c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x1cd71c>",
    "poll_symbol": ""
  },
  "0x1cd776": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x1cd776>",
    "poll_symbol": ""
  },
  "0x1cd794": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x1cd794>",
    "poll_symbol": ""
  },
  "0x1cd7b2": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x1cd7b2>",
    "poll_symbol": ""
  },
  "0x1cd7ee": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x1cd7ee>",
    "poll_symbol": ""
  },
  "0x1d9bc2": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1d9bc2>",
    "poll_symbol": ""
  },
  "0x1d9bd4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1d9bd4>",
    "poll_symbol": ""
  },
  "0x1d9be6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1d9be6>",
    "poll_symbol": ""
  },
  "0x1d9d96": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1d9d96>",
    "poll_symbol": ""
  },
  "0x1d9da8": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1d9da8>",
    "poll_symbol": ""
  },
  "0x1d9dba": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1d9dba>",
    "poll_symbol": ""
  },
  "0x1d9dcc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1d9dcc>",
    "poll_symbol": ""
  },
  "0x1d9dde": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1d9dde>",
    "poll_symbol": ""
  },
  "0x1d9efe": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x1d9efe>",
    "poll_symbol": ""
  },
  "0x1da0e4": {
    "name": "PhantomData<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x1da198": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1da1bc": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1da459": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1da459>",
    "poll_symbol": ""
  },
  "0x1da477": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1da477>",
    "poll_symbol": ""
  },
  "0x1da4b3": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1da4b3>",
    "poll_symbol": ""
  },
  "0x1dae42": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1dae61": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1dae80": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dae9f": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1daebd": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1daedb": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1daef9": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x1daf17": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1daf36": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1daf54": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x1daf72": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1daf91": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dafb0": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dd0d1": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x1dd6dc": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1dd6dc>",
    "poll_symbol": ""
  },
  "0x1dd6fa": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1dd6fa>",
    "poll_symbol": ""
  },
  "0x1dd718": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1dd718>",
    "poll_symbol": ""
  },
  "0x1dd8fb": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1dd8fb>",
    "poll_symbol": ""
  },
  "0x1dd937": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x1dd937>",
    "poll_symbol": ""
  },
  "0x1dd973": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x1dd973>",
    "poll_symbol": ""
  },
  "0x1ddfff": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)>",
    "poll_symbol": ""
  },
  "0x1de124": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>>",
    "poll_symbol": ""
  },
  "0x1df98a": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>",
    "poll_symbol": ""
  },
  "0x1e016b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x1e016b>",
    "poll_symbol": ""
  },
  "0x1e0189": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x1e0189>",
    "poll_symbol": ""
  },
  "0x1e01a7": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1e01a7>",
    "poll_symbol": ""
  },
  "0x1e01c5": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1e0201": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x1e0201>",
    "poll_symbol": ""
  },
  "0x1e023d": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e025b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e0279": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e02b5": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1e02b5>",
    "poll_symbol": ""
  },
  "0x1e02d3": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x1e02d3>",
    "poll_symbol": ""
  },
  "0x1e02f1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x1e02f1>",
    "poll_symbol": ""
  },
  "0x1e0da8": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1e0dd2": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1e0dfd": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1e18c5": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e18c5>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x1e1905": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e1905>",
    "poll_symbol": ""
  },
  "0x1e1944": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x1e1944>",
    "poll_symbol": ""
  },
  "0x1e1962": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x1e1962>",
    "poll_symbol": ""
  },
  "0x1e1a1d": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e1a1d>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x1e1a5d": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e1a5d>",
    "poll_symbol": ""
  },
  "0x1e1a9c": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x1e1a9c>",
    "poll_symbol": ""
  },
  "0x1e1aba": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x1e1aba>",
    "poll_symbol": ""
  },
  "0x1e1b48": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e1b48>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x1e1b88": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e1b88>",
    "poll_symbol": ""
  },
  "0x1e1bc7": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e1bc7>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x1e1c07": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e1c07>",
    "poll_symbol": ""
  },
  "0x1e1c50": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e1c63": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e1c76": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e1c89": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e1fbc": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e1fda": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e1fda>",
    "poll_symbol": ""
  },
  "0x1e1ff8": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e1ff8>",
    "poll_symbol": ""
  },
  "0x1e2016": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e2016>",
    "poll_symbol": ""
  },
  "0x1e2034": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e2034>",
    "poll_symbol": ""
  },
  "0x1e2052": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e2070": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e208e": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e20b2": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e20b2>",
    "poll_symbol": ""
  },
  "0x1e20c5": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e20c5>",
    "poll_symbol": ""
  },
  "0x1e20d8": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e20d8>",
    "poll_symbol": ""
  },
  "0x1e20eb": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e20eb>",
    "poll_symbol": ""
  },
  "0x1e2100": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e2127": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e214e": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e217a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e217a>",
    "poll_symbol": ""
  },
  "0x1e218d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e218d>",
    "poll_symbol": ""
  },
  "0x1e21a0": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x1e21a0>",
    "poll_symbol": ""
  },
  "0x1e21b3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x1e21b3>",
    "poll_symbol": ""
  },
  "0x1e21c7": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e21f8": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e221f": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e2246": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e226d": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1e28d0": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>>",
    "poll_symbol": ""
  },
  "0x1e28e3": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>>",
    "poll_symbol": ""
  },
  "0x1e2da6": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x1e2da6>",
    "poll_symbol": ""
  },
  "0x1e2dc4": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x1e2dc4>",
    "poll_symbol": ""
  },
  "0x1e376b": {
    "name": "{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>><0x1e376b>",
    "poll_symbol": ""
  },
  "0x1e3bc6": {
    "name": "{async_fn_env#0}<0x1e3bc6>",
    "poll_symbol": ""
  },
  "0x1e3cac": {
    "name": "{async_fn_env#0}<0x1e3cac>",
    "poll_symbol": ""
  },
  "0x1e3de6": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1e3e04": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1e4ece": {
    "name": "{async_fn_env#0}<0x1e4ece>",
    "poll_symbol": ""
  },
  "0x1e50fe": {
    "name": "{async_block_env#0}<0x1e50fe>",
    "poll_symbol": ""
  },
  "0x1e5274": {
    "name": "{async_fn_env#0}<0x1e5274>",
    "poll_symbol": ""
  },
  "0x1e5535": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x1e5535>",
    "poll_symbol": ""
  },
  "0x1e56e8": {
    "name": "{async_block_env#0}<reqwest::dns::resolve::DynResolver>",
    "poll_symbol": ""
  },
  "0x1e5815": {
    "name": "GaiFuture<0x1e5815>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1e582f": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x1e582f>",
    "poll_symbol": ""
  },
  "0x1e5bbb": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x1e5dd3": {
    "name": "{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>>",
    "poll_symbol": ""
  },
  "0x1e6343": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1e6343>",
    "poll_symbol": ""
  },
  "0x1e68de": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1e68de>",
    "poll_symbol": ""
  },
  "0x1e6baf": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1e6baf>",
    "poll_symbol": ""
  },
  "0x1e6d7b": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1e6d7b>",
    "poll_symbol": ""
  },
  "0x1e6ed7": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1e6ed7>",
    "poll_symbol": ""
  },
  "0x1e717b": {
    "name": "ResponseFuture<0x1e717b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1e73cb": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1e73cb>",
    "poll_symbol": ""
  },
  "0x1e73f3": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1e73f3>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x1e749f": {
    "name": "InnerProjReplace<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x1e75ed": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x1e75ed>",
    "poll_symbol": ""
  },
  "0x1e778e": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x1e778e>",
    "poll_symbol": ""
  },
  "0x1e7894": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x1e7894>",
    "poll_symbol": ""
  },
  "0x1e86ee": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x1e86ee>",
    "poll_symbol": ""
  },
  "0x1e8a8b": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>",
    "poll_symbol": ""
  },
  "0x1e9142": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1e9142>",
    "poll_symbol": ""
  },
  "0x1e92db": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1e92db>",
    "poll_symbol": ""
  },
  "0x1e9406": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x1e9406>",
    "poll_symbol": ""
  },
  "0x1e9523": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1e9523>",
    "poll_symbol": ""
  },
  "0x1e96b4": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1e96b4>",
    "poll_symbol": ""
  },
  "0x1e97b9": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x1e97b9>",
    "poll_symbol": ""
  },
  "0x1ebdc3": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x1ebdc3>",
    "poll_symbol": ""
  },
  "0x1ebed3": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x1ebed3>",
    "poll_symbol": ""
  },
  "0x1ebfba": {
    "name": "ResponseFuture<0x1ebfba>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1ec723": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1ec723>",
    "poll_symbol": ""
  },
  "0x1ecda2": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1ecda2>",
    "poll_symbol": ""
  },
  "0x1ece29": {
    "name": "VacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1ed6ec": {
    "name": "{async_block_env#0}<0x1ed6ec>",
    "poll_symbol": ""
  },
  "0x1eda62": {
    "name": "ResponseFuture<0x1eda62>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1edfa0": {
    "name": "{async_fn_env#0}<0x1edfa0>",
    "poll_symbol": ""
  },
  "0x1ee2ee": {
    "name": "{async_fn_env#0}<0x1ee2ee>",
    "poll_symbol": ""
  },
  "0x1ee4ba": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1ee5dd": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1ee7c4": {
    "name": "{async_block_env#0}<0x1ee7c4>",
    "poll_symbol": ""
  },
  "0x1ef15b": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x1ef15b>",
    "poll_symbol": ""
  },
  "0x1ef187": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x1ef187>",
    "poll_symbol": ""
  },
  "0x1ef1a5": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x1ef1a5>",
    "poll_symbol": ""
  },
  "0x1ef1c3": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ef1c3>",
    "poll_symbol": ""
  },
  "0x1ef1e1": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x1ef1e1>",
    "poll_symbol": ""
  },
  "0x1ef200": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ef21f": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>",
    "poll_symbol": ""
  },
  "0x1ef23d": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x1ef23d>",
    "poll_symbol": ""
  },
  "0x1ef25c": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ef25c>",
    "poll_symbol": ""
  },
  "0x1ef284": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ef284>",
    "poll_symbol": ""
  },
  "0x1ef2dc": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1ef2dc>",
    "poll_symbol": ""
  },
  "0x1ef304": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ef304>",
    "poll_symbol": ""
  },
  "0x1ef331": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1ef331>",
    "poll_symbol": ""
  },
  "0x1ef42d": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x1ef42d>",
    "poll_symbol": ""
  },
  "0x1ef45a": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1ef45a>",
    "poll_symbol": ""
  },
  "0x1ef486": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1ef486>",
    "poll_symbol": ""
  },
  "0x1ef505": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ef505>",
    "poll_symbol": ""
  },
  "0x1ef587": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ef587>",
    "poll_symbol": ""
  },
  "0x1ef60a": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ef60a>",
    "poll_symbol": ""
  },
  "0x1ef68d": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ef68d>",
    "poll_symbol": ""
  },
  "0x1ef70c": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ef70c>",
    "poll_symbol": ""
  },
  "0x1ef78f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1ef812": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ef895": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1ef914": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ef993": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1ef993>",
    "poll_symbol": ""
  },
  "0x1efa12": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1efa12>",
    "poll_symbol": ""
  },
  "0x1efa91": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1efb11": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1efb95": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1efb95>",
    "poll_symbol": ""
  },
  "0x1efbbc": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1efbbc>",
    "poll_symbol": ""
  },
  "0x1efbe4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1efbe4>",
    "poll_symbol": ""
  },
  "0x1efc0c": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1efc0c>",
    "poll_symbol": ""
  },
  "0x1efc33": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1efc33>",
    "poll_symbol": ""
  },
  "0x1efc5b": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1efc5b>",
    "poll_symbol": ""
  },
  "0x1efc83": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1efc83>",
    "poll_symbol": ""
  },
  "0x1efcab": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1efcab>",
    "poll_symbol": ""
  },
  "0x1efcd2": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1efcd2>",
    "poll_symbol": ""
  },
  "0x1efcf9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1efcf9>",
    "poll_symbol": ""
  },
  "0x1efd20": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1efd20>",
    "poll_symbol": ""
  },
  "0x1efd4d": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x1efdcd": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x1efe4c": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1efe4c>",
    "poll_symbol": ""
  },
  "0x1efece": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1efece>",
    "poll_symbol": ""
  },
  "0x1eff4d": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x1eff4d>",
    "poll_symbol": ""
  },
  "0x1effcf": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x1f00d1": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>><0x1f00d1>",
    "poll_symbol": ""
  },
  "0x1f0154": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x1f0154>",
    "poll_symbol": ""
  },
  "0x1f01dc": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x1f0203": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>",
    "poll_symbol": ""
  },
  "0x1f022a": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x1f022a>",
    "poll_symbol": ""
  },
  "0x1f03e1": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x1f100f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1f100f>",
    "poll_symbol": ""
  },
  "0x1f106c": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x1f106c>",
    "poll_symbol": ""
  },
  "0x1f10d1": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1f10d1>",
    "poll_symbol": ""
  },
  "0x1f132a": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1f132a>",
    "poll_symbol": ""
  },
  "0x1f13b5": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>><0x1f13b5>",
    "poll_symbol": ""
  },
  "0x1f140f": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>><0x1f140f>",
    "poll_symbol": ""
  },
  "0x1f14ab": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>><0x1f14ab>",
    "poll_symbol": ""
  },
  "0x1f14fe": {
    "name": "{closure_env#1}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>><0x1f14fe>",
    "poll_symbol": ""
  },
  "0x1f164c": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1f164c>",
    "poll_symbol": ""
  },
  "0x1f16a9": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x1f16a9>",
    "poll_symbol": ""
  },
  "0x1f212d": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1f212d>",
    "poll_symbol": ""
  },
  "0x1f2157": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1f2157>",
    "poll_symbol": ""
  },
  "0x1f31b6": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x1f31b6>",
    "poll_symbol": ""
  },
  "0x1f31dd": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x1f31dd>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f375d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x1f375d>",
    "poll_symbol": ""
  },
  "0x1f3784": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x1f3784>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f378b": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": ""
  },
  "0x1f3818": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": ""
  },
  "0x1f3861": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": ""
  },
  "0x1f387f": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)",
    "poll_symbol": ""
  },
  "0x1f3aa0": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1f3aa0>",
    "poll_symbol": ""
  },
  "0x1f3acb": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1f3acb>",
    "poll_symbol": ""
  },
  "0x1f3ad2": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1f3ad2>",
    "poll_symbol": ""
  },
  "0x1f3f3e": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x1f3f3e>",
    "poll_symbol": ""
  },
  "0x1f3f71": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x1f3f71>",
    "poll_symbol": ""
  },
  "0x1f3fa4": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x1f3fa4>",
    "poll_symbol": ""
  },
  "0x1f4043": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x1f4043>",
    "poll_symbol": ""
  },
  "0x1f406a": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x1f406a>",
    "poll_symbol": ""
  },
  "0x1f4202": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x1f4202>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1f4298": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1f4298>",
    "poll_symbol": ""
  },
  "0x1f42bf": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1f42bf>",
    "poll_symbol": ""
  },
  "0x1f4377": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x1f4377>",
    "poll_symbol": ""
  },
  "0x1f43b4": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x1f43b4>",
    "poll_symbol": ""
  },
  "0x1f446a": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)",
    "poll_symbol": ""
  },
  "0x1f4806": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x1f4959": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x1f4a71": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x1f4b9e": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x1f4ccc": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x1f4cf3": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x1f4e30": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x1f4e57": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x1f50dc": {
    "name": "{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>",
    "poll_symbol": ""
  },
  "0x1f5169": {
    "name": "{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": ""
  },
  "0x1f5b61": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x1f5b61>",
    "poll_symbol": ""
  },
  "0x1f5b88": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x1f5b88>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f5b8f": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x1f5b8f>",
    "poll_symbol": ""
  },
  "0x1f5bb6": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x1f5bb6>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f5c38": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x1f5c38>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x1f5f2d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x1f5f2d>",
    "poll_symbol": ""
  },
  "0x1f5f54": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x1f5f54>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f6336": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x1f6336>",
    "poll_symbol": ""
  },
  "0x1f635d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x1f635d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f6483": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1f6483>",
    "poll_symbol": ""
  },
  "0x1f64aa": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x1f64aa>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f64bb": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x1f64d9": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1f6505": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x1f6523": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f6541": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1f656d": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f6599": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": ""
  },
  "0x1f65b7": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f65d5": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": ""
  },
  "0x1f65f3": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f6611": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f662f": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x1f664d": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1f666b": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x1f6689": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1f66b3": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f66d1": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f66ef": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f6719": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f6743": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x1f676d": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1f6799": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1f67c3": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x1f67ed": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1f6819": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f6845": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1f688b": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": ""
  },
  "0x1f697b": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>, ())",
    "poll_symbol": ""
  },
  "0x1f69f4": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6a12": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x1f6a12>",
    "poll_symbol": ""
  },
  "0x1f6a39": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x1f6a39>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f6af1": {
    "name": "&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x1f6b66": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6c13": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6c3e": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6c90": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6cae": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6e3c": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6ed3": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6f6d": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>, ())",
    "poll_symbol": ""
  },
  "0x1f6fe6": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x1f7038": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x1f7699": {
    "name": "*mut (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f7bf6": {
    "name": "*mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x1f8571": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f858f": {
    "name": "*mut (dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x1f8604": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f87c6": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f87e4": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f8bf8": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f8ddd": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f8ee5": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x1f99cb": {
    "name": "*mut (dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x1fb558": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1fb558>",
    "poll_symbol": ""
  },
  "0x1fb8a4": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1fb8a4>",
    "poll_symbol": ""
  },
  "0x1fbced": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1fbced>",
    "poll_symbol": ""
  },
  "0x1fbd47": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1fbd47>",
    "poll_symbol": ""
  },
  "0x1fbd65": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1fbd65>",
    "poll_symbol": ""
  },
  "0x1fbd83": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1fbd83>",
    "poll_symbol": ""
  },
  "0x1fbeaf": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1fbeaf>",
    "poll_symbol": ""
  },
  "0x1fbecd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1fbecd>",
    "poll_symbol": ""
  },
  "0x1fcd53": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1fcd53>",
    "poll_symbol": ""
  },
  "0x1fcdad": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1fcdad>",
    "poll_symbol": ""
  },
  "0x1fcdbf": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1fcdbf>",
    "poll_symbol": ""
  },
  "0x1fcdd1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1fcdd1>",
    "poll_symbol": ""
  },
  "0x1fcf5d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1fcf5d>",
    "poll_symbol": ""
  },
  "0x1fcf6f": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1fcf6f>",
    "poll_symbol": ""
  },
  "0x1fcf81": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1fcf81>",
    "poll_symbol": ""
  },
  "0x1fcf93": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1fcf93>",
    "poll_symbol": ""
  },
  "0x1fd70b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1fd70b>",
    "poll_symbol": ""
  },
  "0x1fd729": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1fd729>",
    "poll_symbol": ""
  },
  "0x1fdb4a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1fdb4a>",
    "poll_symbol": ""
  },
  "0x1fdb68": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1fdb68>",
    "poll_symbol": ""
  },
  "0x1fdb86": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1fdb86>",
    "poll_symbol": ""
  },
  "0x1fed1b": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1fed1b>",
    "poll_symbol": ""
  },
  "0x1fedde": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1fedde>",
    "poll_symbol": ""
  },
  "0x1ff4c0": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1ff4c0>",
    "poll_symbol": ""
  },
  "0x1ff7c5": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x1ff7c5>",
    "poll_symbol": ""
  },
  "0x202233": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x202233>",
    "poll_symbol": ""
  },
  "0x20226f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x20226f>",
    "poll_symbol": ""
  },
  "0x20228d": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x20228d>",
    "poll_symbol": ""
  },
  "0x2022ab": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x202306": {
    "name": "Pin<&mut hyper_util::rt::io::write_all::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x202343": {
    "name": "Pin<&mut hyper_util::rt::io::read::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x202380": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::connect::proxy::tunnel::{impl#1}::call::{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2023db": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::proxy::tunnel::tunnel::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x202418": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x202418>",
    "poll_symbol": ""
  },
  "0x202436": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x202436>",
    "poll_symbol": ""
  },
  "0x202454": {
    "name": "Pin<alloc::boxed::Box<reqwest::async_impl::client::{impl#0}::call::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x202472": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x2024af": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x2024af>",
    "poll_symbol": ""
  },
  "0x2024eb": {
    "name": "Pin<&mut reqwest::async_impl::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x2025a2": {
    "name": "Pin<&reqwest::async_impl::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x2025fc": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x202639": {
    "name": "Pin<&mut tokio_native_tls::{impl#12}::connect::{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x202676": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x2026b3": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x2026f0": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x20272d": {
    "name": "Pin<alloc::boxed::Box<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x20274b": {
    "name": "Pin<alloc::boxed::Box<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x202769": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x202769>",
    "poll_symbol": ""
  },
  "0x204636": {
    "name": "<hyper_util::client::legacy::connect::proxy::tunnel::{impl#1}::call::{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x204696": {
    "name": "{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>><0x204696>",
    "poll_symbol": ""
  },
  "0x204be1": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x204be1>",
    "poll_symbol": ""
  },
  "0x2056be": {
    "name": "ResponseFuture<0x2056be>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x205b58": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x205b58>",
    "poll_symbol": ""
  },
  "0x205c69": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x205c69>",
    "poll_symbol": ""
  },
  "0x205e06": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x205e06>",
    "poll_symbol": ""
  },
  "0x207928": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x207928>",
    "poll_symbol": ""
  },
  "0x207953": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x207953>",
    "poll_symbol": ""
  },
  "0x2089a5": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2089a5>",
    "poll_symbol": ""
  },
  "0x2089e4": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2089e4>",
    "poll_symbol": ""
  },
  "0x208b04": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x208b04>",
    "poll_symbol": ""
  },
  "0x208b43": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x208b43>",
    "poll_symbol": ""
  },
  "0x208b82": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x208b82>",
    "poll_symbol": ""
  },
  "0x208bb8": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x208bb8>",
    "poll_symbol": ""
  },
  "0x208bee": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x208bee>",
    "poll_symbol": ""
  },
  "0x208c2d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x208c2d>",
    "poll_symbol": ""
  },
  "0x208fda": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x208fda>",
    "poll_symbol": ""
  },
  "0x209019": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x209019>",
    "poll_symbol": ""
  },
  "0x20904f": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x20904f>",
    "poll_symbol": ""
  },
  "0x20908e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x20908e>",
    "poll_symbol": ""
  },
  "0x20a4a9": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x20a4a9>",
    "poll_symbol": ""
  },
  "0x20a739": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x20a739>",
    "poll_symbol": ""
  },
  "0x20b056": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x20b056>",
    "poll_symbol": ""
  },
  "0x20b2a7": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x20b2a7>",
    "poll_symbol": ""
  },
  "0x20b5a0": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x20b5a0>",
    "poll_symbol": ""
  },
  "0x20b5c7": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x20b5c7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x20cd7c": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x20cd7c>",
    "poll_symbol": ""
  },
  "0x20ceb8": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x20ceb8>",
    "poll_symbol": ""
  },
  "0x20cfe6": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x20cfe6>",
    "poll_symbol": ""
  },
  "0x20d00d": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x20d00d>",
    "poll_symbol": ""
  },
  "0x20ec75": {
    "name": "<reqwest::async_impl::client::{impl#0}::call::{async_block_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x20ecc6": {
    "name": "{async_block_env#0}<0x20ecc6>",
    "poll_symbol": ""
  },
  "0x20fa92": {
    "name": "ResponseFuture<0x20fa92>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x210af2": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x210af2>",
    "poll_symbol": ""
  },
  "0x210c15": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x210c15>",
    "poll_symbol": ""
  },
  "0x2110b3": {
    "name": "{async_fn_env#0}<0x2110b3>",
    "poll_symbol": ""
  },
  "0x21143e": {
    "name": "{async_fn_env#0}<0x21143e>",
    "poll_symbol": ""
  },
  "0x213121": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x213121>",
    "poll_symbol": ""
  },
  "0x213148": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x213148>",
    "poll_symbol": ""
  },
  "0x21324b": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x21324b>",
    "poll_symbol": ""
  },
  "0x213252": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x213252>",
    "poll_symbol": ""
  },
  "0x213dc2": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x213dc2>",
    "poll_symbol": ""
  },
  "0x213dec": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x213dec>",
    "poll_symbol": ""
  },
  "0x21443e": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x21443e>",
    "poll_symbol": ""
  },
  "0x214476": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x214476>",
    "poll_symbol": ""
  },
  "0x21449d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x21449d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x214c13": {
    "name": "<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x214c5e": {
    "name": "<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x214ca3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x214ca3>",
    "poll_symbol": ""
  },
  "0x214cca": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x214cca>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x214fd4": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x214fd4>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x2168f5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x2168f5>",
    "poll_symbol": ""
  },
  "0x21697a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x21697a>",
    "poll_symbol": ""
  },
  "0x2169a1": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2169a1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2177e7": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2177e7>",
    "poll_symbol": ""
  },
  "0x21780e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x21780e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2191b3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2191b3>",
    "poll_symbol": ""
  },
  "0x2191da": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2191da>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x219b67": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x219b67>",
    "poll_symbol": ""
  },
  "0x21a8bf": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x21a8bf>",
    "poll_symbol": ""
  },
  "0x21a8e7": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x21a8e7>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x21b467": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x21b467>",
    "poll_symbol": ""
  },
  "0x21b51d": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x21b51d>",
    "poll_symbol": ""
  },
  "0x21bbfd": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x21bbfd>",
    "poll_symbol": ""
  },
  "0x21c1b9": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x21c1b9>",
    "poll_symbol": ""
  },
  "0x21c777": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x21c777>",
    "poll_symbol": ""
  },
  "0x21c7d8": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x21c7d8>",
    "poll_symbol": ""
  },
  "0x21ccd6": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x21ccd6>",
    "poll_symbol": ""
  },
  "0x21ce5c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x21ce5c>",
    "poll_symbol": ""
  },
  "0x21cebd": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x21cebd>",
    "poll_symbol": ""
  },
  "0x21e375": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x21e375>",
    "poll_symbol": ""
  },
  "0x21e3cf": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x21e3cf>",
    "poll_symbol": ""
  },
  "0x21e3ed": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x21e3ed>",
    "poll_symbol": ""
  },
  "0x21e40b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x21e40b>",
    "poll_symbol": ""
  },
  "0x21e483": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x21e483>",
    "poll_symbol": ""
  },
  "0x21e4a1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x21e4a1>",
    "poll_symbol": ""
  },
  "0x21e591": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x21e591>",
    "poll_symbol": ""
  },
  "0x2202b8": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2202b8>",
    "poll_symbol": ""
  },
  "0x220300": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x220300>",
    "poll_symbol": ""
  },
  "0x220312": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x220312>",
    "poll_symbol": ""
  },
  "0x220324": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x220324>",
    "poll_symbol": ""
  },
  "0x22048c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x22048c>",
    "poll_symbol": ""
  },
  "0x22049e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x22049e>",
    "poll_symbol": ""
  },
  "0x22056c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x22056c>",
    "poll_symbol": ""
  },
  "0x22057e": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x22057e>",
    "poll_symbol": ""
  },
  "0x220590": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x220590>",
    "poll_symbol": ""
  },
  "0x2209fe": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": ""
  },
  "0x220a10": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x220a22": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x220a34": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x220a46": {
    "name": "PhantomData<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x220a58": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x220a58>",
    "poll_symbol": ""
  },
  "0x220a6a": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": ""
  },
  "0x220a7c": {
    "name": "PhantomData<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x220a8e": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x220a8e>",
    "poll_symbol": ""
  },
  "0x220aa0": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x220ab2": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x220ac4": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x220d61": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x220d61>",
    "poll_symbol": ""
  },
  "0x220d7f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x220d7f>",
    "poll_symbol": ""
  },
  "0x220d9d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x220d9d>",
    "poll_symbol": ""
  },
  "0x220f24": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x220f24>",
    "poll_symbol": ""
  },
  "0x220f42": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x220f42>",
    "poll_symbol": ""
  },
  "0x220f60": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x220f60>",
    "poll_symbol": ""
  },
  "0x220fd9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x220fd9>",
    "poll_symbol": ""
  },
  "0x221509": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x221509>",
    "poll_symbol": ""
  },
  "0x221545": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x221545>",
    "poll_symbol": ""
  },
  "0x221563": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x221563>",
    "poll_symbol": ""
  },
  "0x22159f": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x2215fb": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221657": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x2216b3": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x22172d": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221789": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x2217e5": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x221841": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x22189d": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2218f9": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221955": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x2219b1": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221a0d": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x221a2b": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x221a49": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x221a49>",
    "poll_symbol": ""
  },
  "0x221a67": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x221a85": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x221aa3": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x221adf": {
    "name": "Pin<alloc::boxed::Box<hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x221b39": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x221b57": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x221b75": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221b93": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": ""
  },
  "0x221bb1": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x221bcf": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": ""
  },
  "0x221bed": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221c0b": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221c29": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221c47": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221c65": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x221c83": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221cde": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x221d1b": {
    "name": "Pin<&mut hyper::proto::h2::client::handshake::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>",
    "poll_symbol": ""
  },
  "0x221d58": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2221ec": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>>",
    "poll_symbol": ""
  },
  "0x222e70": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x222e70>",
    "poll_symbol": ""
  },
  "0x223812": {
    "name": "ManuallyDrop<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x22384e": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x22384e>",
    "poll_symbol": ""
  },
  "0x22386c": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x22386c>",
    "poll_symbol": ""
  },
  "0x22388a": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x22388a>",
    "poll_symbol": ""
  },
  "0x2238a9": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x2238a9>",
    "poll_symbol": ""
  },
  "0x2238c7": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2238c7>",
    "poll_symbol": ""
  },
  "0x2238e5": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x2238e5>",
    "poll_symbol": ""
  },
  "0x223904": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x223904>",
    "poll_symbol": ""
  },
  "0x223922": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x223922>",
    "poll_symbol": ""
  },
  "0x223940": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x223940>",
    "poll_symbol": ""
  },
  "0x22395f": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22395f>",
    "poll_symbol": ""
  },
  "0x22397e": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22397e>",
    "poll_symbol": ""
  },
  "0x22399c": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22399c>",
    "poll_symbol": ""
  },
  "0x224cbf": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x224cbf>",
    "poll_symbol": ""
  },
  "0x224f8f": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x224f8f>",
    "poll_symbol": ""
  },
  "0x224fce": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x224fce>",
    "poll_symbol": ""
  },
  "0x2250ee": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2250ee>",
    "poll_symbol": ""
  },
  "0x22512d": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x22512d>",
    "poll_symbol": ""
  },
  "0x22516c": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x22516c>",
    "poll_symbol": ""
  },
  "0x2251a2": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2251a2>",
    "poll_symbol": ""
  },
  "0x2251d8": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2251d8>",
    "poll_symbol": ""
  },
  "0x225217": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x225217>",
    "poll_symbol": ""
  },
  "0x2253ad": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2253ad>",
    "poll_symbol": ""
  },
  "0x2253ec": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2253ec>",
    "poll_symbol": ""
  },
  "0x225422": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x225422>",
    "poll_symbol": ""
  },
  "0x225461": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x225461>",
    "poll_symbol": ""
  },
  "0x2256e4": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2256e4>",
    "poll_symbol": ""
  },
  "0x225723": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x225723>",
    "poll_symbol": ""
  },
  "0x226444": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x226444>",
    "poll_symbol": ""
  },
  "0x22699c": {
    "name": "<hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2269e7": {
    "name": "<hyper_util::common::exec::Exec as hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x226a1f": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x226a1f>",
    "poll_symbol": ""
  },
  "0x226a26": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x226a26>",
    "poll_symbol": ""
  },
  "0x226a7a": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x226ac1": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x226ac1>",
    "poll_symbol": ""
  },
  "0x226ae8": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x226ae8>",
    "poll_symbol": ""
  },
  "0x226b14": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x226b14>",
    "poll_symbol": ""
  },
  "0x226c14": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x226c14>",
    "poll_symbol": ""
  },
  "0x226d14": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x226d14>",
    "poll_symbol": ""
  },
  "0x226e14": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x226e14>",
    "poll_symbol": ""
  },
  "0x226f14": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x226f14>",
    "poll_symbol": ""
  },
  "0x227018": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x227018>",
    "poll_symbol": ""
  },
  "0x22711c": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22711c>",
    "poll_symbol": ""
  },
  "0x22721f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22721f>",
    "poll_symbol": ""
  },
  "0x227323": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x227323>",
    "poll_symbol": ""
  },
  "0x227427": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x227427>",
    "poll_symbol": ""
  },
  "0x227f1d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x227f1d>",
    "poll_symbol": ""
  },
  "0x22801d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x22801d>",
    "poll_symbol": ""
  },
  "0x22811d": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x22819d": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x22821d": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x22829d": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x22831d": {
    "name": "MapProjReplace<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x22839d": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22839d>",
    "poll_symbol": ""
  },
  "0x22841d": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x22849d": {
    "name": "MapProjReplace<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x22851d": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22851d>",
    "poll_symbol": ""
  },
  "0x2285a0": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x228620": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2286a0": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x228720": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x22879f": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x22881e": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x22889d": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x22891c": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x22899b": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x228a1a": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x228a99": {
    "name": "MapProj<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x228b18": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x228b97": {
    "name": "MapProj<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x228c16": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x228c95": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x228d15": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x228d15>",
    "poll_symbol": ""
  },
  "0x228d3c": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x228d3c>",
    "poll_symbol": ""
  },
  "0x228d63": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x228d63>",
    "poll_symbol": ""
  },
  "0x228d8b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x228d8b>",
    "poll_symbol": ""
  },
  "0x228db3": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x228db3>",
    "poll_symbol": ""
  },
  "0x228ddb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x228ddb>",
    "poll_symbol": ""
  },
  "0x228e02": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x228e02>",
    "poll_symbol": ""
  },
  "0x228e2a": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x228e2a>",
    "poll_symbol": ""
  },
  "0x228e84": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x228e84>",
    "poll_symbol": ""
  },
  "0x228ea2": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x228ea2>",
    "poll_symbol": ""
  },
  "0x228ec1": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x228ec1>",
    "poll_symbol": ""
  },
  "0x228edf": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x228edf>",
    "poll_symbol": ""
  },
  "0x228efd": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x228efd>",
    "poll_symbol": ""
  },
  "0x228f1c": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x228f1c>",
    "poll_symbol": ""
  },
  "0x228f3a": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x228f3a>",
    "poll_symbol": ""
  },
  "0x228f81": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x228f81>",
    "poll_symbol": ""
  },
  "0x228fa9": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x228fa9>",
    "poll_symbol": ""
  },
  "0x229001": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x229001>",
    "poll_symbol": ""
  },
  "0x229029": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x229029>",
    "poll_symbol": ""
  },
  "0x229056": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x229056>",
    "poll_symbol": ""
  },
  "0x229169": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x229169>",
    "poll_symbol": ""
  },
  "0x2291eb": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2291eb>",
    "poll_symbol": ""
  },
  "0x22943c": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x22943c>",
    "poll_symbol": ""
  },
  "0x2296d6": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2296d6>",
    "poll_symbol": ""
  },
  "0x2299c9": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2299c9>",
    "poll_symbol": ""
  },
  "0x229c12": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x229c12>",
    "poll_symbol": ""
  },
  "0x22a04e": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x22a04e>",
    "poll_symbol": ""
  },
  "0x22a3aa": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x22a3aa>",
    "poll_symbol": ""
  },
  "0x22a563": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x22a563>",
    "poll_symbol": ""
  },
  "0x22aad9": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x22aad9>",
    "poll_symbol": ""
  },
  "0x22acb7": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn><0x22acb7>",
    "poll_symbol": ""
  },
  "0x22c552": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x22c552>",
    "poll_symbol": ""
  },
  "0x22ce02": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x22ce02>",
    "poll_symbol": ""
  },
  "0x22fe2f": {
    "name": "ResponseFuture<0x22fe2f>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x22fecf": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x22fecf>",
    "poll_symbol": ""
  },
  "0x22ffdf": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x22ffdf>",
    "poll_symbol": ""
  },
  "0x231d49": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x231d49>",
    "poll_symbol": ""
  },
  "0x231d73": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x231d73>",
    "poll_symbol": ""
  },
  "0x232d58": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x232d58>",
    "poll_symbol": ""
  },
  "0x232f6a": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x232f6a>",
    "poll_symbol": ""
  },
  "0x235b7c": {
    "name": "<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x235c28": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x235c28>",
    "poll_symbol": ""
  },
  "0x235c94": {
    "name": "<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x235ccc": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x235ccc>",
    "poll_symbol": ""
  },
  "0x235cf3": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x235cf3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x235d0d": {
    "name": "<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x235d58": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x235ec8": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x23614a": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x23614a>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x236177": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x236177>",
    "poll_symbol": ""
  },
  "0x23619e": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x23619e>",
    "poll_symbol": ""
  },
  "0x2361a5": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2361a5>",
    "poll_symbol": ""
  },
  "0x2361cc": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2361cc>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x236227": {
    "name": "<hyper_util::client::legacy::pool::IdleTask<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2362a0": {
    "name": "<hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x23eb7c": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x23eb7c>",
    "poll_symbol": ""
  },
  "0x23eba6": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x23eba6>",
    "poll_symbol": ""
  },
  "0x23ebd0": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x23ebd0>",
    "poll_symbol": ""
  },
  "0x23ebfc": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x23ebfc>",
    "poll_symbol": ""
  },
  "0x23ec26": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23ec26>",
    "poll_symbol": ""
  },
  "0x23ec50": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x23ec50>",
    "poll_symbol": ""
  },
  "0x23ec7c": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x23ec7c>",
    "poll_symbol": ""
  },
  "0x23eca6": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23eca6>",
    "poll_symbol": ""
  },
  "0x23ecd0": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x23ecd0>",
    "poll_symbol": ""
  },
  "0x23ecfc": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23ecfc>",
    "poll_symbol": ""
  },
  "0x23ed28": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23ed28>",
    "poll_symbol": ""
  },
  "0x23ed52": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23ed52>",
    "poll_symbol": ""
  },
  "0x24069b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24069b>",
    "poll_symbol": ""
  },
  "0x2406b9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2406b9>",
    "poll_symbol": ""
  },
  "0x240bff": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x240bff>",
    "poll_symbol": ""
  },
  "0x240c1d": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x240c1d>",
    "poll_symbol": ""
  },
  "0x240c3b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x240c3b>",
    "poll_symbol": ""
  },
  "0x240e9a": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x240e9a>",
    "poll_symbol": ""
  },
  "0x240ed6": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x240ed6>",
    "poll_symbol": ""
  },
  "0x241579": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x241579>",
    "poll_symbol": ""
  },
  "0x241597": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x241597>",
    "poll_symbol": ""
  },
  "0x2415b5": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2415b5>",
    "poll_symbol": ""
  },
  "0x241759": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x241759>",
    "poll_symbol": ""
  },
  "0x241777": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x241777>",
    "poll_symbol": ""
  },
  "0x241795": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x241795>",
    "poll_symbol": ""
  },
  "0x2417d1": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2417d1>",
    "poll_symbol": ""
  },
  "0x2417ef": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2417ef>",
    "poll_symbol": ""
  },
  "0x24180d": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x24180d>",
    "poll_symbol": ""
  },
  "0x24182b": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x24182b>",
    "poll_symbol": ""
  },
  "0x24212a": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x24212a>",
    "poll_symbol": ""
  },
  "0x24213c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x24213c>",
    "poll_symbol": ""
  },
  "0x242172": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x242172>",
    "poll_symbol": ""
  },
  "0x242454": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x242454>",
    "poll_symbol": ""
  },
  "0x242466": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x242466>",
    "poll_symbol": ""
  },
  "0x242478": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x242478>",
    "poll_symbol": ""
  },
  "0x24248a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x24248a>",
    "poll_symbol": ""
  },
  "0x24249c": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x24249c>",
    "poll_symbol": ""
  },
  "0x24284e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x24284e>",
    "poll_symbol": ""
  },
  "0x24286c": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x24286c>",
    "poll_symbol": ""
  },
  "0x243610": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x243610>",
    "poll_symbol": ""
  },
  "0x2436d3": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2436d3>",
    "poll_symbol": ""
  },
  "0x2447d1": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2447d1>",
    "poll_symbol": ""
  },
  "0x246d24": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246dba": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246df6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246e14": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246e32": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246e6e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246eaa": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246f5e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246f7c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246fb8": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x246ff4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x247012": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x24706c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2470a8": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2470c6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2470e4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x247198": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2471f2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x247210": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x24724c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x24726a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x247288": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2472c4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2472e2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x249113": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x249131": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24914f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24916d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24918b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2491a9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2491c7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x249203": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x249221": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24923f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24925d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24927b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2492b7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2492d5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2492f3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x249311": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24936b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2493a7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2493c5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2493e3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x249401": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24941f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24945b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x249479": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24a427": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24a427>",
    "poll_symbol": ""
  },
  "0x24ae31": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x24ae31>",
    "poll_symbol": ""
  },
  "0x24ae70": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x24ae70>",
    "poll_symbol": ""
  },
  "0x24aeaf": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x24aeaf>",
    "poll_symbol": ""
  },
  "0x24aee5": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24aee5>",
    "poll_symbol": ""
  },
  "0x24af1b": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x24af1b>",
    "poll_symbol": ""
  },
  "0x24af5a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x24af5a>",
    "poll_symbol": ""
  },
  "0x24b427": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24b427>",
    "poll_symbol": ""
  },
  "0x24b466": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x24b466>",
    "poll_symbol": ""
  },
  "0x24b49c": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x24b49c>",
    "poll_symbol": ""
  },
  "0x24b4db": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x24b4db>",
    "poll_symbol": ""
  },
  "0x24b511": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x24b511>",
    "poll_symbol": ""
  },
  "0x24b550": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x24b550>",
    "poll_symbol": ""
  },
  "0x24b90c": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24b90c>",
    "poll_symbol": ""
  },
  "0x24db88": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24db88>",
    "poll_symbol": ""
  },
  "0x24dbc7": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x24dbc7>",
    "poll_symbol": ""
  },
  "0x24dbe5": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x24dbe5>",
    "poll_symbol": ""
  },
  "0x24dc73": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24dc73>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x24dce0": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24dce0>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x24dd20": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24dd20>",
    "poll_symbol": ""
  },
  "0x24dd5f": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x24dd5f>",
    "poll_symbol": ""
  },
  "0x24dd7d": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x24dd7d>",
    "poll_symbol": ""
  },
  "0x24de0b": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24de0b>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x24de4b": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24de4b>",
    "poll_symbol": ""
  },
  "0x24de8a": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24de8a>",
    "poll_symbol": ""
  },
  "0x24dec9": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24dec9>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x24e067": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e067>",
    "poll_symbol": ""
  },
  "0x24e085": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e085>",
    "poll_symbol": ""
  },
  "0x24e0a3": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e0a3>",
    "poll_symbol": ""
  },
  "0x24e0c1": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e0c1>",
    "poll_symbol": ""
  },
  "0x24e0df": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e0df>",
    "poll_symbol": ""
  },
  "0x24e0fd": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e0fd>",
    "poll_symbol": ""
  },
  "0x24e11b": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e11b>",
    "poll_symbol": ""
  },
  "0x24e139": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e139>",
    "poll_symbol": ""
  },
  "0x24e162": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e162>",
    "poll_symbol": ""
  },
  "0x24e180": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e180>",
    "poll_symbol": ""
  },
  "0x24e19e": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e19e>",
    "poll_symbol": ""
  },
  "0x24e1bc": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e1bc>",
    "poll_symbol": ""
  },
  "0x24e1da": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e1da>",
    "poll_symbol": ""
  },
  "0x24e1f8": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e1f8>",
    "poll_symbol": ""
  },
  "0x24e216": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e216>",
    "poll_symbol": ""
  },
  "0x24e234": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e234>",
    "poll_symbol": ""
  },
  "0x24e258": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e258>",
    "poll_symbol": ""
  },
  "0x24e26b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e26b>",
    "poll_symbol": ""
  },
  "0x24e27e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e27e>",
    "poll_symbol": ""
  },
  "0x24e291": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e291>",
    "poll_symbol": ""
  },
  "0x24e2a6": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e2a6>",
    "poll_symbol": ""
  },
  "0x24e2cd": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e2cd>",
    "poll_symbol": ""
  },
  "0x24e2f4": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e2f4>",
    "poll_symbol": ""
  },
  "0x24e31b": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e31b>",
    "poll_symbol": ""
  },
  "0x24e347": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e347>",
    "poll_symbol": ""
  },
  "0x24e35a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e35a>",
    "poll_symbol": ""
  },
  "0x24e36d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x24e36d>",
    "poll_symbol": ""
  },
  "0x24e380": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x24e380>",
    "poll_symbol": ""
  },
  "0x24f145": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x24f145>",
    "poll_symbol": ""
  },
  "0x24f163": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x24f163>",
    "poll_symbol": ""
  },
  "0x24fb1a": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x24fb2d": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x24fb40": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x24fe9a": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x24fe9a>",
    "poll_symbol": ""
  },
  "0x250937": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x250937>",
    "poll_symbol": ""
  },
  "0x253705": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x253705>",
    "poll_symbol": ""
  },
  "0x253944": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x253944>",
    "poll_symbol": ""
  },
  "0x253fb5": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x253fb5>",
    "poll_symbol": ""
  },
  "0x253fdf": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x253fdf>",
    "poll_symbol": ""
  },
  "0x25a1e3": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x25a1e3>",
    "poll_symbol": ""
  },
  "0x25a20a": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x25a20a>",
    "poll_symbol": ""
  },
  "0x25ff81": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x25ff81>",
    "poll_symbol": ""
  },
  "0x25ffac": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x25ffac>",
    "poll_symbol": ""
  },
  "0x25ffb3": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x25ffb3>",
    "poll_symbol": ""
  },
  "0x2604d1": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2604d1>",
    "poll_symbol": ""
  },
  "0x2604f8": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2604f8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2658aa": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2658aa>",
    "poll_symbol": ""
  },
  "0x26596d": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x26596d>",
    "poll_symbol": ""
  },
  "0x268582": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x268582>",
    "poll_symbol": ""
  },
  "0x26adb9": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x26adb9>",
    "poll_symbol": ""
  },
  "0x26ae97": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x26ae97>",
    "poll_symbol": ""
  },
  "0x26b0ea": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x26b0ea>",
    "poll_symbol": ""
  },
  "0x26b53a": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x26b53a>",
    "poll_symbol": ""
  },
  "0x26b5f8": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x26b5f8>",
    "poll_symbol": ""
  },
  "0x26b6a1": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x26b6a1>",
    "poll_symbol": ""
  },
  "0x26b88c": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x26b88c>",
    "poll_symbol": ""
  },
  "0x26b8ed": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x26b8ed>",
    "poll_symbol": ""
  },
  "0x26b94e": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x26b94e>",
    "poll_symbol": ""
  },
  "0x26bbc6": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x26bbc6>",
    "poll_symbol": ""
  },
  "0x26bd04": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x26bd04>",
    "poll_symbol": ""
  },
  "0x26bf0e": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x26bf0e>",
    "poll_symbol": ""
  },
  "0x26c08e": {
    "name": "Option<&mut alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x26c0ef": {
    "name": "Option<&mut (hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)>",
    "poll_symbol": ""
  },
  "0x26c33c": {
    "name": "Option<&mut (core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)>",
    "poll_symbol": ""
  },
  "0x26c3c6": {
    "name": "Option<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x26c450": {
    "name": "Option<&mut (core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x26caf2": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x26e86f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x26e86f>",
    "poll_symbol": ""
  },
  "0x26e8b7": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x26e8b7>",
    "poll_symbol": ""
  },
  "0x26e93b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x26e93b>",
    "poll_symbol": ""
  },
  "0x26e9ba": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x26e9ba>",
    "poll_symbol": ""
  },
  "0x26ea14": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x26ea14>",
    "poll_symbol": ""
  },
  "0x26ea32": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x26ea32>",
    "poll_symbol": ""
  },
  "0x26f057": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x26f057>",
    "poll_symbol": ""
  },
  "0x26f0b1": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x26f0b1>",
    "poll_symbol": ""
  },
  "0x26f0ed": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x26f0ed>",
    "poll_symbol": ""
  },
  "0x26f182": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x26f182>",
    "poll_symbol": ""
  },
  "0x26f1a0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x26f1a0>",
    "poll_symbol": ""
  },
  "0x26f1be": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x26f1be>",
    "poll_symbol": ""
  },
  "0x26f57e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x26f57e>",
    "poll_symbol": ""
  },
  "0x26f632": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x26f632>",
    "poll_symbol": ""
  },
  "0x26f66e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x26f66e>",
    "poll_symbol": ""
  },
  "0x26f75e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x26f75e>",
    "poll_symbol": ""
  },
  "0x26f922": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x26f922>",
    "poll_symbol": ""
  },
  "0x26f940": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x26f940>",
    "poll_symbol": ""
  },
  "0x26f95e": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x26f95e>",
    "poll_symbol": ""
  },
  "0x26f97c": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x26f97c>",
    "poll_symbol": ""
  },
  "0x2706e2": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2706e2>",
    "poll_symbol": ""
  },
  "0x2706f4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2706f4>",
    "poll_symbol": ""
  },
  "0x270706": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x270706>",
    "poll_symbol": ""
  },
  "0x270bb2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x270bb2>",
    "poll_symbol": ""
  },
  "0x270c54": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x270c54>",
    "poll_symbol": ""
  },
  "0x270cae": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x270cae>",
    "poll_symbol": ""
  },
  "0x270cc0": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x270cc0>",
    "poll_symbol": ""
  },
  "0x270cd2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x270cd2>",
    "poll_symbol": ""
  },
  "0x270dbc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x270dbc>",
    "poll_symbol": ""
  },
  "0x27184d": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x27184d>",
    "poll_symbol": ""
  },
  "0x27186b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x27186b>",
    "poll_symbol": ""
  },
  "0x2718e6": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x2718e6>",
    "poll_symbol": ""
  },
  "0x271904": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x271904>",
    "poll_symbol": ""
  },
  "0x271922": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x271922>",
    "poll_symbol": ""
  },
  "0x271940": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>><0x271940>",
    "poll_symbol": ""
  },
  "0x27195e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x27195e>",
    "poll_symbol": ""
  },
  "0x2719b8": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2719d6": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x271b68": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>><0x271b68>",
    "poll_symbol": ""
  },
  "0x271bc9": {
    "name": "Poll<core::result::Result<core::convert::Infallible, futures_channel::oneshot::Canceled>>",
    "poll_symbol": ""
  },
  "0x2721dc": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled><0x2721dc>",
    "poll_symbol": ""
  },
  "0x27225b": {
    "name": "Result<core::convert::Infallible, futures_channel::oneshot::Canceled>",
    "poll_symbol": ""
  },
  "0x2738f0": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2738f0>",
    "poll_symbol": ""
  },
  "0x2764c4": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x2764c4>",
    "poll_symbol": ""
  },
  "0x276b15": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x276b15>",
    "poll_symbol": ""
  },
  "0x276cae": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x276cae>",
    "poll_symbol": ""
  },
  "0x276ddd": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x276ddd>",
    "poll_symbol": ""
  },
  "0x276f6e": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x276f6e>",
    "poll_symbol": ""
  },
  "0x277ce4": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x277ce4>",
    "poll_symbol": ""
  },
  "0x277eac": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x277eac>",
    "poll_symbol": ""
  },
  "0x277eeb": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x277eeb>",
    "poll_symbol": ""
  },
  "0x277f2a": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x277f2a>",
    "poll_symbol": ""
  },
  "0x277f60": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x277f60>",
    "poll_symbol": ""
  },
  "0x277f96": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x277f96>",
    "poll_symbol": ""
  },
  "0x277fd5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x277fd5>",
    "poll_symbol": ""
  },
  "0x278bb8": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x278bb8>",
    "poll_symbol": ""
  },
  "0x278bf7": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x278bf7>",
    "poll_symbol": ""
  },
  "0x278e40": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x278e40>",
    "poll_symbol": ""
  },
  "0x278e7f": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x278e7f>",
    "poll_symbol": ""
  },
  "0x278f69": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x278f69>",
    "poll_symbol": ""
  },
  "0x278fa8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x278fa8>",
    "poll_symbol": ""
  },
  "0x2792c7": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2792c7>",
    "poll_symbol": ""
  },
  "0x279306": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x279306>",
    "poll_symbol": ""
  },
  "0x2795d0": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2795d0>",
    "poll_symbol": ""
  },
  "0x27ae58": {
    "name": "ResponseFuture<0x27ae58>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x27aef8": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x27aef8>",
    "poll_symbol": ""
  },
  "0x27b008": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x27b008>",
    "poll_symbol": ""
  },
  "0x27b42d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x27b42d>",
    "poll_symbol": ""
  },
  "0x27b49c": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x27b49c>",
    "poll_symbol": ""
  },
  "0x27bef9": {
    "name": "{async_fn_env#0}<0x27bef9>",
    "poll_symbol": ""
  },
  "0x27c090": {
    "name": "{async_block_env#0}<0x27c090>",
    "poll_symbol": ""
  },
  "0x27c759": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27c759>",
    "poll_symbol": ""
  },
  "0x27ce95": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x27ce95>",
    "poll_symbol": ""
  },
  "0x27cebd": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x27cebd>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x27d156": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x27d156>",
    "poll_symbol": ""
  },
  "0x27e734": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x27e734>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x27e774": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x27e774>",
    "poll_symbol": ""
  },
  "0x27e7b3": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x27e7b3>",
    "poll_symbol": ""
  },
  "0x27e7d1": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x27e7d1>",
    "poll_symbol": ""
  },
  "0x27e88c": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x27e88c>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x27e8cc": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x27e8cc>",
    "poll_symbol": ""
  },
  "0x27e90b": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x27e90b>",
    "poll_symbol": ""
  },
  "0x27e929": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x27e929>",
    "poll_symbol": ""
  },
  "0x27e9b7": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x27e9b7>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x27e9f7": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x27e9f7>",
    "poll_symbol": ""
  },
  "0x27ea36": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x27ea36>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x27ea76": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x27ea76>",
    "poll_symbol": ""
  },
  "0x27ecb9": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x27ecb9>",
    "poll_symbol": ""
  },
  "0x27ece0": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x27ece0>",
    "poll_symbol": ""
  },
  "0x27ed07": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x27ed07>",
    "poll_symbol": ""
  },
  "0x27ed2e": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x27ed2e>",
    "poll_symbol": ""
  },
  "0x27fa52": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x27fa52>",
    "poll_symbol": ""
  },
  "0x27fa70": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x27fa70>",
    "poll_symbol": ""
  },
  "0x28025d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x28025d>",
    "poll_symbol": ""
  },
  "0x28027b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x28027b>",
    "poll_symbol": ""
  },
  "0x2802ca": {
    "name": "{async_fn_env#0}<0x2802ca>",
    "poll_symbol": ""
  },
  "0x2803b0": {
    "name": "{async_fn_env#0}<0x2803b0>",
    "poll_symbol": ""
  },
  "0x281971": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x281971>",
    "poll_symbol": ""
  },
  "0x281b7d": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x281b7d>",
    "poll_symbol": ""
  },
  "0x281d99": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x281d99>",
    "poll_symbol": ""
  },
  "0x281dc3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x281dc3>",
    "poll_symbol": ""
  },
  "0x284dbe": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x284dbe>",
    "poll_symbol": ""
  },
  "0x284de5": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x284de5>",
    "poll_symbol": ""
  },
  "0x284dec": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x284dec>",
    "poll_symbol": ""
  },
  "0x284df3": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x284df3>",
    "poll_symbol": ""
  },
  "0x284f05": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x284f05>",
    "poll_symbol": ""
  },
  "0x28527d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x28527d>",
    "poll_symbol": ""
  },
  "0x2852a4": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2852a4>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x286d20": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x286d20>",
    "poll_symbol": ""
  },
  "0x286db6": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x286db6>",
    "poll_symbol": ""
  },
  "0x287c9e": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x287c9e>",
    "poll_symbol": ""
  },
  "0x287dbe": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x287dbe>",
    "poll_symbol": ""
  },
  "0x287dec": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x287dec>",
    "poll_symbol": ""
  },
  "0x287e6e": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x287e6e>",
    "poll_symbol": ""
  },
  "0x287eed": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x287eed>",
    "poll_symbol": ""
  },
  "0x287f75": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x287f75>",
    "poll_symbol": ""
  },
  "0x287fd2": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x287fd2>",
    "poll_symbol": ""
  },
  "0x287ff0": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x287ff0>",
    "poll_symbol": ""
  },
  "0x28800f": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x28800f>",
    "poll_symbol": ""
  },
  "0x288037": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x288037>",
    "poll_symbol": ""
  },
  "0x288064": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x288064>",
    "poll_symbol": ""
  },
  "0x288117": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x288117>",
    "poll_symbol": ""
  },
  "0x288143": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x288143>",
    "poll_symbol": ""
  },
  "0x2881c5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2881c5>",
    "poll_symbol": ""
  },
  "0x288249": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x288249>",
    "poll_symbol": ""
  },
  "0x28831d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x28831d>",
    "poll_symbol": ""
  },
  "0x288344": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x288344>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x288677": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x288677>",
    "poll_symbol": ""
  },
  "0x28b1b1": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x28b1b1>",
    "poll_symbol": ""
  },
  "0x28b1d8": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x28b1d8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x28cfe5": {
    "name": "(futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x28d003": {
    "name": "(futures_channel::oneshot::Sender<core::convert::Infallible>, futures_channel::oneshot::Receiver<core::convert::Infallible>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x28e796": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x28e796>",
    "poll_symbol": ""
  },
  "0x28e7f7": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x28e7f7>",
    "poll_symbol": ""
  },
  "0x28e97c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x28e97c>",
    "poll_symbol": ""
  },
  "0x28ea3f": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x28ea3f>",
    "poll_symbol": ""
  },
  "0x28f121": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x28f121>",
    "poll_symbol": ""
  },
  "0x28f5af": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x28f5af>",
    "poll_symbol": ""
  },
  "0x28fc2f": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x28fc2f>",
    "poll_symbol": ""
  },
  "0x28fc90": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x28fc90>",
    "poll_symbol": ""
  },
  "0x28fd53": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x28fd53>",
    "poll_symbol": ""
  },
  "0x2901e0": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2901e0>",
    "poll_symbol": ""
  },
  "0x290514": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x290514>",
    "poll_symbol": ""
  },
  "0x29070e": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x29070e>",
    "poll_symbol": ""
  },
  "0x290859": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x290859>",
    "poll_symbol": ""
  },
  "0x290f20": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x290f20>",
    "poll_symbol": ""
  },
  "0x290f3e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x290f3e>",
    "poll_symbol": ""
  },
  "0x290f5c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x290f5c>",
    "poll_symbol": ""
  },
  "0x2910c6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2910c6>",
    "poll_symbol": ""
  },
  "0x2910e4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2910e4>",
    "poll_symbol": ""
  },
  "0x291102": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x291102>",
    "poll_symbol": ""
  },
  "0x2911d4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2911d4>",
    "poll_symbol": ""
  },
  "0x291f6c": {
    "name": "Result<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>, std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": ""
  },
  "0x292c45": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x292c45>",
    "poll_symbol": ""
  },
  "0x292c57": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x292c57>",
    "poll_symbol": ""
  },
  "0x292c69": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x292c69>",
    "poll_symbol": ""
  },
  "0x292df5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x292df5>",
    "poll_symbol": ""
  },
  "0x292e07": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x292e07>",
    "poll_symbol": ""
  },
  "0x292e19": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x292e19>",
    "poll_symbol": ""
  },
  "0x292e2b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x292e2b>",
    "poll_symbol": ""
  },
  "0x292e3d": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x292e3d>",
    "poll_symbol": ""
  },
  "0x292f6f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x292f6f>",
    "poll_symbol": ""
  },
  "0x29311b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x29311b>",
    "poll_symbol": ""
  },
  "0x293139": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x293139>",
    "poll_symbol": ""
  },
  "0x2931bd": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2931bd>",
    "poll_symbol": ""
  },
  "0x2935de": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2935de>",
    "poll_symbol": ""
  },
  "0x2935fc": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2935fc>",
    "poll_symbol": ""
  },
  "0x29361a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x29361a>",
    "poll_symbol": ""
  },
  "0x29383b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x29383b>",
    "poll_symbol": ""
  },
  "0x293895": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x293895>",
    "poll_symbol": ""
  },
  "0x2938d2": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2938d2>",
    "poll_symbol": ""
  },
  "0x293fe1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x293fe1>",
    "poll_symbol": ""
  },
  "0x29401d": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x29401d>",
    "poll_symbol": ""
  },
  "0x294112": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x294112>",
    "poll_symbol": ""
  },
  "0x294130": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>><0x294130>",
    "poll_symbol": ""
  },
  "0x2941a9": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2941a9>",
    "poll_symbol": ""
  },
  "0x2941e6": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>>",
    "poll_symbol": ""
  },
  "0x294223": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::connect::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x294260": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x294260>",
    "poll_symbol": ""
  },
  "0x29427e": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2942ba": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::resolve::{async_fn_env#0}<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": ""
  },
  "0x2942f7": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#18}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x294334": {
    "name": "Pin<&mut tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x294371": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x2943ae": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2943cc": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2943ea": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x2943ea>",
    "poll_symbol": ""
  },
  "0x294408": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>><0x294408>",
    "poll_symbol": ""
  },
  "0x294462": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x294462>",
    "poll_symbol": ""
  },
  "0x294480": {
    "name": "Pin<&mut tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x29449e": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>><0x29449e>",
    "poll_symbol": ""
  },
  "0x2944da": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>><0x2944da>",
    "poll_symbol": ""
  },
  "0x2944f8": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x2944f8>",
    "poll_symbol": ""
  },
  "0x294516": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x294516>",
    "poll_symbol": ""
  },
  "0x294534": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x294534>",
    "poll_symbol": ""
  },
  "0x294552": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x294552>",
    "poll_symbol": ""
  },
  "0x294570": {
    "name": "Pin<&mut futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x29458e": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x2945ac": {
    "name": "Pin<&mut futures_util::future::try_future::try_flatten::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x294609": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::connect::http::{impl#4}::call::{async_block_env#0}<reqwest::dns::resolve::DynResolver>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x294627": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#5}::call_async::{async_fn_env#0}<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": ""
  },
  "0x294664": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x294664>",
    "poll_symbol": ""
  },
  "0x294682": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x294682>",
    "poll_symbol": ""
  },
  "0x2946a0": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2946a0>",
    "poll_symbol": ""
  },
  "0x2946be": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x2946be>",
    "poll_symbol": ""
  },
  "0x2946dc": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x2946dc>",
    "poll_symbol": ""
  },
  "0x2946fa": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>><0x2946fa>",
    "poll_symbol": ""
  },
  "0x294718": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x294718>",
    "poll_symbol": ""
  },
  "0x294736": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>><0x294736>",
    "poll_symbol": ""
  },
  "0x294772": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x294d60": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x294d60>",
    "poll_symbol": ""
  },
  "0x297567": {
    "name": "<hyper_util::client::legacy::connect::http::{impl#4}::call::{async_block_env#0}<reqwest::dns::resolve::DynResolver> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2975c2": {
    "name": "{async_block_env#0}<reqwest::dns::resolve::DynResolver><0x2975c2>",
    "poll_symbol": ""
  },
  "0x297a5b": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x297a5b>",
    "poll_symbol": ""
  },
  "0x298154": {
    "name": "{async_fn_env#0}<0x298154>",
    "poll_symbol": ""
  },
  "0x29876b": {
    "name": "{async_fn_env#0}<0x29876b>",
    "poll_symbol": ""
  },
  "0x2990f5": {
    "name": "{async_block_env#0}<0x2990f5>",
    "poll_symbol": ""
  },
  "0x2994ba": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x2994ba>",
    "poll_symbol": ""
  },
  "0x29bc71": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x29bc71>",
    "poll_symbol": ""
  },
  "0x29c48f": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x29c48f>",
    "poll_symbol": ""
  },
  "0x29c4b7": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x29c4b7>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x29cb86": {
    "name": "{async_fn_env#0}<0x29cb86>",
    "poll_symbol": ""
  },
  "0x29ced4": {
    "name": "{async_fn_env#0}<0x29ced4>",
    "poll_symbol": ""
  },
  "0x29db87": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x29db87>",
    "poll_symbol": ""
  },
  "0x29dbc6": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x29dbc6>",
    "poll_symbol": ""
  },
  "0x29dc05": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x29dc05>",
    "poll_symbol": ""
  },
  "0x29dc3b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x29dc3b>",
    "poll_symbol": ""
  },
  "0x29dc71": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x29dc71>",
    "poll_symbol": ""
  },
  "0x29dcb0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x29dcb0>",
    "poll_symbol": ""
  },
  "0x29e01e": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x29e01e>",
    "poll_symbol": ""
  },
  "0x29e05d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x29e05d>",
    "poll_symbol": ""
  },
  "0x29e093": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x29e093>",
    "poll_symbol": ""
  },
  "0x29e0d2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x29e0d2>",
    "poll_symbol": ""
  },
  "0x29e108": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x29e108>",
    "poll_symbol": ""
  },
  "0x29e147": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x29e147>",
    "poll_symbol": ""
  },
  "0x29e46e": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x29e46e>",
    "poll_symbol": ""
  },
  "0x29e4ad": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x29e4ad>",
    "poll_symbol": ""
  },
  "0x29f01a": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x29f01a>",
    "poll_symbol": ""
  },
  "0x29f22f": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x29f22f>",
    "poll_symbol": ""
  },
  "0x2a1350": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2a1350>",
    "poll_symbol": ""
  },
  "0x2a1377": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2a1377>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2a1473": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x2a1473>",
    "poll_symbol": ""
  },
  "0x2a14df": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x2a14df>",
    "poll_symbol": ""
  },
  "0x2a154c": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x2a154c>",
    "poll_symbol": ""
  },
  "0x2a15be": {
    "name": "Projection<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x2a15e8": {
    "name": "Projection<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x2a1612": {
    "name": "Projection<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x2a181e": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x2a181e>",
    "poll_symbol": ""
  },
  "0x2a183c": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x2a183c>",
    "poll_symbol": ""
  },
  "0x2a185a": {
    "name": "{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x2a185a>",
    "poll_symbol": ""
  },
  "0x2a250f": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2a250f>",
    "poll_symbol": ""
  },
  "0x2a259d": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2a259d>",
    "poll_symbol": ""
  },
  "0x2a33b8": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2a33b8>",
    "poll_symbol": ""
  },
  "0x2a33f4": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2a33f4>",
    "poll_symbol": ""
  },
  "0x2a468c": {
    "name": "{async_fn_env#0}<0x2a468c>",
    "poll_symbol": ""
  },
  "0x2a47a9": {
    "name": "{async_fn_env#0}<0x2a47a9>",
    "poll_symbol": ""
  },
  "0x2a4d9b": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2a4d9b>",
    "poll_symbol": ""
  },
  "0x2a4eaa": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0x2a4f6e": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>",
    "poll_symbol": ""
  },
  "0x2a533e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2a533e>",
    "poll_symbol": ""
  },
  "0x2a5e28": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2a5e28>",
    "poll_symbol": ""
  },
  "0x2a6034": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2a6034>",
    "poll_symbol": ""
  },
  "0x2a6302": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x2a6302>",
    "poll_symbol": ""
  },
  "0x2a6329": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x2a6329>",
    "poll_symbol": ""
  },
  "0x2a6356": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2a6356>",
    "poll_symbol": ""
  },
  "0x2a63d5": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x2a63d5>",
    "poll_symbol": ""
  },
  "0x2a6455": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2a6455>",
    "poll_symbol": ""
  },
  "0x2a64d7": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2a64d7>",
    "poll_symbol": ""
  },
  "0x2a673c": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2a673c>",
    "poll_symbol": ""
  },
  "0x2a6797": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x2a6797>",
    "poll_symbol": ""
  },
  "0x2a67f7": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2a6851": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2a688d": {
    "name": "Projection<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x2a68ab": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2a68ca": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x2a68ca>",
    "poll_symbol": ""
  },
  "0x2a6926": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x2a6926>",
    "poll_symbol": ""
  },
  "0x2a6981": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x2a6981>",
    "poll_symbol": ""
  },
  "0x2a69dc": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x2a69dc>",
    "poll_symbol": ""
  },
  "0x2a6a38": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x2a6a38>",
    "poll_symbol": ""
  },
  "0x2a6abb": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2a6abb>",
    "poll_symbol": ""
  },
  "0x2a6aec": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2a6aec>",
    "poll_symbol": ""
  },
  "0x2a6b14": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2a6b14>",
    "poll_symbol": ""
  },
  "0x2a6b41": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2a6b41>",
    "poll_symbol": ""
  },
  "0x2a6c3c": {
    "name": "TryFlattenProj<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x2a6f16": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x2a6f16>",
    "poll_symbol": ""
  },
  "0x2a6f43": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2a6f43>",
    "poll_symbol": ""
  },
  "0x2a6f6f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2a6f6f>",
    "poll_symbol": ""
  },
  "0x2a6ff1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2a6ff1>",
    "poll_symbol": ""
  },
  "0x2a7074": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x2a7074>",
    "poll_symbol": ""
  },
  "0x2a70f4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2a70f4>",
    "poll_symbol": ""
  },
  "0x2a7168": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x2a7168>",
    "poll_symbol": ""
  },
  "0x2a72ea": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2a72ea>",
    "poll_symbol": ""
  },
  "0x2a7326": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x2a7326>",
    "poll_symbol": ""
  },
  "0x2a7362": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x2a7362>",
    "poll_symbol": ""
  },
  "0x2a7380": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x2a7380>",
    "poll_symbol": ""
  },
  "0x2a7593": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2a7593>",
    "poll_symbol": ""
  },
  "0x2a772c": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2a772c>",
    "poll_symbol": ""
  },
  "0x2a788b": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2a788b>",
    "poll_symbol": ""
  },
  "0x2a7a1c": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2a7a1c>",
    "poll_symbol": ""
  },
  "0x2a8342": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x2a8342>",
    "poll_symbol": ""
  },
  "0x2a9144": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2a9144>",
    "poll_symbol": ""
  },
  "0x2a916e": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2a916e>",
    "poll_symbol": ""
  },
  "0x2aaadf": {
    "name": "ResponseFuture<0x2aaadf>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x2aab7f": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x2aab7f>",
    "poll_symbol": ""
  },
  "0x2aac8f": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x2aac8f>",
    "poll_symbol": ""
  },
  "0x2ab339": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2ab339>",
    "poll_symbol": ""
  },
  "0x2ab364": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x2ab364>",
    "poll_symbol": ""
  },
  "0x2ab36b": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2ab36b>",
    "poll_symbol": ""
  },
  "0x2ab3e0": {
    "name": "<std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2abe6b": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x2abe6b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x2abedc": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x2abedc>",
    "poll_symbol": ""
  },
  "0x2abfe3": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2abfe3>",
    "poll_symbol": ""
  },
  "0x2ac00a": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x2ac00a>",
    "poll_symbol": ""
  },
  "0x2ac011": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2ac011>",
    "poll_symbol": ""
  },
  "0x2ac038": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2ac038>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2ae279": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x2ae279>",
    "poll_symbol": ""
  },
  "0x2ae2a0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x2ae2a0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2b0465": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2b0465>",
    "poll_symbol": ""
  },
  "0x2b048c": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2b048c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2b172e": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2b172e>",
    "poll_symbol": ""
  },
  "0x2b186a": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2b186a>",
    "poll_symbol": ""
  },
  "0x2b1998": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2b1998>",
    "poll_symbol": ""
  },
  "0x2b19bf": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2b19bf>",
    "poll_symbol": ""
  },
  "0x2b1ba0": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2b1ba0>",
    "poll_symbol": ""
  },
  "0x2b1bc7": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2b1bc7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2b1be8": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x2b1be8>",
    "poll_symbol": ""
  },
  "0x2b1c0f": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x2b1c0f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2b1f0a": {
    "name": "(futures_channel::mpsc::Sender<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x2b311f": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2b311f>",
    "poll_symbol": ""
  },
  "0x2b3caf": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2b3caf>",
    "poll_symbol": ""
  },
  "0x2b3cee": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2b3cee>",
    "poll_symbol": ""
  },
  "0x2b3d2d": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2b3d2d>",
    "poll_symbol": ""
  },
  "0x2b3d63": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b3d63>",
    "poll_symbol": ""
  },
  "0x2b3d99": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2b3d99>",
    "poll_symbol": ""
  },
  "0x2b3dd8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2b3dd8>",
    "poll_symbol": ""
  },
  "0x2b4230": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2b4230>",
    "poll_symbol": ""
  },
  "0x2b426f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2b426f>",
    "poll_symbol": ""
  },
  "0x2b45c5": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2b45c5>",
    "poll_symbol": ""
  },
  "0x2b4ca6": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2b4ca6>",
    "poll_symbol": ""
  },
  "0x2b4cc4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2b4cc4>",
    "poll_symbol": ""
  },
  "0x2b4ce2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2b4ce2>",
    "poll_symbol": ""
  },
  "0x2b4e87": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2b4e87>",
    "poll_symbol": ""
  },
  "0x2b4ea5": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2b4ea5>",
    "poll_symbol": ""
  },
  "0x2b4fb6": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2b4fb6>",
    "poll_symbol": ""
  },
  "0x2b4ff3": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2b4ff3>",
    "poll_symbol": ""
  },
  "0x2b5030": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2b5030>",
    "poll_symbol": ""
  },
  "0x2b506d": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2b506d>",
    "poll_symbol": ""
  },
  "0x2b5c0c": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2b5c0c>",
    "poll_symbol": ""
  },
  "0x2b5c1e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2b5c1e>",
    "poll_symbol": ""
  },
  "0x2b5c30": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2b5c30>",
    "poll_symbol": ""
  },
  "0x2b5e4c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2b5e4c>",
    "poll_symbol": ""
  },
  "0x2b5e5e": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2b5e5e>",
    "poll_symbol": ""
  },
  "0x2b5e70": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2b5e70>",
    "poll_symbol": ""
  },
  "0x2b611b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b611b>",
    "poll_symbol": ""
  },
  "0x2b6139": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2b6139>",
    "poll_symbol": ""
  },
  "0x2b6596": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b6596>",
    "poll_symbol": ""
  },
  "0x2b65b4": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2b65b4>",
    "poll_symbol": ""
  },
  "0x2b65d2": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2b65d2>",
    "poll_symbol": ""
  },
  "0x2b67b5": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2b67b5>",
    "poll_symbol": ""
  },
  "0x2b67d3": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2b67d3>",
    "poll_symbol": ""
  },
  "0x2b7a24": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2b7a24>",
    "poll_symbol": ""
  },
  "0x2b7ae7": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2b7ae7>",
    "poll_symbol": ""
  },
  "0x2b84da": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b84da>",
    "poll_symbol": ""
  },
  "0x2b853b": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2b853b>",
    "poll_symbol": ""
  },
  "0x2b8da2": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x2b8da2>",
    "poll_symbol": ""
  },
  "0x2b8ed3": {
    "name": "Option<&mut alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2b93c0": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2b93c0>",
    "poll_symbol": ""
  },
  "0x2b9438": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x2b9438>",
    "poll_symbol": ""
  },
  "0x2b9456": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x2b9456>",
    "poll_symbol": ""
  },
  "0x2b9474": {
    "name": "Pin<alloc::boxed::Box<tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2b9492": {
    "name": "Pin<alloc::boxed::Box<tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2b94b0": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2b94ec": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2b950a": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2bd8ee": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bd8ee>",
    "poll_symbol": ""
  },
  "0x2bd90c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bd90c>",
    "poll_symbol": ""
  },
  "0x2bd948": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bd948>",
    "poll_symbol": ""
  },
  "0x2bd966": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bd966>",
    "poll_symbol": ""
  },
  "0x2bd984": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bd984>",
    "poll_symbol": ""
  },
  "0x2bd9de": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bd9de>",
    "poll_symbol": ""
  },
  "0x2bd9fc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bd9fc>",
    "poll_symbol": ""
  },
  "0x2bda1a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bda1a>",
    "poll_symbol": ""
  },
  "0x2bda38": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bda38>",
    "poll_symbol": ""
  },
  "0x2bda56": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bda56>",
    "poll_symbol": ""
  },
  "0x2bda92": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bda92>",
    "poll_symbol": ""
  },
  "0x2bdab0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bdab0>",
    "poll_symbol": ""
  },
  "0x2bdace": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bdace>",
    "poll_symbol": ""
  },
  "0x2bdaec": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bdaec>",
    "poll_symbol": ""
  },
  "0x2bdb0a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bdb0a>",
    "poll_symbol": ""
  },
  "0x2bdb28": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bdb28>",
    "poll_symbol": ""
  },
  "0x2bdb46": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bdb46>",
    "poll_symbol": ""
  },
  "0x2bdb64": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bdb64>",
    "poll_symbol": ""
  },
  "0x2bdb82": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bdb82>",
    "poll_symbol": ""
  },
  "0x2bdbbe": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bdbbe>",
    "poll_symbol": ""
  },
  "0x2bdbdc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bdbdc>",
    "poll_symbol": ""
  },
  "0x2bdbfa": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2bdbfa>",
    "poll_symbol": ""
  },
  "0x2bdc18": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bdc18>",
    "poll_symbol": ""
  },
  "0x2bdc54": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2bdc54>",
    "poll_symbol": ""
  },
  "0x2bdee2": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x2bdee2>",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2bdf3f": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x2bdf3f>",
    "poll_symbol": ""
  },
  "0x2bdf72": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x2bdf72>",
    "poll_symbol": ""
  },
  "0x2bdfa5": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x2bdfa5>",
    "poll_symbol": ""
  },
  "0x2be044": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x2be044>",
    "poll_symbol": ""
  },
  "0x2be06b": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x2be06b>",
    "poll_symbol": ""
  },
  "0x2be562": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x2be562>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x2bfe92": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2bfe92>",
    "poll_symbol": ""
  },
  "0x2bfeb9": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x2bfeb9>",
    "poll_symbol": ""
  },
  "0x2bfeed": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x2bfeed>",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2bff5c": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x2bff5c>",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2c0b7c": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2c0b7c>",
    "poll_symbol": ""
  },
  "0x2c12e9": {
    "name": "OccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2c1338": {
    "name": "VacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x2c1338>",
    "poll_symbol": ""
  },
  "0x2c138c": {
    "name": "Entry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry10TimerEntry12poll_elapsed17h7365356379bd171dE"
  },
  "0x2c1785": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2c1785>",
    "poll_symbol": ""
  },
  "0x2c4b82": {
    "name": "<tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2c4bba": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2c4bba>",
    "poll_symbol": ""
  },
  "0x2c4be1": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2c4be1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2c547e": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c547e>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2c54f4": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c54f4>",
    "poll_symbol": ""
  },
  "0x2c55fe": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2c55fe>",
    "poll_symbol": ""
  },
  "0x2c5680": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2c5680>",
    "poll_symbol": ""
  },
  "0x2c573b": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c573b>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2c57b1": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c57b1>",
    "poll_symbol": ""
  },
  "0x2c58bb": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c58bb>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2c5931": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c5931>",
    "poll_symbol": ""
  },
  "0x2c5a3b": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2c5a3b>",
    "poll_symbol": ""
  },
  "0x2c5abd": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2c5abd>",
    "poll_symbol": ""
  },
  "0x2c5b4b": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c5b4b>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2c5bc1": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c5bc1>",
    "poll_symbol": ""
  },
  "0x2c60df": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c60df>",
    "poll_symbol": ""
  },
  "0x2c60e6": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c60e6>",
    "poll_symbol": ""
  },
  "0x2c60ed": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c60ed>",
    "poll_symbol": ""
  },
  "0x2c60f4": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c60f4>",
    "poll_symbol": ""
  },
  "0x2c6235": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6235>",
    "poll_symbol": ""
  },
  "0x2c6253": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6253>",
    "poll_symbol": ""
  },
  "0x2c6271": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6271>",
    "poll_symbol": ""
  },
  "0x2c628f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c628f>",
    "poll_symbol": ""
  },
  "0x2c657b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c657b>",
    "poll_symbol": ""
  },
  "0x2c658e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c658e>",
    "poll_symbol": ""
  },
  "0x2c65a1": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c65a1>",
    "poll_symbol": ""
  },
  "0x2c65b4": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c65b4>",
    "poll_symbol": ""
  },
  "0x2c69d4": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c69d4>",
    "poll_symbol": ""
  },
  "0x2c69fb": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c69fb>",
    "poll_symbol": ""
  },
  "0x2c6a22": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6a22>",
    "poll_symbol": ""
  },
  "0x2c6a49": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6a49>",
    "poll_symbol": ""
  },
  "0x2c6dcd": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6dcd>",
    "poll_symbol": ""
  },
  "0x2c6deb": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6deb>",
    "poll_symbol": ""
  },
  "0x2c6e09": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6e09>",
    "poll_symbol": ""
  },
  "0x2c6e27": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6e27>",
    "poll_symbol": ""
  },
  "0x2c6e45": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6e45>",
    "poll_symbol": ""
  },
  "0x2c6e63": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6e63>",
    "poll_symbol": ""
  },
  "0x2c6e81": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6e81>",
    "poll_symbol": ""
  },
  "0x2c6e9f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6e9f>",
    "poll_symbol": ""
  },
  "0x2c6ec8": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6ec8>",
    "poll_symbol": ""
  },
  "0x2c6ecf": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6ecf>",
    "poll_symbol": ""
  },
  "0x2c6ed6": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6ed6>",
    "poll_symbol": ""
  },
  "0x2c6edd": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6edd>",
    "poll_symbol": ""
  },
  "0x2c6ee4": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6ee4>",
    "poll_symbol": ""
  },
  "0x2c6eeb": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c6eeb>",
    "poll_symbol": ""
  },
  "0x2c6ef2": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6ef2>",
    "poll_symbol": ""
  },
  "0x2c6ef9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c6ef9>",
    "poll_symbol": ""
  },
  "0x2c721a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c721a>",
    "poll_symbol": ""
  },
  "0x2c722d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c722d>",
    "poll_symbol": ""
  },
  "0x2c7240": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c7240>",
    "poll_symbol": ""
  },
  "0x2c7253": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c7253>",
    "poll_symbol": ""
  },
  "0x2c7504": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c7504>",
    "poll_symbol": ""
  },
  "0x2c7522": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c7522>",
    "poll_symbol": ""
  },
  "0x2c7540": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c7540>",
    "poll_symbol": ""
  },
  "0x2c755e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c755e>",
    "poll_symbol": ""
  },
  "0x2c757c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c757c>",
    "poll_symbol": ""
  },
  "0x2c759a": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c759a>",
    "poll_symbol": ""
  },
  "0x2c75b8": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c75b8>",
    "poll_symbol": ""
  },
  "0x2c75d6": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c75d6>",
    "poll_symbol": ""
  },
  "0x2c7867": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c7867>",
    "poll_symbol": ""
  },
  "0x2c787a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c787a>",
    "poll_symbol": ""
  },
  "0x2c788d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c788d>",
    "poll_symbol": ""
  },
  "0x2c78a0": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c78a0>",
    "poll_symbol": ""
  },
  "0x2c7cac": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c7cac>",
    "poll_symbol": ""
  },
  "0x2c7f36": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c7f36>",
    "poll_symbol": ""
  },
  "0x2c81c0": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2c81c0>",
    "poll_symbol": ""
  },
  "0x2c844a": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2c844a>",
    "poll_symbol": ""
  },
  "0x2c93b9": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2c93b9>",
    "poll_symbol": ""
  },
  "0x2c956f": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2c956f>",
    "poll_symbol": ""
  },
  "0x2caa73": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2caa73>",
    "poll_symbol": ""
  },
  "0x2caef5": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2caef5>",
    "poll_symbol": ""
  },
  "0x2caf51": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2caf51>",
    "poll_symbol": ""
  },
  "0x2cb246": {
    "name": "RustcOccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x2cb246>",
    "poll_symbol": ""
  },
  "0x2cb2b3": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x2cb2b3>",
    "poll_symbol": ""
  },
  "0x2cb41c": {
    "name": "RustcEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x2cb41c>",
    "poll_symbol": ""
  },
  "0x2cb7b5": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x2cb7b5>",
    "poll_symbol": ""
  },
  "0x2cb7e1": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x2cb7e1>",
    "poll_symbol": ""
  },
  "0x2cb7ff": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x2cb7ff>",
    "poll_symbol": ""
  },
  "0x2cb81d": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x2cb81d>",
    "poll_symbol": ""
  },
  "0x2cb83d": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x2cb83d>",
    "poll_symbol": ""
  },
  "0x2cb8f2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x2cb8f2>",
    "poll_symbol": ""
  },
  "0x2cb91e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x2cb91e>",
    "poll_symbol": ""
  },
  "0x2cb99d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x2cb99d>",
    "poll_symbol": ""
  },
  "0x2cba1c": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2cba1c>",
    "poll_symbol": ""
  },
  "0x2cbaa0": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x2cbaa0>",
    "poll_symbol": ""
  },
  "0x2cbac7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2cbac7>",
    "poll_symbol": ""
  },
  "0x2cbb65": {
    "name": "<tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2cbbb0": {
    "name": "<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x2cf51c": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2cf51c>",
    "poll_symbol": ""
  },
  "0x2cf546": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2cf546>",
    "poll_symbol": ""
  },
  "0x2d09f5": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2d09f5>",
    "poll_symbol": ""
  },
  "0x2d2aa1": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2d2aa1>",
    "poll_symbol": ""
  },
  "0x2d2ac8": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2d2ac8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2d8a5f": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x2d8a5f>",
    "poll_symbol": ""
  },
  "0x2d8b6f": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x2d8b6f>",
    "poll_symbol": ""
  },
  "0x2d8c24": {
    "name": "ResponseFuture<0x2d8c24>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x2d901b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2d901b>",
    "poll_symbol": ""
  },
  "0x2d904e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2d904e>",
    "poll_symbol": ""
  },
  "0x2d90d2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2d90d2>",
    "poll_symbol": ""
  },
  "0x2d916f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2d916f>",
    "poll_symbol": ""
  },
  "0x2d91ab": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2d91ab>",
    "poll_symbol": ""
  },
  "0x2d91c9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2d91c9>",
    "poll_symbol": ""
  },
  "0x2d9712": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2d9712>",
    "poll_symbol": ""
  },
  "0x2d9730": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2d9730>",
    "poll_symbol": ""
  },
  "0x2d976c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2d976c>",
    "poll_symbol": ""
  },
  "0x2d9a22": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2d9a22>",
    "poll_symbol": ""
  },
  "0x2d9a40": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2d9a40>",
    "poll_symbol": ""
  },
  "0x2d9a5e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2d9a5e>",
    "poll_symbol": ""
  },
  "0x2d9c21": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2d9c21>",
    "poll_symbol": ""
  },
  "0x2d9c3f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2d9c3f>",
    "poll_symbol": ""
  },
  "0x2d9c5d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2d9c5d>",
    "poll_symbol": ""
  },
  "0x2d9fc3": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2d9fc3>",
    "poll_symbol": ""
  },
  "0x2d9fe1": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2d9fe1>",
    "poll_symbol": ""
  },
  "0x2d9fff": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2d9fff>",
    "poll_symbol": ""
  },
  "0x2da01d": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2da01d>",
    "poll_symbol": ""
  },
  "0x2da1a2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2da1a2>",
    "poll_symbol": ""
  },
  "0x2db4cc": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2db4cc>",
    "poll_symbol": ""
  },
  "0x2db4de": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2db4de>",
    "poll_symbol": ""
  },
  "0x2db4f0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2db4f0>",
    "poll_symbol": ""
  },
  "0x2db702": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2db702>",
    "poll_symbol": ""
  },
  "0x2db738": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2db738>",
    "poll_symbol": ""
  },
  "0x2db74a": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2db74a>",
    "poll_symbol": ""
  },
  "0x2db75c": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2db75c>",
    "poll_symbol": ""
  },
  "0x2db76e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2db76e>",
    "poll_symbol": ""
  },
  "0x2dbc00": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2dbc00>",
    "poll_symbol": ""
  },
  "0x2dc516": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2dc516>",
    "poll_symbol": ""
  },
  "0x2dc5d9": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2dc5d9>",
    "poll_symbol": ""
  },
  "0x2dd4c3": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2dd4c3>",
    "poll_symbol": ""
  },
  "0x2de82f": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x2de82f>",
    "poll_symbol": ""
  },
  "0x2de890": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x2de890>",
    "poll_symbol": ""
  },
  "0x2de953": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2de953>",
    "poll_symbol": ""
  },
  "0x2de9b4": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2de9b4>",
    "poll_symbol": ""
  },
  "0x2df845": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2df845>",
    "poll_symbol": ""
  },
  "0x2df881": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2df881>",
    "poll_symbol": ""
  },
  "0x2df8db": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2df8db>",
    "poll_symbol": ""
  },
  "0x2df8f9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2df8f9>",
    "poll_symbol": ""
  },
  "0x2df917": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2df917>",
    "poll_symbol": ""
  },
  "0x2df971": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2df971>",
    "poll_symbol": ""
  },
  "0x2df98f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2df98f>",
    "poll_symbol": ""
  },
  "0x2df9ad": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2df9ad>",
    "poll_symbol": ""
  },
  "0x2df9cb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2df9cb>",
    "poll_symbol": ""
  },
  "0x2df9e9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2df9e9>",
    "poll_symbol": ""
  },
  "0x2dfa07": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2dfa07>",
    "poll_symbol": ""
  },
  "0x2dfa25": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfa25>",
    "poll_symbol": ""
  },
  "0x2dfa43": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfa43>",
    "poll_symbol": ""
  },
  "0x2dfa61": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfa61>",
    "poll_symbol": ""
  },
  "0x2dfa9d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfa9d>",
    "poll_symbol": ""
  },
  "0x2dfabb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2dfabb>",
    "poll_symbol": ""
  },
  "0x2dfad9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2dfad9>",
    "poll_symbol": ""
  },
  "0x2dfaf7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfaf7>",
    "poll_symbol": ""
  },
  "0x2dfb15": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2dfb15>",
    "poll_symbol": ""
  },
  "0x2dfb33": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfb33>",
    "poll_symbol": ""
  },
  "0x2dfb51": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2dfb51>",
    "poll_symbol": ""
  },
  "0x2dfb8d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfb8d>",
    "poll_symbol": ""
  },
  "0x2dfbab": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfbab>",
    "poll_symbol": ""
  },
  "0x2dfbc9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2dfbc9>",
    "poll_symbol": ""
  },
  "0x2dfdb4": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::proto::h2::client::Conn<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, h2::client::Connection<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>>>",
    "poll_symbol": ""
  },
  "0x2dfdd2": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x2dfdd2>",
    "poll_symbol": ""
  },
  "0x2dfdf0": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2dfe0e": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x2dfe2c": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2dfe2c>",
    "poll_symbol": ""
  },
  "0x2dfe4a": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2dfe68": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2dfe86": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>><0x2dfe86>",
    "poll_symbol": ""
  },
  "0x2dfea4": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2dfea4>",
    "poll_symbol": ""
  },
  "0x2dfec2": {
    "name": "Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2dfee0": {
    "name": "Pin<&mut futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x2dfefe": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x2dfefe>",
    "poll_symbol": ""
  },
  "0x2dff3a": {
    "name": "Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x2dff58": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x2dff76": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x2dff76>",
    "poll_symbol": ""
  },
  "0x2dff94": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2dffd0": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>><0x2dffd0>",
    "poll_symbol": ""
  },
  "0x2dffee": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x2dffee>",
    "poll_symbol": ""
  },
  "0x2e000c": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x2e000c>",
    "poll_symbol": ""
  },
  "0x2e0067": {
    "name": "Pin<&mut core::option::Option<futures_channel::mpsc::Sender<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x2e00df": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x2e00fd": {
    "name": "Pin<&mut core::option::Option<futures_channel::oneshot::Sender<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x2e0175": {
    "name": "Pin<&mut h2::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x2e01ed": {
    "name": "Pin<&mut hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>>",
    "poll_symbol": ""
  },
  "0x2e020b": {
    "name": "Pin<&mut h2::client::{impl#6}::handshake2::{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>>",
    "poll_symbol": ""
  },
  "0x2e1e82": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e1e82>",
    "poll_symbol": ""
  },
  "0x2e1ebe": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e1ebe>",
    "poll_symbol": ""
  },
  "0x2e1fae": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e1fae>",
    "poll_symbol": ""
  },
  "0x2e1fea": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e1fea>",
    "poll_symbol": ""
  },
  "0x2e2026": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e2026>",
    "poll_symbol": ""
  },
  "0x2e20da": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e20da>",
    "poll_symbol": ""
  },
  "0x2e2116": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e2116>",
    "poll_symbol": ""
  },
  "0x2e2152": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e2152>",
    "poll_symbol": ""
  },
  "0x2e218e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e218e>",
    "poll_symbol": ""
  },
  "0x2e21ca": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e21ca>",
    "poll_symbol": ""
  },
  "0x2e2206": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e2206>",
    "poll_symbol": ""
  },
  "0x2e2242": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e2242>",
    "poll_symbol": ""
  },
  "0x2e227e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e227e>",
    "poll_symbol": ""
  },
  "0x2e22ba": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e22ba>",
    "poll_symbol": ""
  },
  "0x2e2332": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e2332>",
    "poll_symbol": ""
  },
  "0x2e236e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e236e>",
    "poll_symbol": ""
  },
  "0x2e23aa": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e23aa>",
    "poll_symbol": ""
  },
  "0x2e23e6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e23e6>",
    "poll_symbol": ""
  },
  "0x2e2422": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e2422>",
    "poll_symbol": ""
  },
  "0x2e245e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e245e>",
    "poll_symbol": ""
  },
  "0x2e249a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x2e249a>",
    "poll_symbol": ""
  },
  "0x2e2512": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e2512>",
    "poll_symbol": ""
  },
  "0x2e254e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e254e>",
    "poll_symbol": ""
  },
  "0x2e258a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x2e258a>",
    "poll_symbol": ""
  },
  "0x2e31e6": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2e31e6>",
    "poll_symbol": ""
  },
  "0x2e9613": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2e9613>",
    "poll_symbol": ""
  },
  "0x2e9e5b": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2e9e5b>",
    "poll_symbol": ""
  },
  "0x2e9e9a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2e9e9a>",
    "poll_symbol": ""
  },
  "0x2e9ed9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2e9ed9>",
    "poll_symbol": ""
  },
  "0x2e9f0f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2e9f0f>",
    "poll_symbol": ""
  },
  "0x2e9f45": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2e9f45>",
    "poll_symbol": ""
  },
  "0x2e9f84": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2e9f84>",
    "poll_symbol": ""
  },
  "0x2ea451": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2ea451>",
    "poll_symbol": ""
  },
  "0x2ea490": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2ea490>",
    "poll_symbol": ""
  },
  "0x2ea505": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2ea505>",
    "poll_symbol": ""
  },
  "0x2ea544": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2ea544>",
    "poll_symbol": ""
  },
  "0x2ea57a": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2ea57a>",
    "poll_symbol": ""
  },
  "0x2ea5b9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x2ea5b9>",
    "poll_symbol": ""
  },
  "0x2eb116": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2eb116>",
    "poll_symbol": ""
  },
  "0x2eb155": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2eb155>",
    "poll_symbol": ""
  },
  "0x2eb373": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2eb373>",
    "poll_symbol": ""
  },
  "0x2ebc81": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2ebc81>",
    "poll_symbol": ""
  },
  "0x2ebd20": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2ebd20>",
    "poll_symbol": ""
  },
  "0x2f068d": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x2f068d>",
    "poll_symbol": ""
  },
  "0x2f0df3": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn><0x2f0df3>",
    "poll_symbol": ""
  },
  "0x2f0ed3": {
    "name": "H2ClientFutureProject<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>",
    "poll_symbol": ""
  },
  "0x2f2634": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2f2634>",
    "poll_symbol": ""
  },
  "0x2f27cd": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2f27cd>",
    "poll_symbol": ""
  },
  "0x2f28a2": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x2f28a2>",
    "poll_symbol": ""
  },
  "0x2f29bf": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2f29bf>",
    "poll_symbol": ""
  },
  "0x2f2b50": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2f2b50>",
    "poll_symbol": ""
  },
  "0x2f2c25": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x2f2c25>",
    "poll_symbol": ""
  },
  "0x2f44ab": {
    "name": "{async_fn_env#0}<0x2f44ab>",
    "poll_symbol": ""
  },
  "0x2f4642": {
    "name": "{async_block_env#0}<0x2f4642>",
    "poll_symbol": ""
  },
  "0x2f4896": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2f4896>",
    "poll_symbol": ""
  },
  "0x2f5413": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x2f5413>",
    "poll_symbol": ""
  },
  "0x2f5da2": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f5da2>",
    "poll_symbol": ""
  },
  "0x2f5de1": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2f5de1>",
    "poll_symbol": ""
  },
  "0x2f5dff": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2f5dff>",
    "poll_symbol": ""
  },
  "0x2f5e8d": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f5e8d>",
    "poll_symbol": ""
  },
  "0x2f5ecc": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f5ecc>",
    "poll_symbol": ""
  },
  "0x2f5f0b": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2f5f0b>",
    "poll_symbol": ""
  },
  "0x2f5f29": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2f5f29>",
    "poll_symbol": ""
  },
  "0x2f5fb7": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f5fb7>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2f6024": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6024>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2f6064": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6064>",
    "poll_symbol": ""
  },
  "0x2f60a3": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f60a3>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2f60e3": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f60e3>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x2f6281": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f6281>",
    "poll_symbol": ""
  },
  "0x2f629f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f629f>",
    "poll_symbol": ""
  },
  "0x2f62bd": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f62bd>",
    "poll_symbol": ""
  },
  "0x2f62db": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f62db>",
    "poll_symbol": ""
  },
  "0x2f62f9": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f62f9>",
    "poll_symbol": ""
  },
  "0x2f6317": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6317>",
    "poll_symbol": ""
  },
  "0x2f6335": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6335>",
    "poll_symbol": ""
  },
  "0x2f6353": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6353>",
    "poll_symbol": ""
  },
  "0x2f6376": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f6376>",
    "poll_symbol": ""
  },
  "0x2f639d": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f639d>",
    "poll_symbol": ""
  },
  "0x2f63c4": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f63c4>",
    "poll_symbol": ""
  },
  "0x2f63eb": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f63eb>",
    "poll_symbol": ""
  },
  "0x2f641e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f641e>",
    "poll_symbol": ""
  },
  "0x2f6431": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6431>",
    "poll_symbol": ""
  },
  "0x2f6444": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f6444>",
    "poll_symbol": ""
  },
  "0x2f6457": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6457>",
    "poll_symbol": ""
  },
  "0x2f6470": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f6470>",
    "poll_symbol": ""
  },
  "0x2f648e": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f648e>",
    "poll_symbol": ""
  },
  "0x2f64ac": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f64ac>",
    "poll_symbol": ""
  },
  "0x2f64ca": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f64ca>",
    "poll_symbol": ""
  },
  "0x2f64e8": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f64e8>",
    "poll_symbol": ""
  },
  "0x2f6506": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6506>",
    "poll_symbol": ""
  },
  "0x2f6524": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f6524>",
    "poll_symbol": ""
  },
  "0x2f6542": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6542>",
    "poll_symbol": ""
  },
  "0x2f6562": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f6562>",
    "poll_symbol": ""
  },
  "0x2f6589": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6589>",
    "poll_symbol": ""
  },
  "0x2f65b0": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f65b0>",
    "poll_symbol": ""
  },
  "0x2f65d7": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f65d7>",
    "poll_symbol": ""
  },
  "0x2f6603": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6603>",
    "poll_symbol": ""
  },
  "0x2f6616": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2f6616>",
    "poll_symbol": ""
  },
  "0x2f6629": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f6629>",
    "poll_symbol": ""
  },
  "0x2f663c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2f663c>",
    "poll_symbol": ""
  },
  "0x2f72fc": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2f72fc>",
    "poll_symbol": ""
  },
  "0x2f731a": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2f731a>",
    "poll_symbol": ""
  },
  "0x2f7bcf": {
    "name": "{async_fn_env#0}<0x2f7bcf>",
    "poll_symbol": ""
  },
  "0x2f7cec": {
    "name": "{async_fn_env#0}<0x2f7cec>",
    "poll_symbol": ""
  },
  "0x2f8dd7": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2f8dd7>",
    "poll_symbol": ""
  },
  "0x2f8fe9": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2f8fe9>",
    "poll_symbol": ""
  },
  "0x2f92a5": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2f92a5>",
    "poll_symbol": ""
  },
  "0x2f92cf": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2f92cf>",
    "poll_symbol": ""
  },
  "0x2fa5c2": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2fa5c2>",
    "poll_symbol": ""
  },
  "0x2fa668": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>>, core::pin::Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x2fa6e8": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>><0x2fa6e8>",
    "poll_symbol": ""
  },
  "0x2fa792": {
    "name": "Either<core::pin::Pin<&mut hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>, core::pin::Pin<&mut hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2fa812": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2fa812>",
    "poll_symbol": ""
  },
  "0x2fa8bb": {
    "name": "Either<core::pin::Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, core::pin::Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x2fa93b": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x2fa93b>",
    "poll_symbol": ""
  },
  "0x2fa9e2": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>, core::pin::Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x2faa62": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x2faa62>",
    "poll_symbol": ""
  },
  "0x2fab0b": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, core::pin::Pin<&mut tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x2fab8b": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2fab8b>",
    "poll_symbol": ""
  },
  "0x2fafbf": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2fafbf>",
    "poll_symbol": ""
  },
  "0x2fb01c": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x2fb01c>",
    "poll_symbol": ""
  },
  "0x2fb03a": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2fb03a>",
    "poll_symbol": ""
  },
  "0x2fb059": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2fb059>",
    "poll_symbol": ""
  },
  "0x2fb081": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2fb081>",
    "poll_symbol": ""
  },
  "0x2fb0ae": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2fb0ae>",
    "poll_symbol": ""
  },
  "0x2fb161": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2fb161>",
    "poll_symbol": ""
  },
  "0x2fb18d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2fb18d>",
    "poll_symbol": ""
  },
  "0x2fb20f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2fb20f>",
    "poll_symbol": ""
  },
  "0x2fb293": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2fb293>",
    "poll_symbol": ""
  },
  "0x2fb30f": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2fb30f>",
    "poll_symbol": ""
  },
  "0x2fb73b": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x2fb73b>",
    "poll_symbol": ""
  },
  "0x2fb742": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2fb742>",
    "poll_symbol": ""
  },
  "0x2fb84d": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2fb84d>",
    "poll_symbol": ""
  },
  "0x2fbffe": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2fbffe>",
    "poll_symbol": ""
  },
  "0x2fc025": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x2fc025>",
    "poll_symbol": ""
  },
  "0x2fc02c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2fc02c>",
    "poll_symbol": ""
  },
  "0x2fc053": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2fc053>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2fc701": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2fc701>",
    "poll_symbol": ""
  },
  "0x2fc728": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x2fc728>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x2fc7c4": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x2fc7c4>",
    "poll_symbol": ""
  },
  "0x2fc7e2": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, futures_util::future::either::Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>)",
    "poll_symbol": ""
  },
  "0x2fd567": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2fd567>",
    "poll_symbol": ""
  },
  "0x2fd58e": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2fd58e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x3067c8": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3067c8>",
    "poll_symbol": ""
  },
  "0x306d02": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x306d02>",
    "poll_symbol": ""
  },
  "0x306d41": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x306d41>",
    "poll_symbol": ""
  },
  "0x306d80": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x306d80>",
    "poll_symbol": ""
  },
  "0x306db6": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x306db6>",
    "poll_symbol": ""
  },
  "0x306dec": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x306dec>",
    "poll_symbol": ""
  },
  "0x306e2b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x306e2b>",
    "poll_symbol": ""
  },
  "0x307199": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x307199>",
    "poll_symbol": ""
  },
  "0x3071d8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3071d8>",
    "poll_symbol": ""
  },
  "0x30720e": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x30720e>",
    "poll_symbol": ""
  },
  "0x30724d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x30724d>",
    "poll_symbol": ""
  },
  "0x307283": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x307283>",
    "poll_symbol": ""
  },
  "0x3072c2": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x3072c2>",
    "poll_symbol": ""
  },
  "0x30765e": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x30765e>",
    "poll_symbol": ""
  },
  "0x30769d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x30769d>",
    "poll_symbol": ""
  },
  "0x308287": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x308287>",
    "poll_symbol": ""
  },
  "0x30876e": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x30876e>",
    "poll_symbol": ""
  },
  "0x308831": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x308831>",
    "poll_symbol": ""
  },
  "0x309089": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x309089>",
    "poll_symbol": ""
  },
  "0x30970e": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x30970e>",
    "poll_symbol": ""
  },
  "0x30a70c": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x30a70c>",
    "poll_symbol": ""
  },
  "0x30a76d": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x30a76d>",
    "poll_symbol": ""
  },
  "0x30a894": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x30a894>",
    "poll_symbol": ""
  },
  "0x30a9c5": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x30a9c5>",
    "poll_symbol": ""
  },
  "0x30b58e": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x30b58e>",
    "poll_symbol": ""
  },
  "0x30b5ef": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x30b5ef>",
    "poll_symbol": ""
  },
  "0x30b650": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x30b650>",
    "poll_symbol": ""
  },
  "0x30bba8": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x30bba8>",
    "poll_symbol": ""
  },
  "0x30bc09": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x30bc09>",
    "poll_symbol": ""
  },
  "0x30bc6a": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x30bc6a>",
    "poll_symbol": ""
  },
  "0x30bccb": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x30bccb>",
    "poll_symbol": ""
  },
  "0x30c14a": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x30c14a>",
    "poll_symbol": ""
  },
  "0x30c168": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x30c168>",
    "poll_symbol": ""
  },
  "0x30c186": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x30c186>",
    "poll_symbol": ""
  },
  "0x30c2b2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x30c2b2>",
    "poll_symbol": ""
  },
  "0x30c2d0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x30c2d0>",
    "poll_symbol": ""
  },
  "0x30c2ee": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x30c2ee>",
    "poll_symbol": ""
  },
  "0x30c3de": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x30c3de>",
    "poll_symbol": ""
  },
  "0x30cdd9": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x30cdd9>",
    "poll_symbol": ""
  },
  "0x30cdeb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x30cdeb>",
    "poll_symbol": ""
  },
  "0x30cdfd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x30cdfd>",
    "poll_symbol": ""
  },
  "0x30cfa3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x30cfa3>",
    "poll_symbol": ""
  },
  "0x30cfb5": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x30cfb5>",
    "poll_symbol": ""
  },
  "0x30cfc7": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x30cfc7>",
    "poll_symbol": ""
  },
  "0x30cfd9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x30cfd9>",
    "poll_symbol": ""
  },
  "0x30cfeb": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x30cfeb>",
    "poll_symbol": ""
  },
  "0x30d0c3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x30d0c3>",
    "poll_symbol": ""
  },
  "0x30da31": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x30da31>",
    "poll_symbol": ""
  },
  "0x30dae9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x30dae9>",
    "poll_symbol": ""
  },
  "0x30db1c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x30db1c>",
    "poll_symbol": ""
  },
  "0x30dca7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x30dca7>",
    "poll_symbol": ""
  },
  "0x30dd3d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x30dd3d>",
    "poll_symbol": ""
  },
  "0x30dd79": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x30dd79>",
    "poll_symbol": ""
  },
  "0x30dd97": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x30dd97>",
    "poll_symbol": ""
  },
  "0x30e6c0": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x30e6c0>",
    "poll_symbol": ""
  },
  "0x30e739": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x30e739>",
    "poll_symbol": ""
  },
  "0x30e776": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x30e776>",
    "poll_symbol": ""
  },
  "0x30e7b2": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x30e7b2>",
    "poll_symbol": ""
  },
  "0x30e7ee": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x30e7ee>",
    "poll_symbol": ""
  },
  "0x30e848": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x30e848>",
    "poll_symbol": ""
  },
  "0x30e885": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x30e885>",
    "poll_symbol": ""
  },
  "0x30e8c1": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x30e8c1>",
    "poll_symbol": ""
  },
  "0x30e8fe": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x30e8fe>",
    "poll_symbol": ""
  },
  "0x30e91c": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x30e91c>",
    "poll_symbol": ""
  },
  "0x30e959": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x30e959>",
    "poll_symbol": ""
  },
  "0x30e996": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x30e996>",
    "poll_symbol": ""
  },
  "0x30e9d3": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x30e9d3>",
    "poll_symbol": ""
  },
  "0x30ec1c": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x30ec1c>",
    "poll_symbol": ""
  },
  "0x30ec78": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x30ec78>",
    "poll_symbol": ""
  },
  "0x30ed2f": {
    "name": "Pin<&mut tokio_native_tls::handshake::{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x30ed6c": {
    "name": "Pin<&mut tokio_native_tls::handshake::{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x30ee23": {
    "name": "Pin<&mut tokio_native_tls::StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x30eebc": {
    "name": "Pin<&mut tokio_native_tls::StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x30ef55": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x30ef55>",
    "poll_symbol": ""
  },
  "0x30efb1": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x30efb1>",
    "poll_symbol": ""
  },
  "0x310990": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>><0x310990>",
    "poll_symbol": ""
  },
  "0x310a0b": {
    "name": "Pin<&futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x31171f": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>><0x31171f>",
    "poll_symbol": ""
  },
  "0x3117b9": {
    "name": "Pin<&futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x311985": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x311985>",
    "poll_symbol": ""
  },
  "0x311a3c": {
    "name": "Pin<&reqwest::async_impl::client::ResponseFuture><0x311a3c>",
    "poll_symbol": ""
  },
  "0x311c08": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>><0x311c08>",
    "poll_symbol": ""
  },
  "0x311c45": {
    "name": "Pin<&futures_channel::oneshot::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x311c82": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x311c82>",
    "poll_symbol": ""
  },
  "0x311cbf": {
    "name": "Pin<&futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x311e6c": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>><0x311e6c>",
    "poll_symbol": ""
  },
  "0x311ea9": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x311ea9>",
    "poll_symbol": ""
  },
  "0x311f05": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x311f23": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x311f23>",
    "poll_symbol": ""
  },
  "0x311f60": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x311fbb": {
    "name": "Pin<&mut core::pin::Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>>",
    "poll_symbol": ""
  },
  "0x312091": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x312091>",
    "poll_symbol": ""
  },
  "0x3120ce": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x3120ce>",
    "poll_symbol": ""
  },
  "0x31210b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x31210b>",
    "poll_symbol": ""
  },
  "0x312167": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x3121e1": {
    "name": "Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x3121e1>",
    "poll_symbol": ""
  },
  "0x31221e": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x31221e>",
    "poll_symbol": ""
  },
  "0x31227a": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>><0x31227a>",
    "poll_symbol": ""
  },
  "0x3122b7": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x3122b7>",
    "poll_symbol": ""
  },
  "0x312313": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x312331": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>><0x312331>",
    "poll_symbol": ""
  },
  "0x31236e": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x31238c": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>><0x31238c>",
    "poll_symbol": ""
  },
  "0x3123c9": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x312480": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x3124bd": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x3124bd>",
    "poll_symbol": ""
  },
  "0x312519": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x312537": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x312537>",
    "poll_symbol": ""
  },
  "0x312574": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x312687": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::write_all::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x31279b": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>><0x31279b>",
    "poll_symbol": ""
  },
  "0x312967": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x3129c3": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x3129c3>",
    "poll_symbol": ""
  },
  "0x312a1f": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x312a1f>",
    "poll_symbol": ""
  },
  "0x312b33": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x312b33>",
    "poll_symbol": ""
  },
  "0x312beb": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x312beb>",
    "poll_symbol": ""
  },
  "0x312d5b": {
    "name": "Pin<&mut core::option::Option<futures_channel::mpsc::Sender<core::convert::Infallible>>><0x312d5b>",
    "poll_symbol": ""
  },
  "0x312e13": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x312e13>",
    "poll_symbol": ""
  },
  "0x312e6f": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>><0x312e6f>",
    "poll_symbol": ""
  },
  "0x312f83": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x312f83>",
    "poll_symbol": ""
  },
  "0x312fdf": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::read::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x31314f": {
    "name": "Pin<&mut core::option::Option<futures_channel::oneshot::Sender<core::convert::Infallible>>><0x31314f>",
    "poll_symbol": ""
  },
  "0x31369d": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x31369d>",
    "poll_symbol": ""
  },
  "0x315d27": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x315d27>",
    "poll_symbol": ""
  },
  "0x319704": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x319704>",
    "poll_symbol": ""
  },
  "0x319814": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x319814>",
    "poll_symbol": ""
  },
  "0x3198fb": {
    "name": "ResponseFuture<0x3198fb>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x31aa9d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x31aa9d>",
    "poll_symbol": ""
  },
  "0x31ab3c": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x31ab3c>",
    "poll_symbol": ""
  },
  "0x31c4a7": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x31c4a7>",
    "poll_symbol": ""
  },
  "0x31ca8c": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x31ca8c>",
    "poll_symbol": ""
  },
  "0x31cc25": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x31cc25>",
    "poll_symbol": ""
  },
  "0x31cdaa": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x31cdaa>",
    "poll_symbol": ""
  },
  "0x31cf3b": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x31cf3b>",
    "poll_symbol": ""
  },
  "0x31e0b1": {
    "name": "{async_fn_env#0}<0x31e0b1>",
    "poll_symbol": ""
  },
  "0x31e248": {
    "name": "{async_block_env#0}<0x31e248>",
    "poll_symbol": ""
  },
  "0x31e748": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x31e748>",
    "poll_symbol": ""
  },
  "0x31f0c0": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x31f0c0>",
    "poll_symbol": ""
  },
  "0x31f0e8": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x31f0e8>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x31f422": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x31f422>",
    "poll_symbol": ""
  },
  "0x3206c5": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>><0x3206c5>",
    "poll_symbol": ""
  },
  "0x3206d8": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>><0x3206d8>",
    "poll_symbol": ""
  },
  "0x3208fa": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x32090d": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x320920": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x321ab2": {
    "name": "{async_fn_env#0}<0x321ab2>",
    "poll_symbol": ""
  },
  "0x321b98": {
    "name": "{async_fn_env#0}<0x321b98>",
    "poll_symbol": ""
  },
  "0x321ce1": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>><0x321ce1>",
    "poll_symbol": ""
  },
  "0x321cf4": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>><0x321cf4>",
    "poll_symbol": ""
  },
  "0x321d07": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>><0x321d07>",
    "poll_symbol": ""
  },
  "0x321d26": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x321d26>",
    "poll_symbol": ""
  },
  "0x321d44": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x321d44>",
    "poll_symbol": ""
  },
  "0x322465": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x322465>",
    "poll_symbol": ""
  },
  "0x3224b3": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3224b3>",
    "poll_symbol": ""
  },
  "0x322503": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x322503>",
    "poll_symbol": ""
  },
  "0x322551": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x322551>",
    "poll_symbol": ""
  },
  "0x32259f": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x32259f>",
    "poll_symbol": ""
  },
  "0x3225ed": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3225ed>",
    "poll_symbol": ""
  },
  "0x32263d": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32263d>",
    "poll_symbol": ""
  },
  "0x32268b": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x32268b>",
    "poll_symbol": ""
  },
  "0x3226db": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x3226db>",
    "poll_symbol": ""
  },
  "0x322729": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x322729>",
    "poll_symbol": ""
  },
  "0x322779": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x322779>",
    "poll_symbol": ""
  },
  "0x3227c9": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3227c9>",
    "poll_symbol": ""
  },
  "0x322819": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x322819>",
    "poll_symbol": ""
  },
  "0x322867": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x322867>",
    "poll_symbol": ""
  },
  "0x3228a4": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3228a4>",
    "poll_symbol": ""
  },
  "0x3228e1": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3228e1>",
    "poll_symbol": ""
  },
  "0x32291e": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x32291e>",
    "poll_symbol": ""
  },
  "0x32295b": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32295b>",
    "poll_symbol": ""
  },
  "0x322998": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x322998>",
    "poll_symbol": ""
  },
  "0x3229d5": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>><0x3229d5>",
    "poll_symbol": ""
  },
  "0x322a12": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x322a12>",
    "poll_symbol": ""
  },
  "0x322a4f": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x322a4f>",
    "poll_symbol": ""
  },
  "0x322a8c": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x322a8c>",
    "poll_symbol": ""
  },
  "0x322ac9": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>><0x322ac9>",
    "poll_symbol": ""
  },
  "0x322b06": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x322b06>",
    "poll_symbol": ""
  },
  "0x322b43": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>><0x322b43>",
    "poll_symbol": ""
  },
  "0x322df3": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x322df3>",
    "poll_symbol": ""
  },
  "0x322ffa": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x322ffa>",
    "poll_symbol": ""
  },
  "0x323302": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x323302>",
    "poll_symbol": ""
  },
  "0x32342f": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x32342f>",
    "poll_symbol": ""
  },
  "0x3238af": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x3238af>",
    "poll_symbol": ""
  },
  "0x3238d6": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x3238d6>",
    "poll_symbol": ""
  },
  "0x323ba6": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x323ba6>",
    "poll_symbol": ""
  },
  "0x323bcd": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x323bcd>",
    "poll_symbol": ""
  },
  "0x325105": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x325105>",
    "poll_symbol": ""
  },
  "0x32512d": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x32512d>",
    "poll_symbol": ""
  },
  "0x32518a": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x32518a>",
    "poll_symbol": ""
  },
  "0x3251a8": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3251a8>",
    "poll_symbol": ""
  },
  "0x3251c6": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x3251c6>",
    "poll_symbol": ""
  },
  "0x3251e5": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x3251e5>",
    "poll_symbol": ""
  },
  "0x325203": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x325203>",
    "poll_symbol": ""
  },
  "0x325221": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x325221>",
    "poll_symbol": ""
  },
  "0x325240": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x325240>",
    "poll_symbol": ""
  },
  "0x32525f": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x32525f>",
    "poll_symbol": ""
  },
  "0x325287": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x325287>",
    "poll_symbol": ""
  },
  "0x3252b4": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x3252b4>",
    "poll_symbol": ""
  },
  "0x3253b0": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x3253b0>",
    "poll_symbol": ""
  },
  "0x325546": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x325546>",
    "poll_symbol": ""
  },
  "0x3255c5": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3255c5>",
    "poll_symbol": ""
  },
  "0x325648": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x325648>",
    "poll_symbol": ""
  },
  "0x3256ca": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3256ca>",
    "poll_symbol": ""
  },
  "0x32574d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32574d>",
    "poll_symbol": ""
  },
  "0x3257d0": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3257d0>",
    "poll_symbol": ""
  },
  "0x32584f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32584f>",
    "poll_symbol": ""
  },
  "0x3258ce": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x3258ce>",
    "poll_symbol": ""
  },
  "0x32594d": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x32594d>",
    "poll_symbol": ""
  },
  "0x3259d0": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3259d0>",
    "poll_symbol": ""
  },
  "0x325a53": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x325a53>",
    "poll_symbol": ""
  },
  "0x325ad2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x325ad2>",
    "poll_symbol": ""
  },
  "0x325b52": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x325b52>",
    "poll_symbol": ""
  },
  "0x325b79": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x325b79>",
    "poll_symbol": ""
  },
  "0x325ba1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x325ba1>",
    "poll_symbol": ""
  },
  "0x325bc9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x325bc9>",
    "poll_symbol": ""
  },
  "0x325bf0": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x325bf0>",
    "poll_symbol": ""
  },
  "0x325c18": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x325c18>",
    "poll_symbol": ""
  },
  "0x325c45": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x325c45>",
    "poll_symbol": ""
  },
  "0x325cc7": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x325cc7>",
    "poll_symbol": ""
  },
  "0x325d46": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x325d46>",
    "poll_symbol": ""
  },
  "0x325eb6": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x325eb6>",
    "poll_symbol": ""
  },
  "0x325edd": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x325edd>",
    "poll_symbol": ""
  },
  "0x325f04": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x325f04>",
    "poll_symbol": ""
  },
  "0x326016": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x326016>",
    "poll_symbol": ""
  },
  "0x3261e0": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3261e0>",
    "poll_symbol": ""
  },
  "0x32620a": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x32620a>",
    "poll_symbol": ""
  },
  "0x3269f5": {
    "name": "ResponseFuture<0x3269f5>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x327e46": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x327e46>",
    "poll_symbol": ""
  },
  "0x328058": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x328058>",
    "poll_symbol": ""
  },
  "0x328acf": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x328acf>",
    "poll_symbol": ""
  },
  "0x328afa": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x328afa>",
    "poll_symbol": ""
  },
  "0x328b01": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x328b01>",
    "poll_symbol": ""
  },
  "0x3291af": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x3291af>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x329224": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x329224>",
    "poll_symbol": ""
  },
  "0x32924b": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x32924b>",
    "poll_symbol": ""
  },
  "0x32930a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x32930a>",
    "poll_symbol": ""
  },
  "0x329331": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x329331>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32bede": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x32bede>",
    "poll_symbol": ""
  },
  "0x32bf05": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x32bf05>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32e9bb": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x32e9bb>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x32eb13": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x32eb13>",
    "poll_symbol": ""
  },
  "0x32eb3a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x32eb3a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32ee8b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x32ee8b>",
    "poll_symbol": ""
  },
  "0x32eeb2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x32eeb2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32eed5": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x32eed5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32ef54": {
    "name": "&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f148": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x32f148>",
    "poll_symbol": ""
  },
  "0x32f16f": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x32f16f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f192": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x32f192>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f326": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x32f326>",
    "poll_symbol": ""
  },
  "0x32f34d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x32f34d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f370": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x32f370>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f3ef": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x32f3ef>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f52e": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x32f52e>",
    "poll_symbol": ""
  },
  "0x32f555": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x32f555>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f578": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x32f578>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f5f7": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x32f5f7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x32f9a1": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x32f9a1>",
    "poll_symbol": ""
  },
  "0x32fb84": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x32fb84>",
    "poll_symbol": ""
  },
  "0x33026d": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x33026d>",
    "poll_symbol": ""
  },
  "0x3316b0": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x3316b0>",
    "poll_symbol": ""
  },
  "0x331c45": {
    "name": "<hyper_tls::client::{impl#5}::call::{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x331cac": {
    "name": "{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>><0x331cac>",
    "poll_symbol": ""
  },
  "0x33214c": {
    "name": "{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>><0x33214c>",
    "poll_symbol": ""
  },
  "0x3328b0": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x3328b0>",
    "poll_symbol": ""
  },
  "0x333390": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x333390>",
    "poll_symbol": ""
  },
  "0x333672": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x333672>",
    "poll_symbol": ""
  },
  "0x333827": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x333827>",
    "poll_symbol": ""
  },
  "0x33384f": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x33384f>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x335975": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x335975>",
    "poll_symbol": ""
  },
  "0x3359b4": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x3359b4>",
    "poll_symbol": ""
  },
  "0x3359f3": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x3359f3>",
    "poll_symbol": ""
  },
  "0x335a29": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x335a29>",
    "poll_symbol": ""
  },
  "0x335ad4": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x335ad4>",
    "poll_symbol": ""
  },
  "0x335b13": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x335b13>",
    "poll_symbol": ""
  },
  "0x335b49": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x335b49>",
    "poll_symbol": ""
  },
  "0x335b88": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x335b88>",
    "poll_symbol": ""
  },
  "0x336055": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x336055>",
    "poll_symbol": ""
  },
  "0x336094": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x336094>",
    "poll_symbol": ""
  },
  "0x3360ca": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x3360ca>",
    "poll_symbol": ""
  },
  "0x336109": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x336109>",
    "poll_symbol": ""
  },
  "0x336313": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x336313>",
    "poll_symbol": ""
  },
  "0x336352": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x336352>",
    "poll_symbol": ""
  },
  "0x337043": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x337043>",
    "poll_symbol": ""
  },
  "0x337309": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x337309>",
    "poll_symbol": ""
  },
  "0x33732d": {
    "name": "{closure_env#0}<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global, hyper_util::client::legacy::pool::{impl#6}::clean_waiters::{closure_env#0}<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>>",
    "poll_symbol": ""
  },
  "0x337762": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x337762>",
    "poll_symbol": ""
  },
  "0x337c71": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x337c71>",
    "poll_symbol": ""
  },
  "0x338bca": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x338bca>",
    "poll_symbol": ""
  },
  "0x338be8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x338be8>",
    "poll_symbol": ""
  },
  "0x338c24": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x338c24>",
    "poll_symbol": ""
  },
  "0x338c42": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x338c42>",
    "poll_symbol": ""
  },
  "0x338e3d": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x338e3d>",
    "poll_symbol": ""
  },
  "0x338e5b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x338e5b>",
    "poll_symbol": ""
  },
  "0x338ef1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x338ef1>",
    "poll_symbol": ""
  },
  "0x339272": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x339272>",
    "poll_symbol": ""
  },
  "0x3392b8": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3392b8>",
    "poll_symbol": ""
  },
  "0x3392fe": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3392fe>",
    "poll_symbol": ""
  },
  "0x339344": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x339344>",
    "poll_symbol": ""
  },
  "0x33938a": {
    "name": "NonNull<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x339fc8": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x339fc8>",
    "poll_symbol": ""
  },
  "0x339fe6": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x339fe6>",
    "poll_symbol": ""
  },
  "0x33a004": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x33a004>",
    "poll_symbol": ""
  },
  "0x33a425": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x33a425>",
    "poll_symbol": ""
  },
  "0x33a443": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x33a443>",
    "poll_symbol": ""
  },
  "0x33a461": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x33a461>",
    "poll_symbol": ""
  },
  "0x33a47f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x33a47f>",
    "poll_symbol": ""
  },
  "0x33a69e": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x33a69e>",
    "poll_symbol": ""
  },
  "0x33a6da": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x33a6da>",
    "poll_symbol": ""
  },
  "0x33aaea": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x33aaea>",
    "poll_symbol": ""
  },
  "0x33aafc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x33aafc>",
    "poll_symbol": ""
  },
  "0x33ab68": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x33ab68>",
    "poll_symbol": ""
  },
  "0x33ab7a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x33ab7a>",
    "poll_symbol": ""
  },
  "0x33ad3c": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x33ad3c>",
    "poll_symbol": ""
  },
  "0x33ad60": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x33ad60>",
    "poll_symbol": ""
  },
  "0x33ae4a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x33ae4a>",
    "poll_symbol": ""
  },
  "0x33ae5c": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x33ae5c>",
    "poll_symbol": ""
  },
  "0x33ae6e": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x33ae6e>",
    "poll_symbol": ""
  },
  "0x33afca": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x33afca>",
    "poll_symbol": ""
  },
  "0x33b006": {
    "name": "Pin<alloc::boxed::Box<hyper_tls::client::{impl#5}::call::{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x33b061": {
    "name": "Pin<&mut tokio_native_tls::{impl#12}::connect::{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x33b09e": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::read::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x33b09e>",
    "poll_symbol": ""
  },
  "0x33b0db": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::write_all::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x33b0db>",
    "poll_symbol": ""
  },
  "0x33b154": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x33b154>",
    "poll_symbol": ""
  },
  "0x33b172": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x33b172>",
    "poll_symbol": ""
  },
  "0x33b190": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x33b190>",
    "poll_symbol": ""
  },
  "0x33b1ae": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x33b1cc": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x33b1cc>",
    "poll_symbol": ""
  },
  "0x33b1ea": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x33b208": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x33b208>",
    "poll_symbol": ""
  },
  "0x33b226": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x33b244": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33b244>",
    "poll_symbol": ""
  },
  "0x33b262": {
    "name": "Pin<&mut futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33b280": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x33b280>",
    "poll_symbol": ""
  },
  "0x33b29e": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x33b2bc": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33b2bc>",
    "poll_symbol": ""
  },
  "0x33b2da": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33b2f8": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x33b2f8>",
    "poll_symbol": ""
  },
  "0x33b316": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x33b334": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33b334>",
    "poll_symbol": ""
  },
  "0x33b352": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33b370": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33b370>",
    "poll_symbol": ""
  },
  "0x33b38e": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33b3ac": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x33b3ac>",
    "poll_symbol": ""
  },
  "0x33b3ca": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x33b3e8": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33b3e8>",
    "poll_symbol": ""
  },
  "0x33b406": {
    "name": "Pin<&mut futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33b424": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x33b424>",
    "poll_symbol": ""
  },
  "0x33b442": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x33b460": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x33b460>",
    "poll_symbol": ""
  },
  "0x33b47e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x33b47e>",
    "poll_symbol": ""
  },
  "0x33b4f7": {
    "name": "Pin<&mut core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x33b580": {
    "name": "Pin<alloc::boxed::Box<hyper_tls::client::err::{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x33b59e": {
    "name": "Pin<alloc::boxed::Box<core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x33b5bc": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x33b5bc>",
    "poll_symbol": ""
  },
  "0x33b5da": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x33b5da>",
    "poll_symbol": ""
  },
  "0x33b5f8": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>><0x33b5f8>",
    "poll_symbol": ""
  },
  "0x33b652": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x33b652>",
    "poll_symbol": ""
  },
  "0x33b670": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x33b670>",
    "poll_symbol": ""
  },
  "0x33c3af": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x33c3af>",
    "poll_symbol": ""
  },
  "0x33c73d": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x33c73d>",
    "poll_symbol": ""
  },
  "0x33c7c3": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x33c7c3>",
    "poll_symbol": ""
  },
  "0x33c879": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x33c879>",
    "poll_symbol": ""
  },
  "0x33cac3": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x33cac3>",
    "poll_symbol": ""
  },
  "0x33d580": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x33d580>",
    "poll_symbol": ""
  },
  "0x33d5e1": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x33d5e1>",
    "poll_symbol": ""
  },
  "0x33d705": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x33d705>",
    "poll_symbol": ""
  },
  "0x33dd8a": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x33dd8a>",
    "poll_symbol": ""
  },
  "0x33e0f4": {
    "name": "Option<&mut futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33e240": {
    "name": "Option<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33ec4b": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x33ec4b>",
    "poll_symbol": ""
  },
  "0x33edd2": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>><0x33edd2>",
    "poll_symbol": ""
  },
  "0x33fa37": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x33fa37>",
    "poll_symbol": ""
  },
  "0x34221c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x34221c>",
    "poll_symbol": ""
  },
  "0x342243": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x342243>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x342275": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x342275>",
    "poll_symbol": ""
  },
  "0x3423b1": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x3423b1>",
    "poll_symbol": ""
  },
  "0x3424df": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x3424df>",
    "poll_symbol": ""
  },
  "0x342506": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x342506>",
    "poll_symbol": ""
  },
  "0x34376c": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x34376c>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x3437ac": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3437ac>",
    "poll_symbol": ""
  },
  "0x3437eb": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x3437eb>",
    "poll_symbol": ""
  },
  "0x343809": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x343809>",
    "poll_symbol": ""
  },
  "0x3438c4": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3438c4>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x343904": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x343904>",
    "poll_symbol": ""
  },
  "0x343943": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x343943>",
    "poll_symbol": ""
  },
  "0x343961": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x343961>",
    "poll_symbol": ""
  },
  "0x3439ef": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3439ef>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x343a2f": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x343a2f>",
    "poll_symbol": ""
  },
  "0x343a6e": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x343a6e>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17he691dd739be10268E"
  },
  "0x343aae": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x343aae>",
    "poll_symbol": ""
  },
  "0x34474e": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x34474e>",
    "poll_symbol": ""
  },
  "0x34476c": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x34476c>",
    "poll_symbol": ""
  },
  "0x34588e": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x34588e>",
    "poll_symbol": ""
  },
  "0x345c7c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x345c7c>",
    "poll_symbol": ""
  },
  "0x34661e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x34661e>",
    "poll_symbol": ""
  },
  "0x34686f": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x34686f>",
    "poll_symbol": ""
  },
  "0x34898b": {
    "name": "ResponseFuture<0x34898b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x348a2b": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x348a2b>",
    "poll_symbol": ""
  },
  "0x348b3b": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x348b3b>",
    "poll_symbol": ""
  },
  "0x34a57f": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x34a57f>",
    "poll_symbol": ""
  },
  "0x34b723": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x34b723>",
    "poll_symbol": ""
  },
  "0x34b8bc": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x34b8bc>",
    "poll_symbol": ""
  },
  "0x34ba1b": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x34ba1b>",
    "poll_symbol": ""
  },
  "0x34bbac": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x34bbac>",
    "poll_symbol": ""
  },
  "0x34ceec": {
    "name": "<hyper_tls::client::err::{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x34d427": {
    "name": "<core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x34e348": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x34e348>",
    "poll_symbol": ""
  },
  "0x34e372": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x34e372>",
    "poll_symbol": ""
  },
  "0x34e8dd": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x34e8dd>",
    "poll_symbol": ""
  },
  "0x34e926": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34e926>",
    "poll_symbol": ""
  },
  "0x34e9a8": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34e9a8>",
    "poll_symbol": ""
  },
  "0x34ea2b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x34ea2b>",
    "poll_symbol": ""
  },
  "0x34eaaa": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34eaaa>",
    "poll_symbol": ""
  },
  "0x34eb29": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34eb29>",
    "poll_symbol": ""
  },
  "0x34ebab": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34ebab>",
    "poll_symbol": ""
  },
  "0x34ec2a": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34ec2a>",
    "poll_symbol": ""
  },
  "0x34eca9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x34eca9>",
    "poll_symbol": ""
  },
  "0x34ed28": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34ed28>",
    "poll_symbol": ""
  },
  "0x34edab": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34edab>",
    "poll_symbol": ""
  },
  "0x34ee2e": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34ee2e>",
    "poll_symbol": ""
  },
  "0x34eeb1": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34eeb1>",
    "poll_symbol": ""
  },
  "0x34ef30": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34ef30>",
    "poll_symbol": ""
  },
  "0x34efb4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x34efb4>",
    "poll_symbol": ""
  },
  "0x34f030": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34f030>",
    "poll_symbol": ""
  },
  "0x34f0ac": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34f0ac>",
    "poll_symbol": ""
  },
  "0x34f128": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34f128>",
    "poll_symbol": ""
  },
  "0x34f1a4": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34f1a4>",
    "poll_symbol": ""
  },
  "0x34f220": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x34f220>",
    "poll_symbol": ""
  },
  "0x34f29c": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34f29c>",
    "poll_symbol": ""
  },
  "0x34f319": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34f319>",
    "poll_symbol": ""
  },
  "0x34f396": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34f396>",
    "poll_symbol": ""
  },
  "0x34f413": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34f413>",
    "poll_symbol": ""
  },
  "0x34f48f": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34f48f>",
    "poll_symbol": ""
  },
  "0x34f511": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x34f538": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x34f55f": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x34f586": {
    "name": "Projection<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x34f5ad": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x34f5d4": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x34f5fb": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x34f622": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x34f649": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x34f670": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x34f697": {
    "name": "Projection<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x34f6be": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x34fa87": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x34fa87>",
    "poll_symbol": ""
  },
  "0x34faa6": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x34faa6>",
    "poll_symbol": ""
  },
  "0x34fac4": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x34fac4>",
    "poll_symbol": ""
  },
  "0x34fae2": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x34fae2>",
    "poll_symbol": ""
  },
  "0x34fb00": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x34fb00>",
    "poll_symbol": ""
  },
  "0x34fb1e": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34fb1e>",
    "poll_symbol": ""
  },
  "0x34fb3c": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x34fb3c>",
    "poll_symbol": ""
  },
  "0x34fbaa": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34fbaa>",
    "poll_symbol": ""
  },
  "0x34fbd2": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34fbd2>",
    "poll_symbol": ""
  },
  "0x34fc03": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x34fc03>",
    "poll_symbol": ""
  },
  "0x34fc2b": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x34fc2b>",
    "poll_symbol": ""
  },
  "0x34fc58": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x34fc58>",
    "poll_symbol": ""
  },
  "0x34fd33": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x34fd33>",
    "poll_symbol": ""
  },
  "0x34fdb5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x34fdb5>",
    "poll_symbol": ""
  },
  "0x350880": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x350880>",
    "poll_symbol": ""
  },
  "0x3508a7": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3508a7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x3508f2": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x3508f2>",
    "poll_symbol": ""
  },
  "0x3508f9": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x3508f9>",
    "poll_symbol": ""
  },
  "0x350b2d": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x350b2d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x350b5a": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x350b5a>",
    "poll_symbol": ""
  },
  "0x350b81": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x350b81>",
    "poll_symbol": ""
  },
  "0x350c7d": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x350c7d>",
    "poll_symbol": ""
  },
  "0x351da6": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x351da6>",
    "poll_symbol": ""
  },
  "0x351dcd": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x351dcd>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x354f6e": {
    "name": "(&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>], &mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>])",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x354f8c": {
    "name": "&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]<0x354f8c>",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x354ff4": {
    "name": "*mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]<0x354ff4>",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x35848d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x35848d>",
    "poll_symbol": ""
  },
  "0x3584b4": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3584b4>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x3584bb": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x3584bb>",
    "poll_symbol": ""
  },
  "0x3585ca": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3585ca>",
    "poll_symbol": ""
  },
  "0x3585f1": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3585f1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x358d86": {
    "name": "{async_block_env#0}<0x358d86>",
    "poll_symbol": ""
  },
  "0x35a8c6": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x35a8c6>",
    "poll_symbol": ""
  },
  "0x35a989": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x35a989>",
    "poll_symbol": ""
  },
  "0x35b28a": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x35b28a>",
    "poll_symbol": ""
  },
  "0x35bea8": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x35bea8>",
    "poll_symbol": ""
  },
  "0x35d092": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x35d092>",
    "poll_symbol": ""
  },
  "0x35d0f3": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x35d0f3>",
    "poll_symbol": ""
  },
  "0x35d154": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x35d154>",
    "poll_symbol": ""
  },
  "0x35d8d9": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x35d8d9>",
    "poll_symbol": ""
  },
  "0x35d93a": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x35d93a>",
    "poll_symbol": ""
  },
  "0x35da61": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x35da61>",
    "poll_symbol": ""
  },
  "0x35dac2": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x35dac2>",
    "poll_symbol": ""
  },
  "0x35e25a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x35e25a>",
    "poll_symbol": ""
  },
  "0x35e28d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x35e28d>",
    "poll_symbol": ""
  },
  "0x35e653": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x35e653>",
    "poll_symbol": ""
  },
  "0x35e8cc": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x35e8cc>",
    "poll_symbol": ""
  },
  "0x35e908": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x35e908>",
    "poll_symbol": ""
  },
  "0x35e926": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x35e926>",
    "poll_symbol": ""
  },
  "0x35eb27": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x35eb27>",
    "poll_symbol": ""
  },
  "0x35ef9a": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x35ef9a>",
    "poll_symbol": ""
  },
  "0x35efb8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x35efb8>",
    "poll_symbol": ""
  },
  "0x35efd6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x35efd6>",
    "poll_symbol": ""
  },
  "0x35f102": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x35f102>",
    "poll_symbol": ""
  },
  "0x35f120": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x35f120>",
    "poll_symbol": ""
  },
  "0x35f13e": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x35f13e>",
    "poll_symbol": ""
  },
  "0x35f288": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x35f288>",
    "poll_symbol": ""
  },
  "0x35f66d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x35f66d>",
    "poll_symbol": ""
  },
  "0x35f67f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x35f67f>",
    "poll_symbol": ""
  },
  "0x35f691": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x35f691>",
    "poll_symbol": ""
  },
  "0x35f837": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x35f837>",
    "poll_symbol": ""
  },
  "0x35f849": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x35f849>",
    "poll_symbol": ""
  },
  "0x35f85b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x35f85b>",
    "poll_symbol": ""
  },
  "0x35f86d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x35f86d>",
    "poll_symbol": ""
  },
  "0x35f87f": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x35f87f>",
    "poll_symbol": ""
  },
  "0x35f945": {
    "name": "PhantomData<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x35f945>",
    "poll_symbol": ""
  },
  "0x35fa41": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x35fa41>",
    "poll_symbol": ""
  },
  "0x361f45": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled><0x361f45>",
    "poll_symbol": ""
  },
  "0x36390d": {
    "name": "Result<(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>), h2::error::Error><0x36390d>",
    "poll_symbol": ""
  },
  "0x363a4b": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x363a4b>",
    "poll_symbol": ""
  },
  "0x36a028": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError>",
    "poll_symbol": ""
  },
  "0x36a8ae": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x36a8ae>",
    "poll_symbol": ""
  },
  "0x36b7b6": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>><0x36b7b6>",
    "poll_symbol": ""
  },
  "0x36b9fc": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x36b9fc>",
    "poll_symbol": ""
  },
  "0x36c9bf": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)>>",
    "poll_symbol": ""
  },
  "0x36ca23": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>>",
    "poll_symbol": ""
  },
  "0x36ca84": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>>",
    "poll_symbol": ""
  },
  "0x36d21f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x36d21f>",
    "poll_symbol": ""
  },
  "0x36d23d": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x36d23d>",
    "poll_symbol": ""
  },
  "0x36d25b": {
    "name": "Pin<&mut hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x36d2d7": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x36d2d7>",
    "poll_symbol": ""
  },
  "0x36d2f5": {
    "name": "Pin<&mut futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x36d2f5>",
    "poll_symbol": ""
  },
  "0x36d405": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x36d405>",
    "poll_symbol": ""
  },
  "0x36d441": {
    "name": "Pin<alloc::boxed::Box<reqwest::dns::gai::{impl#2}::resolve::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x36d45f": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture>",
    "poll_symbol": ""
  },
  "0x36d49c": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x36d49c>",
    "poll_symbol": ""
  },
  "0x36d4ba": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x36d4ba>",
    "poll_symbol": ""
  },
  "0x36d4d8": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>><0x36d4d8>",
    "poll_symbol": ""
  },
  "0x36d4f6": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::write_all::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x36d4f6>",
    "poll_symbol": ""
  },
  "0x36d514": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::read::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x36d514>",
    "poll_symbol": ""
  },
  "0x36d532": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x36d532>",
    "poll_symbol": ""
  },
  "0x36d550": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x36d550>",
    "poll_symbol": ""
  },
  "0x36d56e": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>><0x36d56e>",
    "poll_symbol": ""
  },
  "0x36d58c": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>><0x36d58c>",
    "poll_symbol": ""
  },
  "0x36e4c7": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x36e4c7>",
    "poll_symbol": ""
  },
  "0x37180b": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x37180b>",
    "poll_symbol": ""
  },
  "0x371e18": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x371e18>",
    "poll_symbol": ""
  },
  "0x371fb1": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x371fb1>",
    "poll_symbol": ""
  },
  "0x372108": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x372108>",
    "poll_symbol": ""
  },
  "0x372299": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x372299>",
    "poll_symbol": ""
  },
  "0x37310c": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x37310c>",
    "poll_symbol": ""
  },
  "0x3735e0": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x3735e0>",
    "poll_symbol": ""
  },
  "0x37361f": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x37361f>",
    "poll_symbol": ""
  },
  "0x37365e": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x37365e>",
    "poll_symbol": ""
  },
  "0x373694": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x373694>",
    "poll_symbol": ""
  },
  "0x3736ca": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x3736ca>",
    "poll_symbol": ""
  },
  "0x373709": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x373709>",
    "poll_symbol": ""
  },
  "0x373ab6": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x373ab6>",
    "poll_symbol": ""
  },
  "0x373af5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x373af5>",
    "poll_symbol": ""
  },
  "0x373b2b": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x373b2b>",
    "poll_symbol": ""
  },
  "0x373b6a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x373b6a>",
    "poll_symbol": ""
  },
  "0x373ba0": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x373ba0>",
    "poll_symbol": ""
  },
  "0x373bdf": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x373bdf>",
    "poll_symbol": ""
  },
  "0x373fb1": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x373fb1>",
    "poll_symbol": ""
  },
  "0x373ff0": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x373ff0>",
    "poll_symbol": ""
  },
  "0x374af0": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x374af0>",
    "poll_symbol": ""
  },
  "0x376cb8": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x376cb8>",
    "poll_symbol": ""
  },
  "0x376dc8": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x376dc8>",
    "poll_symbol": ""
  },
  "0x376e7d": {
    "name": "ResponseFuture<0x376e7d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x3773cd": {
    "name": "<reqwest::dns::gai::{impl#2}::resolve::{async_block_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x377448": {
    "name": "GaiFuture<0x377448>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x377682": {
    "name": "{async_fn_env#0}<0x377682>",
    "poll_symbol": ""
  },
  "0x3777ec": {
    "name": "{async_block_env#0}<0x3777ec>",
    "poll_symbol": ""
  },
  "0x377ca9": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x377ca9>",
    "poll_symbol": ""
  },
  "0x37865a": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x37865a>",
    "poll_symbol": ""
  },
  "0x3786aa": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x3786aa>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x3787b0": {
    "name": "Projection<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x3787d8": {
    "name": "InnerProjReplace<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x3787d8>",
    "poll_symbol": ""
  },
  "0x378884": {
    "name": "InnerProj<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x37a68f": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x37a68f>",
    "poll_symbol": ""
  },
  "0x37c148": {
    "name": "{async_fn_env#0}<0x37c148>",
    "poll_symbol": ""
  },
  "0x37c22e": {
    "name": "{async_fn_env#0}<0x37c22e>",
    "poll_symbol": ""
  },
  "0x37ca3f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x37ca3f>",
    "poll_symbol": ""
  },
  "0x37cade": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x37cade>",
    "poll_symbol": ""
  },
  "0x37de4c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x37de4c>",
    "poll_symbol": ""
  },
  "0x37e05e": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x37e05e>",
    "poll_symbol": ""
  },
  "0x37e3ed": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x37e3ed>",
    "poll_symbol": ""
  },
  "0x37e417": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x37e417>",
    "poll_symbol": ""
  },
  "0x37ef8f": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x37ef8f>",
    "poll_symbol": ""
  },
  "0x37efba": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x37efba>",
    "poll_symbol": ""
  },
  "0x37efc1": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x37efc1>",
    "poll_symbol": ""
  },
  "0x37f761": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x37f761>",
    "poll_symbol": ""
  },
  "0x37f788": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x37f788>",
    "poll_symbol": ""
  },
  "0x37f801": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x37f801>",
    "poll_symbol": ""
  },
  "0x37f883": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x37f883>",
    "poll_symbol": ""
  },
  "0x37f902": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x37f902>",
    "poll_symbol": ""
  },
  "0x37f984": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x37f984>",
    "poll_symbol": ""
  },
  "0x37fa03": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x37fa03>",
    "poll_symbol": ""
  },
  "0x37fa89": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x37fa89>",
    "poll_symbol": ""
  },
  "0x37fae6": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x37fae6>",
    "poll_symbol": ""
  },
  "0x37fb04": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x37fb04>",
    "poll_symbol": ""
  },
  "0x37fb22": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x37fb22>",
    "poll_symbol": ""
  },
  "0x37fb42": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x37fb42>",
    "poll_symbol": ""
  },
  "0x37fb6a": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x37fb6a>",
    "poll_symbol": ""
  },
  "0x37fb97": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x37fb97>",
    "poll_symbol": ""
  },
  "0x37fca4": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x37fca4>",
    "poll_symbol": ""
  },
  "0x37fcd2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x37fcd2>",
    "poll_symbol": ""
  },
  "0x37fcfe": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x37fcfe>",
    "poll_symbol": ""
  },
  "0x37fd80": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x37fd80>",
    "poll_symbol": ""
  },
  "0x37fe03": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x37fe03>",
    "poll_symbol": ""
  },
  "0x37fe86": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x37fe86>",
    "poll_symbol": ""
  },
  "0x37ff05": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x37ff05>",
    "poll_symbol": ""
  },
  "0x37ff85": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x37ff85>",
    "poll_symbol": ""
  },
  "0x3800a7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3800a7>",
    "poll_symbol": ""
  },
  "0x3800cf": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3800cf>",
    "poll_symbol": ""
  },
  "0x3800f6": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3800f6>",
    "poll_symbol": ""
  },
  "0x3805ab": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x3805ab>",
    "poll_symbol": ""
  },
  "0x3805d2": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x3805d2>",
    "poll_symbol": ""
  },
  "0x3805fa": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x3805fa>",
    "poll_symbol": ""
  },
  "0x38079b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x38079b>",
    "poll_symbol": ""
  },
  "0x3807c2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3807c2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x381e31": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x381e31>",
    "poll_symbol": ""
  },
  "0x38382e": {
    "name": "(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>)<0x38382e>",
    "poll_symbol": ""
  },
  "0x387d8e": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x387d8e>",
    "poll_symbol": ""
  },
  "0x387dad": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x387dad>",
    "poll_symbol": ""
  },
  "0x387e3a": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x387e3a>",
    "poll_symbol": ""
  },
  "0x388054": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x388054>",
    "poll_symbol": ""
  },
  "0x3880af": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x3880af>",
    "poll_symbol": ""
  },
  "0x3880cd": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x3880cd>",
    "poll_symbol": ""
  },
  "0x3880eb": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3880eb>",
    "poll_symbol": ""
  },
  "0x388112": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x388112>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x388130": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x388130>",
    "poll_symbol": ""
  },
  "0x38999c": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x38999c>",
    "poll_symbol": ""
  },
  "0x389dc6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x389dc6>",
    "poll_symbol": ""
  },
  "0x38a348": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x38a348>",
    "poll_symbol": ""
  },
  "0x38a366": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x38a366>",
    "poll_symbol": ""
  },
  "0x38a384": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x38a384>",
    "poll_symbol": ""
  },
  "0x38a585": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x38a585>",
    "poll_symbol": ""
  },
  "0x38ab4f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x38ab4f>",
    "poll_symbol": ""
  },
  "0x38ab6d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x38ab6d>",
    "poll_symbol": ""
  },
  "0x38aba9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x38aba9>",
    "poll_symbol": ""
  },
  "0x38c4f1": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x38c4f1>",
    "poll_symbol": ""
  },
  "0x38c50f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x38c50f>",
    "poll_symbol": ""
  },
  "0x38c52d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x38c52d>",
    "poll_symbol": ""
  },
  "0x38c751": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x38c751>",
    "poll_symbol": ""
  },
  "0x38c7cc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x38c7cc>",
    "poll_symbol": ""
  },
  "0x38c847": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x38c847>",
    "poll_symbol": ""
  },
  "0x38ca50": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x38ca50>",
    "poll_symbol": ""
  },
  "0x38e94d": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x38e94d>",
    "poll_symbol": ""
  },
  "0x38ea10": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x38ea10>",
    "poll_symbol": ""
  },
  "0x38f091": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x38f091>",
    "poll_symbol": ""
  },
  "0x38f8e8": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x38f8e8>",
    "poll_symbol": ""
  },
  "0x38f949": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x38f949>",
    "poll_symbol": ""
  },
  "0x38fa0c": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x38fa0c>",
    "poll_symbol": ""
  },
  "0x390f98": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x390f98>",
    "poll_symbol": ""
  },
  "0x390faa": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x390faa>",
    "poll_symbol": ""
  },
  "0x390fbc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x390fbc>",
    "poll_symbol": ""
  },
  "0x391148": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x391148>",
    "poll_symbol": ""
  },
  "0x39115a": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x39115a>",
    "poll_symbol": ""
  },
  "0x39116c": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x39116c>",
    "poll_symbol": ""
  },
  "0x39117e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x39117e>",
    "poll_symbol": ""
  },
  "0x391190": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x391190>",
    "poll_symbol": ""
  },
  "0x391244": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x391244>",
    "poll_symbol": ""
  },
  "0x39182d": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>><0x39182d>",
    "poll_symbol": ""
  },
  "0x392546": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x392546>",
    "poll_symbol": ""
  },
  "0x3932dc": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x3932dc>",
    "poll_symbol": ""
  },
  "0x393318": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x393318>",
    "poll_symbol": ""
  },
  "0x393336": {
    "name": "Pin<&mut futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x393336>",
    "poll_symbol": ""
  },
  "0x393354": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x393354>",
    "poll_symbol": ""
  },
  "0x393372": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x393372>",
    "poll_symbol": ""
  },
  "0x393390": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x393390>",
    "poll_symbol": ""
  },
  "0x3933ae": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3933ae>",
    "poll_symbol": ""
  },
  "0x3933cc": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>><0x3933cc>",
    "poll_symbol": ""
  },
  "0x393408": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x393408>",
    "poll_symbol": ""
  },
  "0x393426": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x393426>",
    "poll_symbol": ""
  },
  "0x393444": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x393444>",
    "poll_symbol": ""
  },
  "0x393462": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x393462>",
    "poll_symbol": ""
  },
  "0x393480": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x393480>",
    "poll_symbol": ""
  },
  "0x39349e": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39349e>",
    "poll_symbol": ""
  },
  "0x3934bc": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x3934bc>",
    "poll_symbol": ""
  },
  "0x3934da": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>><0x3934da>",
    "poll_symbol": ""
  },
  "0x3934f8": {
    "name": "Pin<&mut futures_util::future::try_future::try_flatten::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x3934f8>",
    "poll_symbol": ""
  },
  "0x393516": {
    "name": "Pin<&mut futures_util::future::try_future::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x393534": {
    "name": "Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x393534>",
    "poll_symbol": ""
  },
  "0x393552": {
    "name": "Pin<&mut tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x396481": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x396481>",
    "poll_symbol": ""
  },
  "0x397061": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x397061>",
    "poll_symbol": ""
  },
  "0x397089": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x397089>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h96cc6b660823d8b5E"
  },
  "0x398232": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x398232>",
    "poll_symbol": ""
  },
  "0x398741": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x398741>",
    "poll_symbol": ""
  },
  "0x3988da": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x3988da>",
    "poll_symbol": ""
  },
  "0x398a5f": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x398a5f>",
    "poll_symbol": ""
  },
  "0x398bf0": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x398bf0>",
    "poll_symbol": ""
  },
  "0x39a780": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x39a780>",
    "poll_symbol": ""
  },
  "0x39a890": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x39a890>",
    "poll_symbol": ""
  },
  "0x39a977": {
    "name": "ResponseFuture<0x39a977>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x39c05c": {
    "name": "{async_fn_env#0}<0x39c05c>",
    "poll_symbol": ""
  },
  "0x39c27a": {
    "name": "{async_fn_env#0}<0x39c27a>",
    "poll_symbol": ""
  },
  "0x39d7c4": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x39d7c4>",
    "poll_symbol": ""
  },
  "0x39d803": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x39d803>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x39db6c": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39db6c>",
    "poll_symbol": ""
  },
  "0x39dc6a": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x39dc6a>",
    "poll_symbol": ""
  },
  "0x39dc88": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39dc88>",
    "poll_symbol": ""
  },
  "0x39dca6": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x39dca6>",
    "poll_symbol": ""
  },
  "0x39dcc5": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x39dcc5>",
    "poll_symbol": ""
  },
  "0x39dce3": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x39dce3>",
    "poll_symbol": ""
  },
  "0x39dd02": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x39dd02>",
    "poll_symbol": ""
  },
  "0x39dd20": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x39dd20>",
    "poll_symbol": ""
  },
  "0x39dd44": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x39dd6b": {
    "name": "Projection<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x39dd92": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x39dd92>",
    "poll_symbol": ""
  },
  "0x39de2e": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x39de2e>",
    "poll_symbol": ""
  },
  "0x39de55": {
    "name": "Projection<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x39de7c": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x39dead": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39dead>",
    "poll_symbol": ""
  },
  "0x39df2a": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39df2a>",
    "poll_symbol": ""
  },
  "0x39dfc2": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x39dfc2>",
    "poll_symbol": ""
  },
  "0x39e03f": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x39e03f>",
    "poll_symbol": ""
  },
  "0x39e0ec": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x39e0ec>",
    "poll_symbol": ""
  },
  "0x39e261": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x39e261>",
    "poll_symbol": ""
  },
  "0x39e2e3": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e2e3>",
    "poll_symbol": ""
  },
  "0x39e30f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e30f>",
    "poll_symbol": ""
  },
  "0x39e391": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e391>",
    "poll_symbol": ""
  },
  "0x39e414": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e414>",
    "poll_symbol": ""
  },
  "0x39e497": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x39e497>",
    "poll_symbol": ""
  },
  "0x39e516": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e516>",
    "poll_symbol": ""
  },
  "0x39e599": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e599>",
    "poll_symbol": ""
  },
  "0x39e618": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x39e618>",
    "poll_symbol": ""
  },
  "0x39e697": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39e697>",
    "poll_symbol": ""
  },
  "0x39e71a": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39e71a>",
    "poll_symbol": ""
  },
  "0x39e79d": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39e79d>",
    "poll_symbol": ""
  },
  "0x39e81d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e81d>",
    "poll_symbol": ""
  },
  "0x39e845": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e845>",
    "poll_symbol": ""
  },
  "0x39e86d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x39e86d>",
    "poll_symbol": ""
  },
  "0x39e894": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e894>",
    "poll_symbol": ""
  },
  "0x39e8bc": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x39e8bc>",
    "poll_symbol": ""
  },
  "0x39e8e3": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x39e8e3>",
    "poll_symbol": ""
  },
  "0x39ea15": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39ea15>",
    "poll_symbol": ""
  },
  "0x39ea3d": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39ea3d>",
    "poll_symbol": ""
  },
  "0x39ea65": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x39ea65>",
    "poll_symbol": ""
  },
  "0x39ea92": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x39ea92>",
    "poll_symbol": ""
  },
  "0x39eb14": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x39eb14>",
    "poll_symbol": ""
  },
  "0x3a0701": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x3a0701>",
    "poll_symbol": ""
  },
  "0x3a0740": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x3a0740>",
    "poll_symbol": ""
  },
  "0x3a077f": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x3a077f>",
    "poll_symbol": ""
  },
  "0x3a07b5": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3a07b5>",
    "poll_symbol": ""
  },
  "0x3a07eb": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x3a07eb>",
    "poll_symbol": ""
  },
  "0x3a082a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x3a082a>",
    "poll_symbol": ""
  },
  "0x3a0cba": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3a0cba>",
    "poll_symbol": ""
  },
  "0x3a0d64": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3a0d64>",
    "poll_symbol": ""
  },
  "0x3a0d9a": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x3a0d9a>",
    "poll_symbol": ""
  },
  "0x3a0e44": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x3a0e44>",
    "poll_symbol": ""
  },
  "0x3a0e7a": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3a0e7a>",
    "poll_symbol": ""
  },
  "0x3a0f05": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x3a0f05>",
    "poll_symbol": ""
  },
  "0x3a1379": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x3a1379>",
    "poll_symbol": ""
  },
  "0x3a1423": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x3a1423>",
    "poll_symbol": ""
  },
  "0x3a7c51": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, &alloc::alloc::Global><0x3a7c51>",
    "poll_symbol": ""
  },
  "0x3a7e18": {
    "name": "Weak<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), &alloc::alloc::Global><0x3a7e18>",
    "poll_symbol": ""
  },
  "0x3a7f29": {
    "name": "Weak<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, &alloc::alloc::Global><0x3a7f29>",
    "poll_symbol": ""
  },
  "0x3a825c": {
    "name": "Weak<futures_channel::oneshot::Inner<core::convert::Infallible>, &alloc::alloc::Global><0x3a825c>",
    "poll_symbol": ""
  },
  "0x3a8acf": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3a8acf>",
    "poll_symbol": ""
  },
  "0x3a8d17": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3a8d17>",
    "poll_symbol": ""
  },
  "0x3aa5f6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x3aa5f6>",
    "poll_symbol": ""
  },
  "0x3aa88c": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x3aa88c>",
    "poll_symbol": ""
  },
  "0x3ab74d": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3ab74d>",
    "poll_symbol": ""
  },
  "0x3ab774": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x3ab774>",
    "poll_symbol": ""
  },
  "0x3ab77b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3ab77b>",
    "poll_symbol": ""
  },
  "0x3ab7a2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3ab7a2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x3abadf": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3abadf>",
    "poll_symbol": ""
  },
  "0x3abb09": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3abb09>",
    "poll_symbol": ""
  },
  "0x3ac44e": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x3ac44e>",
    "poll_symbol": ""
  },
  "0x3ac479": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x3ac479>",
    "poll_symbol": ""
  },
  "0x3ac480": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x3ac480>",
    "poll_symbol": ""
  },
  "0x3adbad": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x3af3e2": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x3af5b1": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x3b0ea2": {
    "name": "&alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x3b2899": {
    "name": "*mut alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x3b3f20": {
    "name": "&(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x5aac64": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5aac64>",
    "poll_symbol": ""
  },
  "0x5aad27": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5aad27>",
    "poll_symbol": ""
  },
  "0x5abab5": {
    "name": "Unique<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5ac181": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5ac181>",
    "poll_symbol": ""
  },
  "0x5ac19f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5ac19f>",
    "poll_symbol": ""
  },
  "0x5ac1bd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5ac1bd>",
    "poll_symbol": ""
  },
  "0x5ac235": {
    "name": "NonNull<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5ac2c1": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5ac2c1>",
    "poll_symbol": ""
  },
  "0x5ac8f0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5ac8f0>",
    "poll_symbol": ""
  },
  "0x5ac902": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5ac902>",
    "poll_symbol": ""
  },
  "0x5ac938": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5ac938>",
    "poll_symbol": ""
  },
  "0x5aca46": {
    "name": "PhantomData<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5acaa0": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5acaa0>",
    "poll_symbol": ""
  },
  "0x5adb8c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5adb8c>",
    "poll_symbol": ""
  },
  "0x5adbaa": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5adbaa>",
    "poll_symbol": ""
  },
  "0x5adbc8": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5adbc8>",
    "poll_symbol": ""
  },
  "0x5adcf1": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5adcf1>",
    "poll_symbol": ""
  },
  "0x5add0f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5add0f>",
    "poll_symbol": ""
  },
  "0x5b02ba": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5b02ba>",
    "poll_symbol": ""
  },
  "0x5b4533": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5b4533>",
    "poll_symbol": ""
  },
  "0x5b4572": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5b4572>",
    "poll_symbol": ""
  },
  "0x5b45b1": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5b45b1>",
    "poll_symbol": ""
  },
  "0x5b45e7": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5b45e7>",
    "poll_symbol": ""
  },
  "0x5b461d": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5b461d>",
    "poll_symbol": ""
  },
  "0x5b465c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5b465c>",
    "poll_symbol": ""
  },
  "0x5b47f2": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5b47f2>",
    "poll_symbol": ""
  },
  "0x5b4831": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5b4831>",
    "poll_symbol": ""
  },
  "0x5b6c87": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5b6c87>",
    "poll_symbol": ""
  },
  "0x5b6cb1": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5b6cb1>",
    "poll_symbol": ""
  },
  "0x5b7748": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5b7748>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5b774f": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5b7999": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5b7999>",
    "poll_symbol": ""
  },
  "0x5b7a12": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5b7a12>",
    "poll_symbol": ""
  },
  "0x5b7a19": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5b7a19>",
    "poll_symbol": ""
  },
  "0x5b9aa4": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5b9aa4>",
    "poll_symbol": ""
  },
  "0x5bd2e5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5bd303": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5bd37b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5bd411": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5bed07": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5bed43": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5bee33": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5bef5f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5c0230": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5c0230>",
    "poll_symbol": ""
  },
  "0x5c49bb": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5c49bb>",
    "poll_symbol": ""
  },
  "0x5c49e2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5c49e2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5c4f8b": {
    "name": "{async_fn_env#0}<0x5c4f8b>",
    "poll_symbol": ""
  },
  "0x5c51e8": {
    "name": "{async_block_env#0}<0x5c51e8>",
    "poll_symbol": ""
  },
  "0x5c6763": {
    "name": "{async_fn_env#0}<0x5c6763>",
    "poll_symbol": ""
  },
  "0x5c9057": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x5c9057>",
    "poll_symbol": ""
  },
  "0x5c90b8": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x5c90b8>",
    "poll_symbol": ""
  },
  "0x5ca3b3": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError><0x5ca3b3>",
    "poll_symbol": ""
  },
  "0x5cbb21": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x5cbb21>",
    "poll_symbol": ""
  },
  "0x5cbdff": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x5cbdff>",
    "poll_symbol": ""
  },
  "0x5cf4cc": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x5cf4cc>",
    "poll_symbol": ""
  },
  "0x5d1135": {
    "name": "{async_fn_env#0}<0x5d1135>",
    "poll_symbol": ""
  },
  "0x5d1252": {
    "name": "{async_fn_env#0}<0x5d1252>",
    "poll_symbol": ""
  },
  "0x5d2e11": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x5d2e11>",
    "poll_symbol": ""
  },
  "0x5d2e38": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x5d2e38>",
    "poll_symbol": ""
  },
  "0x5d2e65": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x5d2e65>",
    "poll_symbol": ""
  },
  "0x5d2ee4": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x5d2ee4>",
    "poll_symbol": ""
  },
  "0x5d2f81": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x5d2f81>",
    "poll_symbol": ""
  },
  "0x5d2fbd": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x5d2fbd>",
    "poll_symbol": ""
  },
  "0x5d2fdb": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x5d2fdb>",
    "poll_symbol": ""
  },
  "0x5d4dab": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5d4dab>",
    "poll_symbol": ""
  },
  "0x5d6667": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5d6667>",
    "poll_symbol": ""
  },
  "0x5d66a6": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5d66a6>",
    "poll_symbol": ""
  },
  "0x5d66e5": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5d66e5>",
    "poll_symbol": ""
  },
  "0x5d671b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5d671b>",
    "poll_symbol": ""
  },
  "0x5d6751": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5d6751>",
    "poll_symbol": ""
  },
  "0x5d6790": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5d6790>",
    "poll_symbol": ""
  },
  "0x5d74bf": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5d74bf>",
    "poll_symbol": ""
  },
  "0x5d74dd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5d74dd>",
    "poll_symbol": ""
  },
  "0x5d74fb": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5d74fb>",
    "poll_symbol": ""
  },
  "0x5d7a6a": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5d7a6a>",
    "poll_symbol": ""
  },
  "0x5d7a7c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5d7a7c>",
    "poll_symbol": ""
  },
  "0x5d7ab2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5d7ab2>",
    "poll_symbol": ""
  },
  "0x5d89f2": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5d89f2>",
    "poll_symbol": ""
  },
  "0x5d8ab5": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5d8ab5>",
    "poll_symbol": ""
  },
  "0x5da759": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5da759>",
    "poll_symbol": ""
  },
  "0x5da777": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5da777>",
    "poll_symbol": ""
  },
  "0x5da993": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5da993>",
    "poll_symbol": ""
  },
  "0x5da9b1": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5da9b1>",
    "poll_symbol": ""
  },
  "0x5da9cf": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5da9cf>",
    "poll_symbol": ""
  },
  "0x5dc263": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5dc263>",
    "poll_symbol": ""
  },
  "0x5dc281": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5dc281>",
    "poll_symbol": ""
  },
  "0x5dc335": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5dc335>",
    "poll_symbol": ""
  },
  "0x5dc3cb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5dc3cb>",
    "poll_symbol": ""
  },
  "0x5dc75c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5dc75c>",
    "poll_symbol": ""
  },
  "0x5dc798": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5dc798>",
    "poll_symbol": ""
  },
  "0x5dc888": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5dc888>",
    "poll_symbol": ""
  },
  "0x5dc978": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5dc978>",
    "poll_symbol": ""
  },
  "0x5dd335": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x5dd372": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x5dd372>",
    "poll_symbol": ""
  },
  "0x5dd3ce": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5dd42a": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture><0x5dd42a>",
    "poll_symbol": ""
  },
  "0x5dd486": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5dd486>",
    "poll_symbol": ""
  },
  "0x5dd6e9": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture><0x5dd6e9>",
    "poll_symbol": ""
  },
  "0x5ddc4a": {
    "name": "GaiFuture<0x5ddc4a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5dde13": {
    "name": "{async_fn_env#0}<0x5dde13>",
    "poll_symbol": ""
  },
  "0x5de256": {
    "name": "ResponseFuture<0x5de256>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x5de278": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5de278>",
    "poll_symbol": ""
  },
  "0x5e1a9f": {
    "name": "{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>>",
    "poll_symbol": ""
  },
  "0x5e1b5a": {
    "name": "{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>><0x5e1b5a>",
    "poll_symbol": ""
  },
  "0x5e261f": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>>>",
    "poll_symbol": ""
  },
  "0x5e3991": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e3991>",
    "poll_symbol": ""
  },
  "0x5e39bb": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e39bb>",
    "poll_symbol": ""
  },
  "0x5e410c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5e410c>",
    "poll_symbol": ""
  },
  "0x5e4133": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5e4133>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5e5f17": {
    "name": "<core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x5e5f59": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x5e5f59>",
    "poll_symbol": ""
  },
  "0x5e5f95": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x5e5fb3": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5e5fb3>",
    "poll_symbol": ""
  },
  "0x5e5ff0": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x5e60e2": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture><0x5e60e2>",
    "poll_symbol": ""
  },
  "0x5e6100": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture><0x5e6100>",
    "poll_symbol": ""
  },
  "0x5e8149": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError><0x5e8149>",
    "poll_symbol": ""
  },
  "0x5e8754": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e8754>",
    "poll_symbol": ""
  },
  "0x5e879c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5e879c>",
    "poll_symbol": ""
  },
  "0x5e8881": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e8881>",
    "poll_symbol": ""
  },
  "0x5e88db": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5e88db>",
    "poll_symbol": ""
  },
  "0x5e88f9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5e88f9>",
    "poll_symbol": ""
  },
  "0x5e8e18": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5e8e18>",
    "poll_symbol": ""
  },
  "0x5e8edb": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e8edb>",
    "poll_symbol": ""
  },
  "0x5eabfa": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5eabfa>",
    "poll_symbol": ""
  },
  "0x5eac18": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5eac18>",
    "poll_symbol": ""
  },
  "0x5eac36": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5eac36>",
    "poll_symbol": ""
  },
  "0x5eaf7e": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5eaf7e>",
    "poll_symbol": ""
  },
  "0x5eb051": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5eb051>",
    "poll_symbol": ""
  },
  "0x5eb063": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5eb063>",
    "poll_symbol": ""
  },
  "0x5eb099": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5eb099>",
    "poll_symbol": ""
  },
  "0x5eb4fd": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5eb4fd>",
    "poll_symbol": ""
  },
  "0x5ece61": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5ece61>",
    "poll_symbol": ""
  },
  "0x5ecea0": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5ecea0>",
    "poll_symbol": ""
  },
  "0x5ecedf": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5ecedf>",
    "poll_symbol": ""
  },
  "0x5ecf15": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ecf15>",
    "poll_symbol": ""
  },
  "0x5ecf4b": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5ecf4b>",
    "poll_symbol": ""
  },
  "0x5ecf8a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5ecf8a>",
    "poll_symbol": ""
  },
  "0x5ed995": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5ed995>",
    "poll_symbol": ""
  },
  "0x5ed9d4": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5ed9d4>",
    "poll_symbol": ""
  },
  "0x5ee2d6": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5ee2d6>",
    "poll_symbol": ""
  },
  "0x5ee300": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5ee300>",
    "poll_symbol": ""
  },
  "0x5ee6bf": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5ee6bf>",
    "poll_symbol": ""
  },
  "0x5f099b": {
    "name": "ResponseFuture<0x5f099b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x5f1996": {
    "name": "{async_block_env#0}<0x5f1996>",
    "poll_symbol": ""
  },
  "0x5f200d": {
    "name": "GaiFuture<0x5f200d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5f28c2": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5f28c2>",
    "poll_symbol": ""
  },
  "0x5f2dc6": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x5f2dc6>",
    "poll_symbol": ""
  },
  "0x5f4f23": {
    "name": "{async_fn_env#0}<0x5f4f23>",
    "poll_symbol": ""
  },
  "0x5f5040": {
    "name": "{async_fn_env#0}<0x5f5040>",
    "poll_symbol": ""
  },
  "0x5f6f89": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5f6f89>",
    "poll_symbol": ""
  },
  "0x5f6fb0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5f6fb0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5f725b": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5f725b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x5f72a2": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5f72a2>",
    "poll_symbol": ""
  },
  "0x5f72a9": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5f72a9>",
    "poll_symbol": ""
  },
  "0x6055e5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6055e5>",
    "poll_symbol": ""
  },
  "0x605618": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x605618>",
    "poll_symbol": ""
  },
  "0x6056fd": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6056fd>",
    "poll_symbol": ""
  },
  "0x605739": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x605739>",
    "poll_symbol": ""
  },
  "0x605757": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x605757>",
    "poll_symbol": ""
  },
  "0x605c7f": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x605c7f>",
    "poll_symbol": ""
  },
  "0x605c9d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x605c9d>",
    "poll_symbol": ""
  },
  "0x605cbb": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x605cbb>",
    "poll_symbol": ""
  },
  "0x605d51": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x605d51>",
    "poll_symbol": ""
  },
  "0x607b4e": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x607b4e>",
    "poll_symbol": ""
  },
  "0x607b60": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x607b60>",
    "poll_symbol": ""
  },
  "0x607b96": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x607b96>",
    "poll_symbol": ""
  },
  "0x607cc8": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x607cc8>",
    "poll_symbol": ""
  },
  "0x60902f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x60902f>",
    "poll_symbol": ""
  },
  "0x60904d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x60904d>",
    "poll_symbol": ""
  },
  "0x6090c5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x6090c5>",
    "poll_symbol": ""
  },
  "0x6090e3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x6090e3>",
    "poll_symbol": ""
  },
  "0x609fc3": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x609fc3>",
    "poll_symbol": ""
  },
  "0x60a086": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60a086>",
    "poll_symbol": ""
  },
  "0x60cc76": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x60cc76>",
    "poll_symbol": ""
  },
  "0x60d7f1": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x60d7f1>",
    "poll_symbol": ""
  },
  "0x60d830": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x60d830>",
    "poll_symbol": ""
  },
  "0x60d86f": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x60d86f>",
    "poll_symbol": ""
  },
  "0x60d8a5": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x60d8a5>",
    "poll_symbol": ""
  },
  "0x60d8db": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x60d8db>",
    "poll_symbol": ""
  },
  "0x60d91a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x60d91a>",
    "poll_symbol": ""
  },
  "0x60dab0": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x60dab0>",
    "poll_symbol": ""
  },
  "0x60daef": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x60daef>",
    "poll_symbol": ""
  },
  "0x60f203": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x60f203>",
    "poll_symbol": ""
  },
  "0x614623": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x614623>",
    "poll_symbol": ""
  },
  "0x61464d": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x61464d>",
    "poll_symbol": ""
  },
  "0x615576": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x615576>",
    "poll_symbol": ""
  },
  "0x61557d": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x61557d>",
    "poll_symbol": ""
  },
  "0x656f76": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x656f76>",
    "poll_symbol": ""
  },
  "0x657312": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x657312>",
    "poll_symbol": ""
  },
  "0x65738d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x65738d>",
    "poll_symbol": ""
  },
  "0x657fab": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x657fab>",
    "poll_symbol": ""
  },
  "0x657fc9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x657fc9>",
    "poll_symbol": ""
  },
  "0x658ac1": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x658ac1>",
    "poll_symbol": ""
  },
  "0x658b2d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x658b2d>",
    "poll_symbol": ""
  },
  "0x658b3f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x658b3f>",
    "poll_symbol": ""
  },
  "0x658c81": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x658c81>",
    "poll_symbol": ""
  },
  "0x658d71": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x658d71>",
    "poll_symbol": ""
  },
  "0x658d8f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x658d8f>",
    "poll_symbol": ""
  },
  "0x6599fe": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6599fe>",
    "poll_symbol": ""
  },
  "0x65f0a3": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x65f0a3>",
    "poll_symbol": ""
  },
  "0x65f0d9": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x65f0d9>",
    "poll_symbol": ""
  },
  "0x65f5a0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x65f5a0>",
    "poll_symbol": ""
  },
  "0x65f5d6": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x65f5d6>",
    "poll_symbol": ""
  },
  "0x65f680": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x65f680>",
    "poll_symbol": ""
  },
  "0x65f6b6": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x65f6b6>",
    "poll_symbol": ""
  },
  "0x661a8f": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x661b45": {
    "name": "Weak<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x661bfb": {
    "name": "Weak<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x6646f7": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6646f7>",
    "poll_symbol": ""
  },
  "0x667080": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x667080>",
    "poll_symbol": ""
  },
  "0x6670aa": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6670aa>",
    "poll_symbol": ""
  },
  "0x6671cc": {
    "name": "(*mut alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x667d6d": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x667f63": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x66bf35": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x66bf35>",
    "poll_symbol": ""
  },
  "0x66bfe4": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x66bfe4>",
    "poll_symbol": ""
  },
  "0x66c618": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x66c618>",
    "poll_symbol": ""
  },
  "0x66c6ee": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x66c6ee>",
    "poll_symbol": ""
  },
  "0x66c72b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x66c72b>",
    "poll_symbol": ""
  },
  "0x66c895": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x66c895>",
    "poll_symbol": ""
  },
  "0x66c8b3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x66c8b3>",
    "poll_symbol": ""
  },
  "0x66cadb": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x66cadb>",
    "poll_symbol": ""
  },
  "0x66caed": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x66caed>",
    "poll_symbol": ""
  },
  "0x66d4da": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x66d4da>",
    "poll_symbol": ""
  },
  "0x66d59d": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66d59d>",
    "poll_symbol": ""
  },
  "0x66d5fe": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x66d5fe>",
    "poll_symbol": ""
  },
  "0x66db11": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x66e414": {
    "name": "Poll<core::result::Result<(), futures_channel::mpsc::SendError>>",
    "poll_symbol": ""
  },
  "0x66f71c": {
    "name": "Result<(), futures_channel::mpsc::SendError>",
    "poll_symbol": ""
  },
  "0x66f79b": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x66f81a": {
    "name": "Result<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>, std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>><0x66f81a>",
    "poll_symbol": ""
  },
  "0x66fec1": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError>",
    "poll_symbol": ""
  },
  "0x670c6f": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x67115f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x67115f>",
    "poll_symbol": ""
  },
  "0x67119e": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x67119e>",
    "poll_symbol": ""
  },
  "0x6711dd": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x6711dd>",
    "poll_symbol": ""
  },
  "0x671213": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x671213>",
    "poll_symbol": ""
  },
  "0x67249d": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>><0x67249d>",
    "poll_symbol": ""
  },
  "0x6724c0": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask><0x6724c0>",
    "poll_symbol": ""
  },
  "0x672509": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x672509>",
    "poll_symbol": ""
  },
  "0x6727d9": {
    "name": "{closure_env#0}<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0x673470": {
    "name": "<std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>> as core::fmt::Debug>::{vtable_type}<0x673470>",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x673779": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x673779>",
    "poll_symbol": ""
  },
  "0x6737a3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6737a3>",
    "poll_symbol": ""
  },
  "0x678087": {
    "name": "(futures_channel::mpsc::Sender<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x67b1dd": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<core::task::wake::Waker>>>",
    "poll_symbol": ""
  },
  "0x67b23e": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": ""
  },
  "0x67bd05": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x67bd05>",
    "poll_symbol": ""
  },
  "0x67cdf4": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x67cdf4>",
    "poll_symbol": ""
  },
  "0x67d446": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x67d446>",
    "poll_symbol": ""
  },
  "0x67d538": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError><0x67d538>",
    "poll_symbol": ""
  },
  "0x67d796": {
    "name": "Result<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::SendError>",
    "poll_symbol": ""
  },
  "0x67d87e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x67d87e>",
    "poll_symbol": ""
  },
  "0x67d89c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x67d89c>",
    "poll_symbol": ""
  },
  "0x67da2b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x67da2b>",
    "poll_symbol": ""
  },
  "0x67da49": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x67da49>",
    "poll_symbol": ""
  },
  "0x67da67": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x67da67>",
    "poll_symbol": ""
  },
  "0x67db92": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x67db92>",
    "poll_symbol": ""
  },
  "0x67dbb0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x67dbb0>",
    "poll_symbol": ""
  },
  "0x67de1d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x67de1d>",
    "poll_symbol": ""
  },
  "0x67de2f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x67de2f>",
    "poll_symbol": ""
  },
  "0x67ff62": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, futures_channel::mpsc::SendError>, &mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x6808e8": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6808e8>",
    "poll_symbol": ""
  },
  "0x6819c7": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x6819c7>",
    "poll_symbol": ""
  },
  "0x681a06": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x681a06>",
    "poll_symbol": ""
  },
  "0x681a45": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x681a45>",
    "poll_symbol": ""
  },
  "0x681a7b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x681a7b>",
    "poll_symbol": ""
  },
  "0x681dba": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x681dba>",
    "poll_symbol": ""
  },
  "0x681de4": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x681de4>",
    "poll_symbol": ""
  },
  "0x68821d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x68821d>",
    "poll_symbol": ""
  },
  "0x688265": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x688265>",
    "poll_symbol": ""
  },
  "0x6882c6": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6882c6>",
    "poll_symbol": ""
  },
  "0x688320": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x688320>",
    "poll_symbol": ""
  },
  "0x68833e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x68833e>",
    "poll_symbol": ""
  },
  "0x688482": {
    "name": "Unique<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x6884f1": {
    "name": "Unique<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x6887ee": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6887ee>",
    "poll_symbol": ""
  },
  "0x68880c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x68880c>",
    "poll_symbol": ""
  },
  "0x68882a": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x68888e": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x6889f6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6889f6>",
    "poll_symbol": ""
  },
  "0x689489": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x689489>",
    "poll_symbol": ""
  },
  "0x6894e3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6894e3>",
    "poll_symbol": ""
  },
  "0x689519": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x68952b": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x6895a9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6895a9>",
    "poll_symbol": ""
  },
  "0x689ac5": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x689ac5>",
    "poll_symbol": ""
  },
  "0x689eb5": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x689eb5>",
    "poll_symbol": ""
  },
  "0x68aeb0": {
    "name": "Result<http::header::map::HeaderMap<http::header::value::HeaderValue>, futures_channel::oneshot::Canceled>",
    "poll_symbol": ""
  },
  "0x68b4df": {
    "name": "Poll<core::result::Result<http::header::map::HeaderMap<http::header::value::HeaderValue>, futures_channel::oneshot::Canceled>>",
    "poll_symbol": ""
  },
  "0x68ccca": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0x68cd07": {
    "name": "Pin<&futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0x68cd44": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x68cd44>",
    "poll_symbol": ""
  },
  "0x68cdbf": {
    "name": "Pin<&futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x68f80c": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x68f80c>",
    "poll_symbol": ""
  },
  "0x68f84b": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x68f84b>",
    "poll_symbol": ""
  },
  "0x68f881": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x68f881>",
    "poll_symbol": ""
  },
  "0x68f8c0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x68f8c0>",
    "poll_symbol": ""
  },
  "0x68f9e0": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x68f9e0>",
    "poll_symbol": ""
  },
  "0x68fa1f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x68fa1f>",
    "poll_symbol": ""
  },
  "0x6901c0": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6901c0>",
    "poll_symbol": ""
  },
  "0x6915b0": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6915b0>",
    "poll_symbol": ""
  },
  "0x691696": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x691696>",
    "poll_symbol": ""
  },
  "0x6917b6": {
    "name": "PopResult<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x694a61": {
    "name": "(futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>, futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h94e16d934373fe43E"
  },
  "0x6963fe": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6963fe>",
    "poll_symbol": ""
  },
  "0x6964c1": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6964c1>",
    "poll_symbol": ""
  },
  "0x6968fa": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6968fa>",
    "poll_symbol": ""
  },
  "0x69695b": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x69695b>",
    "poll_symbol": ""
  },
  "0x696d7d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x696d7d>",
    "poll_symbol": ""
  },
  "0x696dc5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x696dc5>",
    "poll_symbol": ""
  },
  "0x696e9e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x696e9e>",
    "poll_symbol": ""
  },
  "0x696ef8": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x696ef8>",
    "poll_symbol": ""
  },
  "0x696f16": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x696f16>",
    "poll_symbol": ""
  },
  "0x697216": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x697216>",
    "poll_symbol": ""
  },
  "0x697234": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x697234>",
    "poll_symbol": ""
  },
  "0x697252": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x697252>",
    "poll_symbol": ""
  },
  "0x6977f4": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6977f4>",
    "poll_symbol": ""
  },
  "0x697806": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x697806>",
    "poll_symbol": ""
  },
  "0x69783c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x69783c>",
    "poll_symbol": ""
  },
  "0x69b993": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x69b993>",
    "poll_symbol": ""
  },
  "0x69b9d2": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x69b9d2>",
    "poll_symbol": ""
  },
  "0x69ba11": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x69ba11>",
    "poll_symbol": ""
  },
  "0x69ba47": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x69ba47>",
    "poll_symbol": ""
  },
  "0x69ba7d": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x69ba7d>",
    "poll_symbol": ""
  },
  "0x69babc": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x69babc>",
    "poll_symbol": ""
  },
  "0x69e52e": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x69e52e>",
    "poll_symbol": ""
  },
  "0x69f579": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x69f579>",
    "poll_symbol": ""
  },
  "0x69f5a3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x69f5a3>",
    "poll_symbol": ""
  },
  "0x6a43f3": {
    "name": "Poll<core::result::Result<(), futures_channel::mpsc::SendError>><0x6a43f3>",
    "poll_symbol": ""
  },
  "0x6a5f8b": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x6a5f8b>",
    "poll_symbol": ""
  },
  "0x6a6279": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError><0x6a6279>",
    "poll_symbol": ""
  },
  "0x6aec52": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6aec52>",
    "poll_symbol": ""
  },
  "0x6aec70": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6aec70>",
    "poll_symbol": ""
  },
  "0x6aed0d": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x6aed0d>",
    "poll_symbol": ""
  },
  "0x6aedc1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6aedc1>",
    "poll_symbol": ""
  },
  "0x6aeddf": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6aeddf>",
    "poll_symbol": ""
  },
  "0x6af1ec": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6af1ec>",
    "poll_symbol": ""
  },
  "0x6af228": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6af228>",
    "poll_symbol": ""
  },
  "0x6af246": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6af246>",
    "poll_symbol": ""
  },
  "0x6b21ba": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6b21ba>",
    "poll_symbol": ""
  },
  "0x6b21de": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6b21de>",
    "poll_symbol": ""
  },
  "0x6b21f0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6b21f0>",
    "poll_symbol": ""
  },
  "0x6b4801": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6b4801>",
    "poll_symbol": ""
  },
  "0x6b495e": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6b495e>",
    "poll_symbol": ""
  },
  "0x6b49de": {
    "name": "Option<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x6b4acd": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6b4acd>",
    "poll_symbol": ""
  },
  "0x6b4baa": {
    "name": "Option<&mut alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x6b4c0b": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6b4c0b>",
    "poll_symbol": ""
  },
  "0x6b4c8b": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6b4c8b>",
    "poll_symbol": ""
  },
  "0x6b7145": {
    "name": "Result<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::SendError><0x6b7145>",
    "poll_symbol": ""
  },
  "0x6b7459": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x6b7459>",
    "poll_symbol": ""
  },
  "0x6b76d6": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6b76d6>",
    "poll_symbol": ""
  },
  "0x6b89e2": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x6b89e2>",
    "poll_symbol": ""
  },
  "0x6b8a21": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x6b8a21>",
    "poll_symbol": ""
  },
  "0x6b8acc": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x6b8acc>",
    "poll_symbol": ""
  },
  "0x6b8b0b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6b8b0b>",
    "poll_symbol": ""
  },
  "0x6b8b41": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x6b8b41>",
    "poll_symbol": ""
  },
  "0x6b8b80": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6b8b80>",
    "poll_symbol": ""
  },
  "0x6b8e32": {
    "name": "Weak<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, &alloc::alloc::Global><0x6b8e32>",
    "poll_symbol": ""
  },
  "0x6b8e98": {
    "name": "Weak<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, &alloc::alloc::Global><0x6b8e98>",
    "poll_symbol": ""
  },
  "0x6b8f31": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, &alloc::alloc::Global><0x6b8f31>",
    "poll_symbol": ""
  },
  "0x6b9840": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6b9840>",
    "poll_symbol": ""
  },
  "0x6b990c": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask><0x6b990c>",
    "poll_symbol": ""
  },
  "0x6b99e0": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>><0x6b99e0>",
    "poll_symbol": ""
  },
  "0x6ba926": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6ba926>",
    "poll_symbol": ""
  },
  "0x6ba950": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6ba950>",
    "poll_symbol": ""
  },
  "0x7115e4": {
    "name": "{async_fn_env#0}<0x7115e4>",
    "poll_symbol": ""
  },
  "0x7116b7": {
    "name": "{async_fn_env#0}<0x7116b7>",
    "poll_symbol": ""
  },
  "0x71187f": {
    "name": "{async_fn_env#0}<0x71187f>",
    "poll_symbol": ""
  },
  "0x74ec39": {
    "name": "ResponseFuture<0x74ec39>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x74ec5a": {
    "name": "PushedResponseFuture",
    "poll_symbol": ""
  },
  "0x750d7a": {
    "name": "Pin<&mut h2::client::ResponseFuture><0x750d7a>",
    "poll_symbol": ""
  },
  "0x750df5": {
    "name": "Pin<&h2::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x750f97": {
    "name": "Pin<&mut h2::client::PushedResponseFuture>",
    "poll_symbol": ""
  },
  "0x765efa": {
    "name": "Pin<&mut h2::client::ResponseFuture><0x765efa>",
    "poll_symbol": ""
  },
  "0x765f18": {
    "name": "Pin<&mut h2::client::PushedResponseFuture><0x765f18>",
    "poll_symbol": ""
  },
  "0x7694bc": {
    "name": "ResponseFuture<0x7694bc>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1392b809b114e2bcE"
  },
  "0x769559": {
    "name": "{async_fn_env#0}<0x769559>",
    "poll_symbol": ""
  },
  "0x76968b": {
    "name": "PushedResponseFuture<0x76968b>",
    "poll_symbol": ""
  },
  "0x76eefe": {
    "name": "(http::request::Request<()>, h2::client::PushedResponseFuture)",
    "poll_symbol": "_ZN92_$LT$reqwest..async_impl..client..PendingRequest$u20$as$u20$core..future..future..Future$GT$4poll17h0231b9619b9e0d8bE"
  },
  "0x7db2f3": {
    "name": "WaitForCancellationFuture",
    "poll_symbol": ""
  },
  "0x7db32a": {
    "name": "WaitForCancellationFutureOwned",
    "poll_symbol": ""
  },
  "0x7db5b5": {
    "name": "ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>",
    "poll_symbol": ""
  },
  "0x7db71d": {
    "name": "{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7db914": {
    "name": "{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x7db93e": {
    "name": "CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x7dc772": {
    "name": "Option<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": ""
  },
  "0x7dc885": {
    "name": "{closure_env#0}<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": ""
  },
  "0x7dc89a": {
    "name": "Option<&mut (u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": ""
  },
  "0x7dd40f": {
    "name": "NonNull<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7dd44b": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7dd4e8": {
    "name": "Unique<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7dd530": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7ddf19": {
    "name": "PhantomData<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7ddf2b": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7dedd8": {
    "name": "Result<(), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7e0104": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x7e0140": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>>",
    "poll_symbol": ""
  },
  "0x7e01cb": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7e031e": {
    "name": "Pin<alloc::boxed::Box<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7e033c": {
    "name": "Pin<alloc::boxed::Box<core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7e035a": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7e0378": {
    "name": "Pin<&mut tokio_util::sync::cancellation_token::WaitForCancellationFuture>",
    "poll_symbol": ""
  },
  "0x7e0396": {
    "name": "Pin<&mut tokio_util::sync::cancellation_token::WaitForCancellationFutureOwned>",
    "poll_symbol": ""
  },
  "0x7e2ba5": {
    "name": "{async_fn_env#0}<0x7e2ba5>",
    "poll_symbol": ""
  },
  "0x7e324f": {
    "name": "<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x7e32a7": {
    "name": "<core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x7e374d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7e3774": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7e3926": {
    "name": "&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7e3a84": {
    "name": "(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)",
    "poll_symbol": ""
  },
  "0x7e52e4": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7e5bdf": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7e5d30": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7e6ce7": {
    "name": "{async_fn_env#0}<0x7e6ce7>",
    "poll_symbol": ""
  },
  "0x7e7813": {
    "name": "Option<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)><0x7e7813>",
    "poll_symbol": ""
  },
  "0x7e7ac5": {
    "name": "{closure_env#0}<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)><0x7e7ac5>",
    "poll_symbol": ""
  },
  "0x7eafb9": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>><0x7eafb9>",
    "poll_symbol": ""
  },
  "0x7eb087": {
    "name": "Pin<&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7eb13d": {
    "name": "Pin<alloc::boxed::Box<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, alloc::alloc::Global>><0x7eb13d>",
    "poll_symbol": ""
  },
  "0x7eb15b": {
    "name": "Pin<&mut core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>>",
    "poll_symbol": ""
  },
  "0x7eb1a2": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>><0x7eb1a2>",
    "poll_symbol": ""
  },
  "0x7ed17c": {
    "name": "{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>><0x7ed17c>",
    "poll_symbol": ""
  },
  "0x7ed1b5": {
    "name": "{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}><0x7ed1b5>",
    "poll_symbol": ""
  },
  "0x7ed1cb": {
    "name": "ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>><0x7ed1cb>",
    "poll_symbol": ""
  },
  "0x7ed1e9": {
    "name": "CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>><0x7ed1e9>",
    "poll_symbol": ""
  },
  "0x7eebcf": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7eebcf>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7eebf6": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7eebf6>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7eec31": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global><0x7eec31>",
    "poll_symbol": ""
  },
  "0x7efe45": {
    "name": "&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7efe45>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7eff57": {
    "name": "(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)<0x7eff57>",
    "poll_symbol": ""
  },
  "0x7f1a43": {
    "name": "<&*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x7f1aa9": {
    "name": "Task<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": "_ZN5tokio7runtime4task3raw7RawTask4poll17h07bf931f11d2e61bE"
  },
  "0x7f1b43": {
    "name": "Task<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": "_ZN5tokio7runtime4task3raw7RawTask4poll17h07bf931f11d2e61bE"
  },
  "0x7f1c4b": {
    "name": "ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7f1cac": {
    "name": "ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7f1e17": {
    "name": "FuturesUnordered<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7f1eaf": {
    "name": "FuturesUnordered<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7f229e": {
    "name": "PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>",
    "poll_symbol": ""
  },
  "0x7f22eb": {
    "name": "PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8><0x7f22eb>",
    "poll_symbol": ""
  },
  "0x7f25f9": {
    "name": "FutureObj<()>",
    "poll_symbol": ""
  },
  "0x7f2617": {
    "name": "LocalFutureObj<()>",
    "poll_symbol": ""
  },
  "0x7f26a1": {
    "name": "*mut dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7f26c8": {
    "name": "dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7f2720": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f2732": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f277a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::abortable::AbortInner>>",
    "poll_symbol": ""
  },
  "0x7f278c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f279e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f27b0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>>",
    "poll_symbol": ""
  },
  "0x7f27c8": {
    "name": "UnsafeCell<core::option::Option<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f2805": {
    "name": "UnsafeCell<*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f2842": {
    "name": "UnsafeCell<*const futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f2917": {
    "name": "UnsafeCell<core::option::Option<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f2954": {
    "name": "UnsafeCell<*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f2991": {
    "name": "UnsafeCell<*const futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f29d4": {
    "name": "Option<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7f2ab5": {
    "name": "Option<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7f2d26": {
    "name": "Option<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>",
    "poll_symbol": ""
  },
  "0x7f2feb": {
    "name": "Option<(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)>",
    "poll_symbol": ""
  },
  "0x7f304c": {
    "name": "Option<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8><0x7f304c>",
    "poll_symbol": ""
  },
  "0x7f30ae": {
    "name": "Option<(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)><0x7f30ae>",
    "poll_symbol": ""
  },
  "0x7f3255": {
    "name": "AtomicPtr<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f3416": {
    "name": "AtomicPtr<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f409f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f411a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f4176": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f41f1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7f439d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::abortable::AbortInner>>",
    "poll_symbol": ""
  },
  "0x7f4510": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>>",
    "poll_symbol": ""
  },
  "0x7f5f7c": {
    "name": "Result<(), futures_task::spawn::SpawnError>",
    "poll_symbol": ""
  },
  "0x7f66a6": {
    "name": "Weak<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f6701": {
    "name": "Arc<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f67fb": {
    "name": "ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f6831": {
    "name": "ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f6867": {
    "name": "Weak<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f68c2": {
    "name": "Arc<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f69bc": {
    "name": "ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f69f2": {
    "name": "ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f6ae4": {
    "name": "ArcInner<futures_util::abortable::AbortInner>",
    "poll_symbol": ""
  },
  "0x7f6b1a": {
    "name": "Arc<futures_util::abortable::AbortInner, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f6bc4": {
    "name": "Arc<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f6c53": {
    "name": "Arc<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f7de5": {
    "name": "Weak<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f7e40": {
    "name": "Weak<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f7e9b": {
    "name": "Weak<futures_util::abortable::AbortInner, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f8221": {
    "name": "ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>",
    "poll_symbol": ""
  },
  "0x7f8257": {
    "name": "Arc<futures_util::stream::stream::flatten_unordered::WrappedWaker, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f8a74": {
    "name": "<&*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0x7f9cf2": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x7f9ec1": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x7fa090": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::abortable::AbortInner>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x7fbc1f": {
    "name": "(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)",
    "poll_symbol": ""
  },
  "0x7fbcba": {
    "name": "(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)<0x7fbcba>",
    "poll_symbol": ""
  },
  "0x7fc705": {
    "name": "(futures_util::abortable::AbortHandle, futures_util::abortable::AbortRegistration)",
    "poll_symbol": ""
  },
  "0x7fc7b0": {
    "name": "(&futures_util::stream::stream::flatten_unordered::SharedPollState)",
    "poll_symbol": ""
  },
  "0x7fcc4c": {
    "name": "LocalFutureObj<()><0x7fcc4c>",
    "poll_symbol": ""
  },
  "0x7fcd1e": {
    "name": "FutureObj<()><0x7fcd1e>",
    "poll_symbol": ""
  },
  "0x7fd711": {
    "name": "NonNull<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7fd874": {
    "name": "Unique<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7fdb74": {
    "name": "PhantomData<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7fdc57": {
    "name": "ManuallyDrop<core::pin::Pin<alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x7fdc75": {
    "name": "ManuallyDrop<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x7fdd6b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x7fdd6b>",
    "poll_symbol": ""
  },
  "0x7fdda8": {
    "name": "Pin<alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7fdde5": {
    "name": "Pin<&mut dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7fde03": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)><0x7fde03>",
    "poll_symbol": ""
  },
  "0x7fe0d6": {
    "name": "dyn core::future::future::Future<Output=()><0x7fe0d6>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7fe0dd": {
    "name": "*const dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7fe11e": {
    "name": "*mut dyn core::future::future::Future<Output=()><0x7fe11e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7fe5c8": {
    "name": "alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7fe740": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x7fe740>",
    "poll_symbol": ""
  },
  "0x7fe767": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x7fe767>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7fe8a6": {
    "name": "&mut dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x7fe8ed": {
    "name": "&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)<0x7fe8ed>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0x9fcc67": {
    "name": "{async_fn_env#0}<0x9fcc67>",
    "poll_symbol": ""
  },
  "0x9fcecf": {
    "name": "{async_fn_env#0}<0x9fcecf>",
    "poll_symbol": ""
  },
  "0xa12d35": {
    "name": "{async_fn_env#0}<0xa12d35>",
    "poll_symbol": ""
  },
  "0xa12e83": {
    "name": "{async_fn_env#0}<0xa12e83>",
    "poll_symbol": ""
  },
  "0xa155ce": {
    "name": "{async_fn_env#0}<()>",
    "poll_symbol": ""
  },
  "0xa15689": {
    "name": "{async_fn_env#0}<()><0xa15689>",
    "poll_symbol": ""
  },
  "0xa159a2": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xa15b53": {
    "name": "{async_fn_env#0}<0xa15b53>",
    "poll_symbol": ""
  },
  "0xa15cf3": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>>",
    "poll_symbol": ""
  },
  "0xa15e3c": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0xa16162": {
    "name": "{async_fn_env#0}<0xa16162>",
    "poll_symbol": ""
  },
  "0xa16248": {
    "name": "{async_fn_env#0}<0xa16248>",
    "poll_symbol": ""
  },
  "0xa166b3": {
    "name": "{async_fn_env#0}<0xa166b3>",
    "poll_symbol": ""
  },
  "0xa16799": {
    "name": "{async_fn_env#0}<0xa16799>",
    "poll_symbol": ""
  },
  "0xa1e8ef": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xa21a7a": {
    "name": "Result<(), tokio::signal::make_future::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0xa24ed3": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xa28b5c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28b98": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28bf2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28ce2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28d00": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28d3c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28d78": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28d96": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28db4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28e2c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28ea4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28ec2": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0xa28f3a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28f58": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa28fb2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2902a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa291ec": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2920a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa292a0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa292be": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa292dc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29318": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29408": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2949e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa294bc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29552": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa295ac": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa295ca": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa295e8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29642": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2967e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa296d8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29732": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29804": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29840": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa298d6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa298f4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29912": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2994e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2996c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2998a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa299a8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29a20": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29af2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29b10": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29ba6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29c00": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29c96": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29cf0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29d0e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29d4a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29da4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa29dc2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa33383": {
    "name": "<tokio::signal::make_future::{async_fn_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN183_$LT$core..task..poll..Poll$LT$core..result..Result$LT$T$C$F$GT$$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h82811308e103d60cE"
  },
  "0xa3e97a": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa3e981": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa3ea9c": {
    "name": "&(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa3eb79": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa3ec5f": {
    "name": "&mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa3f4d2": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xa44036": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xa44036>",
    "poll_symbol": ""
  },
  "0xa49c81": {
    "name": "{async_fn_env#0}<0xa49c81>",
    "poll_symbol": ""
  },
  "0xa4accb": {
    "name": "{async_fn_env#0}<(mio::net::tcp::stream::TcpStream, core::net::socket_addr::SocketAddr), tokio::net::tcp::listener::{impl#0}::accept::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xa4ae6a": {
    "name": "{async_fn_env#0}<0xa4ae6a>",
    "poll_symbol": ""
  },
  "0xa4e446": {
    "name": "{async_fn_env#0}<tokio::fs::file::Inner>",
    "poll_symbol": ""
  },
  "0xa4e4ff": {
    "name": "{async_block_env#0}<tokio::fs::file::Inner>",
    "poll_symbol": ""
  },
  "0xa4e5ba": {
    "name": "{async_fn_env#0}<tokio::fs::file::Inner><0xa4e5ba>",
    "poll_symbol": ""
  },
  "0xa4e856": {
    "name": "{async_fn_env#0}<usize>",
    "poll_symbol": ""
  },
  "0xa4e911": {
    "name": "{async_fn_env#0}<usize><0xa4e911>",
    "poll_symbol": ""
  },
  "0xa4eb11": {
    "name": "{async_fn_env#0}<0xa4eb11>",
    "poll_symbol": ""
  },
  "0xa4ebc7": {
    "name": "{async_fn_env#0}<0xa4ebc7>",
    "poll_symbol": ""
  },
  "0xa4f6d6": {
    "name": "{async_fn_env#0}<0xa4f6d6>",
    "poll_symbol": ""
  },
  "0xa4fc70": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<usize>>",
    "poll_symbol": ""
  },
  "0xa4fd2e": {
    "name": "{async_fn_env#0}<0xa4fd2e>",
    "poll_symbol": ""
  },
  "0xa50044": {
    "name": "{async_fn_env#0}<0xa50044>",
    "poll_symbol": ""
  },
  "0xa501a1": {
    "name": "{async_fn_env#0}<0xa501a1>",
    "poll_symbol": ""
  },
  "0xa502fe": {
    "name": "{async_fn_env#0}<0xa502fe>",
    "poll_symbol": ""
  },
  "0xa504b0": {
    "name": "{async_fn_env#0}<0xa504b0>",
    "poll_symbol": ""
  },
  "0xa50583": {
    "name": "{async_fn_env#0}<0xa50583>",
    "poll_symbol": ""
  },
  "0xa506d5": {
    "name": "{async_fn_env#0}<0xa506d5>",
    "poll_symbol": ""
  },
  "0xa507a5": {
    "name": "{async_fn_env#0}<0xa507a5>",
    "poll_symbol": ""
  },
  "0xa508b5": {
    "name": "{async_fn_env#0}<0xa508b5>",
    "poll_symbol": ""
  },
  "0xa5188f": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::sync_all::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": ""
  },
  "0xa51943": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::sync_data::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": ""
  },
  "0xa519f7": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::metadata::{async_fn#0}::{closure_env#0}, std::fs::Metadata>",
    "poll_symbol": ""
  },
  "0xa51aab": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::try_clone::{async_fn#0}::{closure_env#0}, std::fs::File>",
    "poll_symbol": ""
  },
  "0xa51b5f": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::set_permissions::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": ""
  },
  "0xa521ce": {
    "name": "{async_block_env#0}<0xa521ce>",
    "poll_symbol": ""
  },
  "0xa5229a": {
    "name": "{async_block_env#0}<0xa5229a>",
    "poll_symbol": ""
  },
  "0xa5236c": {
    "name": "{async_fn_env#0}<0xa5236c>",
    "poll_symbol": ""
  },
  "0xa52431": {
    "name": "{async_fn_env#0}<0xa52431>",
    "poll_symbol": ""
  },
  "0xa52549": {
    "name": "{async_fn_env#0}<tokio::process::ChildStdout>",
    "poll_symbol": ""
  },
  "0xa52608": {
    "name": "{async_fn_env#0}<tokio::process::ChildStderr>",
    "poll_symbol": ""
  },
  "0xa526cf": {
    "name": "{async_fn_env#0}<0xa526cf>",
    "poll_symbol": ""
  },
  "0xa52c67": {
    "name": "RxFuture",
    "poll_symbol": ""
  },
  "0xa52c81": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xa52c81>",
    "poll_symbol": ""
  },
  "0xa52cab": {
    "name": "TryJoin3<tokio::process::{impl#5}::wait::{async_fn_env#0}, tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStdout>, tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStderr>>",
    "poll_symbol": ""
  },
  "0xa52cf9": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0xa52d87": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStdout>>",
    "poll_symbol": ""
  },
  "0xa52e15": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStderr>>",
    "poll_symbol": ""
  },
  "0xa596c3": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa596c3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa596ca": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa596ca>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa60747": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xa60747>",
    "poll_symbol": ""
  },
  "0xa6cecd": {
    "name": "{async_fn_env#0}<0xa6cecd>",
    "poll_symbol": ""
  },
  "0xa6d149": {
    "name": "{async_fn_env#0}<0xa6d149>",
    "poll_symbol": ""
  },
  "0xa70edc": {
    "name": "{async_fn_env#0}<0xa70edc>",
    "poll_symbol": ""
  },
  "0xa70fbe": {
    "name": "{async_fn_env#0}<0xa70fbe>",
    "poll_symbol": ""
  },
  "0xa710c8": {
    "name": "{async_fn_env#0}<0xa710c8>",
    "poll_symbol": ""
  },
  "0xa711ae": {
    "name": "{async_fn_env#0}<0xa711ae>",
    "poll_symbol": ""
  },
  "0xa7143c": {
    "name": "{async_fn_env#0}<0xa7143c>",
    "poll_symbol": ""
  },
  "0xa7151e": {
    "name": "{async_fn_env#0}<0xa7151e>",
    "poll_symbol": ""
  },
  "0xa715d4": {
    "name": "{async_fn_env#0}<0xa715d4>",
    "poll_symbol": ""
  },
  "0xa71909": {
    "name": "{async_fn_env#0}<0xa71909>",
    "poll_symbol": ""
  },
  "0xa71a06": {
    "name": "{async_fn_env#0}<0xa71a06>",
    "poll_symbol": ""
  },
  "0xa71ae4": {
    "name": "RxFuture<0xa71ae4>",
    "poll_symbol": ""
  },
  "0xa71afe": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xa71afe>",
    "poll_symbol": ""
  },
  "0xa71b27": {
    "name": "{async_fn_env#0}<0xa71b27>",
    "poll_symbol": ""
  },
  "0xa7e53f": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa7e53f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa7e546": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa7e546>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xa80fe9": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xa80fe9>",
    "poll_symbol": ""
  },
  "0xaa409e": {
    "name": "RxFuture<0xaa409e>",
    "poll_symbol": ""
  },
  "0xaa40b8": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xaa40b8>",
    "poll_symbol": ""
  },
  "0xaa43ee": {
    "name": "{async_fn_env#0}<0xaa43ee>",
    "poll_symbol": ""
  },
  "0xaa6ff8": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaa6ff8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xaa6fff": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaa6fff>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xaa7026": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaa7026>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xab9531": {
    "name": "{async_fn_env#0}<()><0xab9531>",
    "poll_symbol": ""
  },
  "0xab95ec": {
    "name": "{async_fn_env#0}<()><0xab95ec>",
    "poll_symbol": ""
  },
  "0xabb683": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xabb683>",
    "poll_symbol": ""
  },
  "0xabb6ad": {
    "name": "{async_fn_env#0}<0xabb6ad>",
    "poll_symbol": ""
  },
  "0xacc629": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xacc629>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xacc630": {
    "name": "&(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xacc630>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xadc97a": {
    "name": "Unique<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xade0a6": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xade0a6>",
    "poll_symbol": ""
  },
  "0xadf975": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xae6c1b": {
    "name": "Pin<&mut tokio::task::coop::Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>>",
    "poll_symbol": ""
  },
  "0xaeaa7b": {
    "name": "{async_fn_env#0}<0xaeaa7b>",
    "poll_symbol": ""
  },
  "0xaeacb6": {
    "name": "{async_fn_env#0}<0xaeacb6>",
    "poll_symbol": ""
  },
  "0xaead98": {
    "name": "{async_fn_env#0}<usize, tokio::net::tcp::stream::{impl#0}::peek::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xaec486": {
    "name": "{async_fn_env#0}<0xaec486>",
    "poll_symbol": ""
  },
  "0xaecf9c": {
    "name": "{async_fn_env#0}<()><0xaecf9c>",
    "poll_symbol": ""
  },
  "0xaed0fc": {
    "name": "{async_fn_env#0}<()><0xaed0fc>",
    "poll_symbol": ""
  },
  "0xaef03c": {
    "name": "{async_fn_env#0}<0xaef03c>",
    "poll_symbol": ""
  },
  "0xaef122": {
    "name": "{async_fn_env#0}<0xaef122>",
    "poll_symbol": ""
  },
  "0xaef2b0": {
    "name": "{async_fn_env#0}<0xaef2b0>",
    "poll_symbol": ""
  },
  "0xaef43e": {
    "name": "{async_fn_env#0}<0xaef43e>",
    "poll_symbol": ""
  },
  "0xaef548": {
    "name": "{async_fn_env#0}<0xaef548>",
    "poll_symbol": ""
  },
  "0xaef5fe": {
    "name": "{async_fn_env#0}<0xaef5fe>",
    "poll_symbol": ""
  },
  "0xaeff6a": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xaeff6a>",
    "poll_symbol": ""
  },
  "0xaf2fea": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaf2fea>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xaf2ff1": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaf2ff1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xaf3018": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaf3018>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xaf306c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global><0xaf306c>",
    "poll_symbol": ""
  },
  "0xafd5ce": {
    "name": "{async_fn_env#0}<0xafd5ce>",
    "poll_symbol": ""
  },
  "0xafd70e": {
    "name": "{async_fn_env#0}<0xafd70e>",
    "poll_symbol": ""
  },
  "0xb005d4": {
    "name": "{async_fn_env#0}<0xb005d4>",
    "poll_symbol": ""
  },
  "0xb006ae": {
    "name": "{async_fn_env#0}<0xb006ae>",
    "poll_symbol": ""
  },
  "0xb00790": {
    "name": "{async_fn_env#0}<0xb00790>",
    "poll_symbol": ""
  },
  "0xb0091a": {
    "name": "{async_fn_env#0}<0xb0091a>",
    "poll_symbol": ""
  },
  "0xb20815": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xb20815>",
    "poll_symbol": ""
  },
  "0xb34653": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xb34653>",
    "poll_symbol": ""
  },
  "0xb34668": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xb34668>",
    "poll_symbol": ""
  },
  "0xb34687": {
    "name": "RxFuture<0xb34687>",
    "poll_symbol": ""
  },
  "0xb346a1": {
    "name": "{async_fn_env#0}<0xb346a1>",
    "poll_symbol": ""
  },
  "0xb34857": {
    "name": "{async_fn_env#0}<()><0xb34857>",
    "poll_symbol": ""
  },
  "0xb3493c": {
    "name": "{async_fn_env#0}<()><0xb3493c>",
    "poll_symbol": ""
  },
  "0xb3673b": {
    "name": "{async_fn_env#0}<0xb3673b>",
    "poll_symbol": ""
  },
  "0xb36ecd": {
    "name": "{async_fn_env#0}<(mio::net::uds::stream::UnixStream, std::os::unix::net::addr::SocketAddr), tokio::net::unix::listener::{impl#0}::accept::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb3706c": {
    "name": "{async_fn_env#0}<0xb3706c>",
    "poll_symbol": ""
  },
  "0xb3c9e3": {
    "name": "{async_fn_env#0}<0xb3c9e3>",
    "poll_symbol": ""
  },
  "0xb3cdb8": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xb3cdb8>",
    "poll_symbol": ""
  },
  "0xb46ba5": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb46ba5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xb46bac": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb46bac>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xb473a8": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global><0xb473a8>",
    "poll_symbol": ""
  },
  "0xb48637": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb48637>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xb61025": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xb61025>",
    "poll_symbol": ""
  },
  "0xb6464c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6473c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb648a4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb649b2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb64b56": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb64b92": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb64c82": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb64e62": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb64e9e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb64f16": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb64f8e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6507e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb650ba": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6525e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6552e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb655a6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6561e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65786": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb657c2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6583a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb658b2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb659a2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb659de": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65a56": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65ace": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65b82": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65bfa": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65d26": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65d62": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65f06": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65f42": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb65f7e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0xb6606e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66122": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6619a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb663f2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6642e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6646a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb664e2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb665d2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb666fe": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6673a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66776": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb667ee": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66956": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66a46": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66b72": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66bae": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66c26": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66c9e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66d16": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66d52": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66e06": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb66ec6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb66ec6>",
    "poll_symbol": ""
  },
  "0xb66f3e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb66f3e>",
    "poll_symbol": ""
  },
  "0xb66fd4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb66fd4>",
    "poll_symbol": ""
  },
  "0xb6704c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6704c>",
    "poll_symbol": ""
  },
  "0xb6711e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6711e>",
    "poll_symbol": ""
  },
  "0xb6713c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6713c>",
    "poll_symbol": ""
  },
  "0xb671b4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb671b4>",
    "poll_symbol": ""
  },
  "0xb672a4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb672a4>",
    "poll_symbol": ""
  },
  "0xb672c2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb672c2>",
    "poll_symbol": ""
  },
  "0xb672fe": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb672fe>",
    "poll_symbol": ""
  },
  "0xb6733a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6733a>",
    "poll_symbol": ""
  },
  "0xb67394": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67394>",
    "poll_symbol": ""
  },
  "0xb673b2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb673b2>",
    "poll_symbol": ""
  },
  "0xb67484": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67484>",
    "poll_symbol": ""
  },
  "0xb675ec": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb675ec>",
    "poll_symbol": ""
  },
  "0xb6760a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6760a>",
    "poll_symbol": ""
  },
  "0xb67646": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67646>",
    "poll_symbol": ""
  },
  "0xb676dc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb676dc>",
    "poll_symbol": ""
  },
  "0xb676fa": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb676fa>",
    "poll_symbol": ""
  },
  "0xb67736": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67736>",
    "poll_symbol": ""
  },
  "0xb67772": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67772>",
    "poll_symbol": ""
  },
  "0xb677ea": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb677ea>",
    "poll_symbol": ""
  },
  "0xb67808": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67808>",
    "poll_symbol": ""
  },
  "0xb67844": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67844>",
    "poll_symbol": ""
  },
  "0xb67862": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67862>",
    "poll_symbol": ""
  },
  "0xb678bc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb678bc>",
    "poll_symbol": ""
  },
  "0xb678f8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb678f8>",
    "poll_symbol": ""
  },
  "0xb6798e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6798e>",
    "poll_symbol": ""
  },
  "0xb679ac": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb679ac>",
    "poll_symbol": ""
  },
  "0xb67a7e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67a7e>",
    "poll_symbol": ""
  },
  "0xb67a9c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67a9c>",
    "poll_symbol": ""
  },
  "0xb67aba": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>><0xb67aba>",
    "poll_symbol": ""
  },
  "0xb67b32": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67b32>",
    "poll_symbol": ""
  },
  "0xb67b8c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67b8c>",
    "poll_symbol": ""
  },
  "0xb67bc8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67bc8>",
    "poll_symbol": ""
  },
  "0xb67cf4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67cf4>",
    "poll_symbol": ""
  },
  "0xb67d12": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67d12>",
    "poll_symbol": ""
  },
  "0xb67d30": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67d30>",
    "poll_symbol": ""
  },
  "0xb67d6c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67d6c>",
    "poll_symbol": ""
  },
  "0xb67de4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67de4>",
    "poll_symbol": ""
  },
  "0xb67e5c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67e5c>",
    "poll_symbol": ""
  },
  "0xb67e7a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67e7a>",
    "poll_symbol": ""
  },
  "0xb67e98": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67e98>",
    "poll_symbol": ""
  },
  "0xb67ed4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67ed4>",
    "poll_symbol": ""
  },
  "0xb67f88": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb67f88>",
    "poll_symbol": ""
  },
  "0xb68000": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb68000>",
    "poll_symbol": ""
  },
  "0xb68096": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb68096>",
    "poll_symbol": ""
  },
  "0xb680b4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb680b4>",
    "poll_symbol": ""
  },
  "0xb680f0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb680f0>",
    "poll_symbol": ""
  },
  "0xb6812c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6812c>",
    "poll_symbol": ""
  },
  "0xb68168": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb68168>",
    "poll_symbol": ""
  },
  "0xb68186": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb68186>",
    "poll_symbol": ""
  },
  "0xb681e0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb681e0>",
    "poll_symbol": ""
  },
  "0xb6c271": {
    "name": "{async_fn_env#0}<0xb6c271>",
    "poll_symbol": ""
  },
  "0xb6c56e": {
    "name": "{async_fn_env#0}<0xb6c56e>",
    "poll_symbol": ""
  },
  "0xb6c650": {
    "name": "{async_fn_env#0}<usize, tokio::net::unix::datagram::socket::{impl#0}::send::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb6c7e9": {
    "name": "{async_fn_env#0}<usize, tokio::net::unix::datagram::socket::{impl#0}::recv::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb6c982": {
    "name": "{async_fn_env#0}<(usize, std::os::unix::net::addr::SocketAddr), tokio::net::unix::datagram::socket::{impl#0}::recv_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb74b59": {
    "name": "{async_fn_env#0}<0xb74b59>",
    "poll_symbol": ""
  },
  "0xb74c3b": {
    "name": "{async_fn_env#0}<0xb74c3b>",
    "poll_symbol": ""
  },
  "0xb74d2f": {
    "name": "{async_fn_env#0}<0xb74d2f>",
    "poll_symbol": ""
  },
  "0xb74e6d": {
    "name": "{async_fn_env#0}<0xb74e6d>",
    "poll_symbol": ""
  },
  "0xb74fc2": {
    "name": "{async_fn_env#0}<0xb74fc2>",
    "poll_symbol": ""
  },
  "0xb75117": {
    "name": "{async_fn_env#0}<0xb75117>",
    "poll_symbol": ""
  },
  "0xb75981": {
    "name": "{async_fn_env#0}<0xb75981>",
    "poll_symbol": ""
  },
  "0xb75bfe": {
    "name": "{async_fn_env#0}<0xb75bfe>",
    "poll_symbol": ""
  },
  "0xb75cd1": {
    "name": "{async_fn_env#0}<0xb75cd1>",
    "poll_symbol": ""
  },
  "0xb75da6": {
    "name": "{async_fn_env#0}<tokio::fs::read_dir::{impl#1}::metadata::{async_fn#0}::{closure_env#0}, std::fs::Metadata>",
    "poll_symbol": ""
  },
  "0xb75e5a": {
    "name": "{async_fn_env#0}<tokio::fs::read_dir::{impl#1}::file_type::{async_fn#0}::{closure_env#0}, std::fs::FileType>",
    "poll_symbol": ""
  },
  "0xb75f24": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xb75f24>",
    "poll_symbol": ""
  },
  "0xb75f39": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xb75f39>",
    "poll_symbol": ""
  },
  "0xb76569": {
    "name": "{async_fn_env#0}<0xb76569>",
    "poll_symbol": ""
  },
  "0xb766cf": {
    "name": "RxFuture<0xb766cf>",
    "poll_symbol": ""
  },
  "0xb766ee": {
    "name": "{async_fn_env#0}<0xb766ee>",
    "poll_symbol": ""
  },
  "0xb7a4fc": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb7a4fc>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xb7a503": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb7a503>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xb81180": {
    "name": "RxFuture<0xb81180>",
    "poll_symbol": ""
  },
  "0xb8119a": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xb8119a>",
    "poll_symbol": ""
  },
  "0xb832ae": {
    "name": "{async_fn_env#0}<0xb832ae>",
    "poll_symbol": ""
  },
  "0xb833fc": {
    "name": "{async_fn_env#0}<0xb833fc>",
    "poll_symbol": ""
  },
  "0xb85c5d": {
    "name": "{async_fn_env#0}<0xb85c5d>",
    "poll_symbol": ""
  },
  "0xb85d6e": {
    "name": "{async_fn_env#0}<0xb85d6e>",
    "poll_symbol": ""
  },
  "0xb85e50": {
    "name": "{async_fn_env#0}<0xb85e50>",
    "poll_symbol": ""
  },
  "0xb85f5e": {
    "name": "{async_fn_env#0}<0xb85f5e>",
    "poll_symbol": ""
  },
  "0xb86044": {
    "name": "{async_fn_env#0}<0xb86044>",
    "poll_symbol": ""
  },
  "0xb862d2": {
    "name": "{async_fn_env#0}<0xb862d2>",
    "poll_symbol": ""
  },
  "0xb863b8": {
    "name": "{async_fn_env#0}<0xb863b8>",
    "poll_symbol": ""
  },
  "0xb86472": {
    "name": "{async_fn_env#0}<0xb86472>",
    "poll_symbol": ""
  },
  "0xb92d4e": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xb92d4e>",
    "poll_symbol": ""
  },
  "0xba9855": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xba9855>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xba985c": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xba985c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xbbbc94": {
    "name": "{async_fn_env#0}<()><0xbbbc94>",
    "poll_symbol": ""
  },
  "0xbbbe25": {
    "name": "{async_fn_env#0}<()><0xbbbe25>",
    "poll_symbol": ""
  },
  "0xbbc121": {
    "name": "{async_fn_env#0}<0xbbc121>",
    "poll_symbol": ""
  },
  "0xbbc1e6": {
    "name": "{async_fn_env#0}<0xbbc1e6>",
    "poll_symbol": ""
  },
  "0xbbc2e2": {
    "name": "{async_fn_env#0}<0xbbc2e2>",
    "poll_symbol": ""
  },
  "0xbbc3a7": {
    "name": "{async_fn_env#0}<0xbbc3a7>",
    "poll_symbol": ""
  },
  "0xbbd400": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xbbd400>",
    "poll_symbol": ""
  },
  "0xbbd6d5": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xbbd6d5>",
    "poll_symbol": ""
  },
  "0xbbd6ea": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xbbd6ea>",
    "poll_symbol": ""
  },
  "0xbbd7d1": {
    "name": "{async_fn_env#0}<0xbbd7d1>",
    "poll_symbol": ""
  },
  "0xbbd88d": {
    "name": "RxFuture<0xbbd88d>",
    "poll_symbol": ""
  },
  "0xbbd8f0": {
    "name": "{async_fn_env#0}<0xbbd8f0>",
    "poll_symbol": ""
  },
  "0xbbf223": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xbbf223>",
    "poll_symbol": ""
  },
  "0xbc3051": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3051>",
    "poll_symbol": ""
  },
  "0xbc315f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc315f>",
    "poll_symbol": ""
  },
  "0xbc3213": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3213>",
    "poll_symbol": ""
  },
  "0xbc328b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc328b>",
    "poll_symbol": ""
  },
  "0xbc337b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc337b>",
    "poll_symbol": ""
  },
  "0xbc3411": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3411>",
    "poll_symbol": ""
  },
  "0xbc344d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc344d>",
    "poll_symbol": ""
  },
  "0xbc34a7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc34a7>",
    "poll_symbol": ""
  },
  "0xbc34e3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc34e3>",
    "poll_symbol": ""
  },
  "0xbc355b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>><0xbc355b>",
    "poll_symbol": ""
  },
  "0xbc35b5": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc35b5>",
    "poll_symbol": ""
  },
  "0xbc35f1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc35f1>",
    "poll_symbol": ""
  },
  "0xbc3687": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3687>",
    "poll_symbol": ""
  },
  "0xbc371d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc371d>",
    "poll_symbol": ""
  },
  "0xbc37b3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc37b3>",
    "poll_symbol": ""
  },
  "0xbc3867": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3867>",
    "poll_symbol": ""
  },
  "0xbc391b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc391b>",
    "poll_symbol": ""
  },
  "0xbc3a29": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3a29>",
    "poll_symbol": ""
  },
  "0xbc3abf": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3abf>",
    "poll_symbol": ""
  },
  "0xbc3b55": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3b55>",
    "poll_symbol": ""
  },
  "0xbc3c63": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3c63>",
    "poll_symbol": ""
  },
  "0xbc3cdb": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3cdb>",
    "poll_symbol": ""
  },
  "0xbc3d53": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3d53>",
    "poll_symbol": ""
  },
  "0xbc3dad": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3dad>",
    "poll_symbol": ""
  },
  "0xbc3de9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3de9>",
    "poll_symbol": ""
  },
  "0xbc3e43": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3e43>",
    "poll_symbol": ""
  },
  "0xbc3e7f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3e7f>",
    "poll_symbol": ""
  },
  "0xbc3ed9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3ed9>",
    "poll_symbol": ""
  },
  "0xbc3f15": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3f15>",
    "poll_symbol": ""
  },
  "0xbc3f6f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3f6f>",
    "poll_symbol": ""
  },
  "0xbc3fc9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc3fc9>",
    "poll_symbol": ""
  },
  "0xbc4005": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4005>",
    "poll_symbol": ""
  },
  "0xbc40b9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc40b9>",
    "poll_symbol": ""
  },
  "0xbc4113": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4113>",
    "poll_symbol": ""
  },
  "0xbc41c7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc41c7>",
    "poll_symbol": ""
  },
  "0xbc425d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc425d>",
    "poll_symbol": ""
  },
  "0xbc4299": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4299>",
    "poll_symbol": ""
  },
  "0xbc4311": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4311>",
    "poll_symbol": ""
  },
  "0xbc450f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc450f>",
    "poll_symbol": ""
  },
  "0xbc4587": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4587>",
    "poll_symbol": ""
  },
  "0xbc45e1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc45e1>",
    "poll_symbol": ""
  },
  "0xbc463b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc463b>",
    "poll_symbol": ""
  },
  "0xbc4677": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4677>",
    "poll_symbol": ""
  },
  "0xbc46b3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc46b3>",
    "poll_symbol": ""
  },
  "0xbc47df": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc47df>",
    "poll_symbol": ""
  },
  "0xbc481b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc481b>",
    "poll_symbol": ""
  },
  "0xbc4857": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4857>",
    "poll_symbol": ""
  },
  "0xbc4983": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4983>",
    "poll_symbol": ""
  },
  "0xbc49bf": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc49bf>",
    "poll_symbol": ""
  },
  "0xbc4a19": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4a19>",
    "poll_symbol": ""
  },
  "0xbc4a73": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4a73>",
    "poll_symbol": ""
  },
  "0xbc4acd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4acd>",
    "poll_symbol": ""
  },
  "0xbc4b45": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbc4b45>",
    "poll_symbol": ""
  },
  "0xbc4cc3": {
    "name": "Pin<&mut tokio::sync::watch::{impl#4}::changed::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xbc4d32": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4d32>",
    "poll_symbol": ""
  },
  "0xbc4dc8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4dc8>",
    "poll_symbol": ""
  },
  "0xbc4e22": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4e22>",
    "poll_symbol": ""
  },
  "0xbc4e7c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4e7c>",
    "poll_symbol": ""
  },
  "0xbc4f12": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4f12>",
    "poll_symbol": ""
  },
  "0xbc4f8a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4f8a>",
    "poll_symbol": ""
  },
  "0xbc4fa8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4fa8>",
    "poll_symbol": ""
  },
  "0xbc4fe4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc4fe4>",
    "poll_symbol": ""
  },
  "0xbc5002": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5002>",
    "poll_symbol": ""
  },
  "0xbc5020": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>><0xbc5020>",
    "poll_symbol": ""
  },
  "0xbc507a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc507a>",
    "poll_symbol": ""
  },
  "0xbc5098": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5098>",
    "poll_symbol": ""
  },
  "0xbc5110": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5110>",
    "poll_symbol": ""
  },
  "0xbc5188": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5188>",
    "poll_symbol": ""
  },
  "0xbc5200": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5200>",
    "poll_symbol": ""
  },
  "0xbc5296": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5296>",
    "poll_symbol": ""
  },
  "0xbc52f0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc52f0>",
    "poll_symbol": ""
  },
  "0xbc53a4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc53a4>",
    "poll_symbol": ""
  },
  "0xbc541c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc541c>",
    "poll_symbol": ""
  },
  "0xbc5494": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5494>",
    "poll_symbol": ""
  },
  "0xbc5584": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5584>",
    "poll_symbol": ""
  },
  "0xbc55a2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc55a2>",
    "poll_symbol": ""
  },
  "0xbc55fc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc55fc>",
    "poll_symbol": ""
  },
  "0xbc5638": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5638>",
    "poll_symbol": ""
  },
  "0xbc5656": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5656>",
    "poll_symbol": ""
  },
  "0xbc5692": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5692>",
    "poll_symbol": ""
  },
  "0xbc56b0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc56b0>",
    "poll_symbol": ""
  },
  "0xbc56ec": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc56ec>",
    "poll_symbol": ""
  },
  "0xbc570a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc570a>",
    "poll_symbol": ""
  },
  "0xbc5746": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5746>",
    "poll_symbol": ""
  },
  "0xbc5782": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5782>",
    "poll_symbol": ""
  },
  "0xbc57a0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc57a0>",
    "poll_symbol": ""
  },
  "0xbc5836": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5836>",
    "poll_symbol": ""
  },
  "0xbc5872": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5872>",
    "poll_symbol": ""
  },
  "0xbc58cc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc58cc>",
    "poll_symbol": ""
  },
  "0xbc5944": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5944>",
    "poll_symbol": ""
  },
  "0xbc5962": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5962>",
    "poll_symbol": ""
  },
  "0xbc5980": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5980>",
    "poll_symbol": ""
  },
  "0xbc5b60": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5b60>",
    "poll_symbol": ""
  },
  "0xbc5bba": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5bba>",
    "poll_symbol": ""
  },
  "0xbc5bf6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5bf6>",
    "poll_symbol": ""
  },
  "0xbc5c32": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5c32>",
    "poll_symbol": ""
  },
  "0xbc5c50": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5c50>",
    "poll_symbol": ""
  },
  "0xbc5c6e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5c6e>",
    "poll_symbol": ""
  },
  "0xbc5d7c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5d7c>",
    "poll_symbol": ""
  },
  "0xbc5d9a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5d9a>",
    "poll_symbol": ""
  },
  "0xbc5db8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5db8>",
    "poll_symbol": ""
  },
  "0xbc5ec6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5ec6>",
    "poll_symbol": ""
  },
  "0xbc5ee4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5ee4>",
    "poll_symbol": ""
  },
  "0xbc5f20": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5f20>",
    "poll_symbol": ""
  },
  "0xbc5f5c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5f5c>",
    "poll_symbol": ""
  },
  "0xbc5f98": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5f98>",
    "poll_symbol": ""
  },
  "0xbc5ff2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc5ff2>",
    "poll_symbol": ""
  },
  "0xbc94a5": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xbc94a5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xbc94ac": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xbc94ac>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xbcb3db": {
    "name": "{async_fn_env#0}<0xbcb3db>",
    "poll_symbol": ""
  },
  "0xbcbdb5": {
    "name": "{async_fn_env#0}<0xbcbdb5>",
    "poll_symbol": ""
  },
  "0xbcbe97": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::send::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbcc030": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::recv::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbcc1c9": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::send_to_addr::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbcc362": {
    "name": "{async_fn_env#0}<(usize, core::net::socket_addr::SocketAddr), tokio::net::udp::{impl#0}::recv_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbcc4fb": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::peek::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbcc694": {
    "name": "{async_fn_env#0}<(usize, core::net::socket_addr::SocketAddr), tokio::net::udp::{impl#0}::peek_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbcc82d": {
    "name": "{async_fn_env#0}<core::net::socket_addr::SocketAddr, tokio::net::udp::{impl#0}::peek_sender::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbcec77": {
    "name": "{async_fn_env#0}<()><0xbcec77>",
    "poll_symbol": ""
  },
  "0xbcf720": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xbcf720>",
    "poll_symbol": ""
  },
  "0xbcf762": {
    "name": "Projection<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xbd044d": {
    "name": "{async_fn_env#0}<0xbd044d>",
    "poll_symbol": ""
  },
  "0xbd055e": {
    "name": "{async_fn_env#0}<0xbd055e>",
    "poll_symbol": ""
  },
  "0xbd0640": {
    "name": "{async_fn_env#0}<0xbd0640>",
    "poll_symbol": ""
  },
  "0xbd07a4": {
    "name": "{async_fn_env#0}<0xbd07a4>",
    "poll_symbol": ""
  },
  "0xbd088a": {
    "name": "{async_fn_env#0}<0xbd088a>",
    "poll_symbol": ""
  },
  "0xbd0b24": {
    "name": "{async_fn_env#0}<0xbd0b24>",
    "poll_symbol": ""
  },
  "0xbd0c0a": {
    "name": "{async_fn_env#0}<0xbd0c0a>",
    "poll_symbol": ""
  },
  "0xbd0cc4": {
    "name": "{async_fn_env#0}<0xbd0cc4>",
    "poll_symbol": ""
  },
  "0xbd1361": {
    "name": "{async_fn_env#0}<0xbd1361>",
    "poll_symbol": ""
  },
  "0xbd1447": {
    "name": "{async_fn_env#0}<0xbd1447>",
    "poll_symbol": ""
  },
  "0xbd153f": {
    "name": "{async_fn_env#0}<0xbd153f>",
    "poll_symbol": ""
  },
  "0xbd16df": {
    "name": "{async_fn_env#0}<0xbd16df>",
    "poll_symbol": ""
  },
  "0xbd17d7": {
    "name": "{async_fn_env#0}<0xbd17d7>",
    "poll_symbol": ""
  },
  "0xbd19ea": {
    "name": "{async_fn_env#0}<0xbd19ea>",
    "poll_symbol": ""
  },
  "0xbd1b3c": {
    "name": "{async_fn_env#0}<0xbd1b3c>",
    "poll_symbol": ""
  },
  "0xbd1c91": {
    "name": "{async_fn_env#0}<0xbd1c91>",
    "poll_symbol": ""
  },
  "0xbd1de6": {
    "name": "{async_fn_env#0}<0xbd1de6>",
    "poll_symbol": ""
  },
  "0xbd1f3b": {
    "name": "{async_fn_env#0}<0xbd1f3b>",
    "poll_symbol": ""
  },
  "0xbd7752": {
    "name": "Pin<&mut tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xbd7770": {
    "name": "Pin<&mut tokio::task::coop::Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>><0xbd7770>",
    "poll_symbol": ""
  },
  "0xc1330b": {
    "name": "{async_fn_env#0}<0xc1330b>",
    "poll_symbol": ""
  },
  "0xc13519": {
    "name": "{async_fn_env#0}<0xc13519>",
    "poll_symbol": ""
  },
  "0xc165ba": {
    "name": "RxFuture<0xc165ba>",
    "poll_symbol": ""
  },
  "0xc165d4": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xc165d4>",
    "poll_symbol": ""
  },
  "0xc187d4": {
    "name": "{async_fn_env#0}<0xc187d4>",
    "poll_symbol": ""
  },
  "0xc188b6": {
    "name": "{async_fn_env#0}<0xc188b6>",
    "poll_symbol": ""
  },
  "0xc18a17": {
    "name": "{async_fn_env#0}<0xc18a17>",
    "poll_symbol": ""
  },
  "0xc18af9": {
    "name": "{async_fn_env#0}<0xc18af9>",
    "poll_symbol": ""
  },
  "0xc18dc8": {
    "name": "{async_fn_env#0}<0xc18dc8>",
    "poll_symbol": ""
  },
  "0xc18eaa": {
    "name": "{async_fn_env#0}<0xc18eaa>",
    "poll_symbol": ""
  },
  "0xc18f60": {
    "name": "{async_fn_env#0}<0xc18f60>",
    "poll_symbol": ""
  },
  "0xc1e046": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xc1e046>",
    "poll_symbol": ""
  },
  "0xc2778b": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xc2778b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  },
  "0xc27792": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xc27792>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h74fd2ce0c270d16aE"
  }
}